ARM GAS  C:\Users\philg\AppData\Local\Temp\ccf83JLl.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"VocoDaisy.cpp"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text._ZN5daisy9DaisySeedD2Ev,"axG",%progbits,_ZN5daisy9DaisySeedD5Ev,comdat
  17              		.align	1
  18              		.p2align 2,,3
  19              		.weak	_ZN5daisy9DaisySeedD2Ev
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv5-d16
  26              	_ZN5daisy9DaisySeedD2Ev:
  27              	.LVL0:
  28              	.LFB4466:
  29              		.file 1 "../DaisyExamples/libDaisy//src/daisy_seed.h"
   1:../DaisyExamples/libDaisy//src/daisy_seed.h **** #pragma once
   2:../DaisyExamples/libDaisy//src/daisy_seed.h **** #ifndef DSY_SEED_H
   3:../DaisyExamples/libDaisy//src/daisy_seed.h **** #define DSY_SEED_H
   4:../DaisyExamples/libDaisy//src/daisy_seed.h **** 
   5:../DaisyExamples/libDaisy//src/daisy_seed.h **** #include "daisy.h"
   6:../DaisyExamples/libDaisy//src/daisy_seed.h **** 
   7:../DaisyExamples/libDaisy//src/daisy_seed.h **** //Uncomment this out if you're still using the rev2 hardware
   8:../DaisyExamples/libDaisy//src/daisy_seed.h **** //#define SEED_REV2
   9:../DaisyExamples/libDaisy//src/daisy_seed.h **** 
  10:../DaisyExamples/libDaisy//src/daisy_seed.h **** namespace daisy
  11:../DaisyExamples/libDaisy//src/daisy_seed.h **** {
  12:../DaisyExamples/libDaisy//src/daisy_seed.h **** /**
  13:../DaisyExamples/libDaisy//src/daisy_seed.h ****    @brief This is the higher-level interface for the Daisy board. \n 
  14:../DaisyExamples/libDaisy//src/daisy_seed.h ****     All basic peripheral configuration/initialization is setup here. \n
  15:../DaisyExamples/libDaisy//src/daisy_seed.h **** 
  16:../DaisyExamples/libDaisy//src/daisy_seed.h ****    @ingroup boards
  17:../DaisyExamples/libDaisy//src/daisy_seed.h **** */
  18:../DaisyExamples/libDaisy//src/daisy_seed.h **** class DaisySeed
  19:../DaisyExamples/libDaisy//src/daisy_seed.h **** {
  20:../DaisyExamples/libDaisy//src/daisy_seed.h ****   public:
  21:../DaisyExamples/libDaisy//src/daisy_seed.h ****     DaisySeed() {}
  22:../DaisyExamples/libDaisy//src/daisy_seed.h ****     ~DaisySeed() {}
  30              		.loc 1 22 5 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              	.LBB71:
  36              	.LBI71:
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccf83JLl.s 			page 2


  37              		.file 2 "../DaisyExamples/libDaisy//src/sys/system.h"
   1:../DaisyExamples/libDaisy//src/sys/system.h **** #ifndef DSY_SYSTEM_H
   2:../DaisyExamples/libDaisy//src/sys/system.h **** #define DSY_SYSTEM_H
   3:../DaisyExamples/libDaisy//src/sys/system.h **** 
   4:../DaisyExamples/libDaisy//src/sys/system.h **** #ifndef UNIT_TEST // for unit tests, a dummy implementation is provided below
   5:../DaisyExamples/libDaisy//src/sys/system.h **** 
   6:../DaisyExamples/libDaisy//src/sys/system.h **** #include <cstdint>
   7:../DaisyExamples/libDaisy//src/sys/system.h **** #include "per/tim.h"
   8:../DaisyExamples/libDaisy//src/sys/system.h **** 
   9:../DaisyExamples/libDaisy//src/sys/system.h **** namespace daisy
  10:../DaisyExamples/libDaisy//src/sys/system.h **** {
  11:../DaisyExamples/libDaisy//src/sys/system.h **** /** A handle for interacting with the Core System.
  12:../DaisyExamples/libDaisy//src/sys/system.h ****  ** This includes the Clock tree, MPU, global DMA initialization,
  13:../DaisyExamples/libDaisy//src/sys/system.h ****  ** cache handling, and any other necessary global initiailzation
  14:../DaisyExamples/libDaisy//src/sys/system.h ****  **
  15:../DaisyExamples/libDaisy//src/sys/system.h ****  ** @author shensley
  16:../DaisyExamples/libDaisy//src/sys/system.h ****  ** @ingroup system
  17:../DaisyExamples/libDaisy//src/sys/system.h ****  */
  18:../DaisyExamples/libDaisy//src/sys/system.h **** class System
  19:../DaisyExamples/libDaisy//src/sys/system.h **** {
  20:../DaisyExamples/libDaisy//src/sys/system.h ****   public:
  21:../DaisyExamples/libDaisy//src/sys/system.h ****     /** Contains settings for initializing the System */
  22:../DaisyExamples/libDaisy//src/sys/system.h ****     struct Config
  23:../DaisyExamples/libDaisy//src/sys/system.h ****     {
  24:../DaisyExamples/libDaisy//src/sys/system.h ****         /** Specifies the system clock frequency that feeds APB/AHB clocks, etc. */
  25:../DaisyExamples/libDaisy//src/sys/system.h ****         enum class SysClkFreq
  26:../DaisyExamples/libDaisy//src/sys/system.h ****         {
  27:../DaisyExamples/libDaisy//src/sys/system.h ****             FREQ_400MHZ,
  28:../DaisyExamples/libDaisy//src/sys/system.h ****             FREQ_480MHZ,
  29:../DaisyExamples/libDaisy//src/sys/system.h ****         };
  30:../DaisyExamples/libDaisy//src/sys/system.h **** 
  31:../DaisyExamples/libDaisy//src/sys/system.h ****         /** Method to call on the struct to set to defaults
  32:../DaisyExamples/libDaisy//src/sys/system.h ****          ** CPU Freq set to 400MHz
  33:../DaisyExamples/libDaisy//src/sys/system.h ****          ** Cache Enabled
  34:../DaisyExamples/libDaisy//src/sys/system.h ****          ** */
  35:../DaisyExamples/libDaisy//src/sys/system.h ****         void Defaults()
  36:../DaisyExamples/libDaisy//src/sys/system.h ****         {
  37:../DaisyExamples/libDaisy//src/sys/system.h ****             cpu_freq    = SysClkFreq::FREQ_400MHZ;
  38:../DaisyExamples/libDaisy//src/sys/system.h ****             use_dcache  = true;
  39:../DaisyExamples/libDaisy//src/sys/system.h ****             use_icache  = true;
  40:../DaisyExamples/libDaisy//src/sys/system.h ****             skip_clocks = false;
  41:../DaisyExamples/libDaisy//src/sys/system.h ****         }
  42:../DaisyExamples/libDaisy//src/sys/system.h **** 
  43:../DaisyExamples/libDaisy//src/sys/system.h ****         /** Method to call on the struct to set to boost mode:
  44:../DaisyExamples/libDaisy//src/sys/system.h ****          ** CPU Freq set to 480MHz
  45:../DaisyExamples/libDaisy//src/sys/system.h ****          ** Cache Enabled
  46:../DaisyExamples/libDaisy//src/sys/system.h ****          ** */
  47:../DaisyExamples/libDaisy//src/sys/system.h ****         void Boost()
  48:../DaisyExamples/libDaisy//src/sys/system.h ****         {
  49:../DaisyExamples/libDaisy//src/sys/system.h ****             cpu_freq    = SysClkFreq::FREQ_480MHZ;
  50:../DaisyExamples/libDaisy//src/sys/system.h ****             use_dcache  = true;
  51:../DaisyExamples/libDaisy//src/sys/system.h ****             use_icache  = true;
  52:../DaisyExamples/libDaisy//src/sys/system.h ****             skip_clocks = false;
  53:../DaisyExamples/libDaisy//src/sys/system.h ****         }
  54:../DaisyExamples/libDaisy//src/sys/system.h **** 
  55:../DaisyExamples/libDaisy//src/sys/system.h ****         SysClkFreq cpu_freq;
  56:../DaisyExamples/libDaisy//src/sys/system.h ****         bool       use_dcache;
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccf83JLl.s 			page 3


  57:../DaisyExamples/libDaisy//src/sys/system.h ****         bool       use_icache;
  58:../DaisyExamples/libDaisy//src/sys/system.h ****         bool       skip_clocks;
  59:../DaisyExamples/libDaisy//src/sys/system.h ****     };
  60:../DaisyExamples/libDaisy//src/sys/system.h **** 
  61:../DaisyExamples/libDaisy//src/sys/system.h ****     /** Describes the different regions of memory available to the Daisy */
  62:../DaisyExamples/libDaisy//src/sys/system.h ****     enum MemoryRegion
  63:../DaisyExamples/libDaisy//src/sys/system.h ****     {
  64:../DaisyExamples/libDaisy//src/sys/system.h ****         INTERNAL_FLASH = 0,
  65:../DaisyExamples/libDaisy//src/sys/system.h ****         ITCMRAM,
  66:../DaisyExamples/libDaisy//src/sys/system.h ****         DTCMRAM,
  67:../DaisyExamples/libDaisy//src/sys/system.h ****         SRAM_D1,
  68:../DaisyExamples/libDaisy//src/sys/system.h ****         SRAM_D2,
  69:../DaisyExamples/libDaisy//src/sys/system.h ****         SRAM_D3,
  70:../DaisyExamples/libDaisy//src/sys/system.h ****         SDRAM,
  71:../DaisyExamples/libDaisy//src/sys/system.h ****         QSPI,
  72:../DaisyExamples/libDaisy//src/sys/system.h ****         INVALID_ADDRESS,
  73:../DaisyExamples/libDaisy//src/sys/system.h ****     };
  74:../DaisyExamples/libDaisy//src/sys/system.h **** 
  75:../DaisyExamples/libDaisy//src/sys/system.h ****     /** Bootloader struct for controlling bootloading parameters */
  76:../DaisyExamples/libDaisy//src/sys/system.h ****     struct BootInfo
  77:../DaisyExamples/libDaisy//src/sys/system.h ****     {
  78:../DaisyExamples/libDaisy//src/sys/system.h ****         enum class Type : uint32_t
  79:../DaisyExamples/libDaisy//src/sys/system.h ****         {
  80:../DaisyExamples/libDaisy//src/sys/system.h ****             INVALID      = 0x00000000,
  81:../DaisyExamples/libDaisy//src/sys/system.h ****             JUMP         = 0xDEADBEEF,
  82:../DaisyExamples/libDaisy//src/sys/system.h ****             SKIP_TIMEOUT = 0x5AFEB007,
  83:../DaisyExamples/libDaisy//src/sys/system.h ****             INF_TIMEOUT  = 0xB0074EFA,
  84:../DaisyExamples/libDaisy//src/sys/system.h ****         } status;
  85:../DaisyExamples/libDaisy//src/sys/system.h ****         uint32_t data;
  86:../DaisyExamples/libDaisy//src/sys/system.h ****         enum class Version : uint32_t
  87:../DaisyExamples/libDaisy//src/sys/system.h ****         {
  88:../DaisyExamples/libDaisy//src/sys/system.h ****             LT_v6_0 = 0, // Less than v6.0
  89:../DaisyExamples/libDaisy//src/sys/system.h ****             NONE,        // No bootloader present
  90:../DaisyExamples/libDaisy//src/sys/system.h ****             v6_0,        // v6.0
  91:../DaisyExamples/libDaisy//src/sys/system.h ****             v6_1,        // v6.1 or greater
  92:../DaisyExamples/libDaisy//src/sys/system.h ****             LAST
  93:../DaisyExamples/libDaisy//src/sys/system.h ****         } version;
  94:../DaisyExamples/libDaisy//src/sys/system.h ****     };
  95:../DaisyExamples/libDaisy//src/sys/system.h **** 
  96:../DaisyExamples/libDaisy//src/sys/system.h ****     System() {}
  97:../DaisyExamples/libDaisy//src/sys/system.h ****     ~System() {}
  38              		.loc 2 97 5 view .LVU1
  39              		.loc 2 97 5 is_stmt 0 view .LVU2
  40              	.LBE71:
  41              	.LBB72:
  42              	.LBI72:
  43              		.file 3 "../DaisyExamples/libDaisy//src/hid/usb.h"
   1:../DaisyExamples/libDaisy//src/hid/usb.h **** #pragma once
   2:../DaisyExamples/libDaisy//src/hid/usb.h **** #ifndef DSY_HID_USB_H
   3:../DaisyExamples/libDaisy//src/hid/usb.h **** #define DSY_HID_USB_H
   4:../DaisyExamples/libDaisy//src/hid/usb.h **** #include <stdint.h>
   5:../DaisyExamples/libDaisy//src/hid/usb.h **** #include <stdlib.h>
   6:../DaisyExamples/libDaisy//src/hid/usb.h **** 
   7:../DaisyExamples/libDaisy//src/hid/usb.h **** namespace daisy
   8:../DaisyExamples/libDaisy//src/hid/usb.h **** /** @addtogroup human_interface
   9:../DaisyExamples/libDaisy//src/hid/usb.h ****     @{
  10:../DaisyExamples/libDaisy//src/hid/usb.h **** */
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccf83JLl.s 			page 4


  11:../DaisyExamples/libDaisy//src/hid/usb.h **** 
  12:../DaisyExamples/libDaisy//src/hid/usb.h **** {
  13:../DaisyExamples/libDaisy//src/hid/usb.h **** /** 
  14:../DaisyExamples/libDaisy//src/hid/usb.h ****     @brief Interface for initializing and using the USB Peripherals on the daisy
  15:../DaisyExamples/libDaisy//src/hid/usb.h ****     @author Stephen Hensley
  16:../DaisyExamples/libDaisy//src/hid/usb.h ****     @date December 2019
  17:../DaisyExamples/libDaisy//src/hid/usb.h **** */
  18:../DaisyExamples/libDaisy//src/hid/usb.h **** class UsbHandle
  19:../DaisyExamples/libDaisy//src/hid/usb.h **** {
  20:../DaisyExamples/libDaisy//src/hid/usb.h ****   public:
  21:../DaisyExamples/libDaisy//src/hid/usb.h ****     /** Return values for USBHandle Functions */
  22:../DaisyExamples/libDaisy//src/hid/usb.h ****     enum class Result
  23:../DaisyExamples/libDaisy//src/hid/usb.h ****     {
  24:../DaisyExamples/libDaisy//src/hid/usb.h ****         OK,
  25:../DaisyExamples/libDaisy//src/hid/usb.h ****         ERR,
  26:../DaisyExamples/libDaisy//src/hid/usb.h ****     };
  27:../DaisyExamples/libDaisy//src/hid/usb.h **** 
  28:../DaisyExamples/libDaisy//src/hid/usb.h ****     /** Specified which of the two USB Peripherals to initialize. */
  29:../DaisyExamples/libDaisy//src/hid/usb.h ****     enum UsbPeriph
  30:../DaisyExamples/libDaisy//src/hid/usb.h ****     {
  31:../DaisyExamples/libDaisy//src/hid/usb.h ****         FS_INTERNAL, /**< Internal pin */
  32:../DaisyExamples/libDaisy//src/hid/usb.h ****         FS_EXTERNAL, /**< FS External D+ pin is Pin 38 (GPIO32). FS External D- pin is Pin 37 (GPIO
  33:../DaisyExamples/libDaisy//src/hid/usb.h ****         FS_BOTH,     /**< Both */
  34:../DaisyExamples/libDaisy//src/hid/usb.h ****     };
  35:../DaisyExamples/libDaisy//src/hid/usb.h **** 
  36:../DaisyExamples/libDaisy//src/hid/usb.h **** 
  37:../DaisyExamples/libDaisy//src/hid/usb.h ****     /** Function called upon reception of a buffer */
  38:../DaisyExamples/libDaisy//src/hid/usb.h ****     typedef void (*ReceiveCallback)(uint8_t* buff, uint32_t* len);
  39:../DaisyExamples/libDaisy//src/hid/usb.h **** 
  40:../DaisyExamples/libDaisy//src/hid/usb.h ****     UsbHandle() {}
  41:../DaisyExamples/libDaisy//src/hid/usb.h **** 
  42:../DaisyExamples/libDaisy//src/hid/usb.h ****     ~UsbHandle() {}
  44              		.loc 3 42 5 is_stmt 1 view .LVU3
  45              		.loc 3 42 5 is_stmt 0 view .LVU4
  46              	.LBE72:
  47              	.LBB73:
  48              	.LBI73:
  49              		.file 4 "../DaisyExamples/libDaisy//src/per/adc.h"
   1:../DaisyExamples/libDaisy//src/per/adc.h **** #pragma once
   2:../DaisyExamples/libDaisy//src/per/adc.h **** #ifndef DSY_ADC_H
   3:../DaisyExamples/libDaisy//src/per/adc.h **** #define DSY_ADC_H /**< Macro */
   4:../DaisyExamples/libDaisy//src/per/adc.h **** #include <stdint.h>
   5:../DaisyExamples/libDaisy//src/per/adc.h **** #include <stdlib.h>
   6:../DaisyExamples/libDaisy//src/per/adc.h **** #include "daisy_core.h"
   7:../DaisyExamples/libDaisy//src/per/adc.h **** #include "per/gpio.h"
   8:../DaisyExamples/libDaisy//src/per/adc.h **** 
   9:../DaisyExamples/libDaisy//src/per/adc.h **** #define DSY_ADC_MAX_CHANNELS 16 /**< Maximum number of ADC channels */
  10:../DaisyExamples/libDaisy//src/per/adc.h **** 
  11:../DaisyExamples/libDaisy//src/per/adc.h **** namespace daisy
  12:../DaisyExamples/libDaisy//src/per/adc.h **** {
  13:../DaisyExamples/libDaisy//src/per/adc.h **** /** @addtogroup per_analog
  14:../DaisyExamples/libDaisy//src/per/adc.h ****     @{
  15:../DaisyExamples/libDaisy//src/per/adc.h **** */
  16:../DaisyExamples/libDaisy//src/per/adc.h **** 
  17:../DaisyExamples/libDaisy//src/per/adc.h **** /* While there may not be many configuration options here,
  18:../DaisyExamples/libDaisy//src/per/adc.h **** using a struct like this allows us to add more configuration
  19:../DaisyExamples/libDaisy//src/per/adc.h **** later without breaking existing functionality.
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccf83JLl.s 			page 5


  20:../DaisyExamples/libDaisy//src/per/adc.h **** */
  21:../DaisyExamples/libDaisy//src/per/adc.h **** 
  22:../DaisyExamples/libDaisy//src/per/adc.h **** /** @brief   Configuration Structure for an ADC Channel 
  23:../DaisyExamples/libDaisy//src/per/adc.h ****  *  @details This can be used to configure a a single input, 
  24:../DaisyExamples/libDaisy//src/per/adc.h ****  *           or a multiplexed input, allowing up to 8 inputs on 
  25:../DaisyExamples/libDaisy//src/per/adc.h ****  *           one channel.
  26:../DaisyExamples/libDaisy//src/per/adc.h ****  *  @note    Sharing data lines to multiple muxes _is_ possible, but
  27:../DaisyExamples/libDaisy//src/per/adc.h ****  *           each channel sharing data lines must be set to the maximum
  28:../DaisyExamples/libDaisy//src/per/adc.h ****  *           number of channels, even if some multiplexers have fewer
  29:../DaisyExamples/libDaisy//src/per/adc.h ****  *           inputs connected.
  30:../DaisyExamples/libDaisy//src/per/adc.h **** */
  31:../DaisyExamples/libDaisy//src/per/adc.h **** struct AdcChannelConfig
  32:../DaisyExamples/libDaisy//src/per/adc.h **** {
  33:../DaisyExamples/libDaisy//src/per/adc.h ****     /** Which pin to use for multiplexing */
  34:../DaisyExamples/libDaisy//src/per/adc.h ****     enum MuxPin
  35:../DaisyExamples/libDaisy//src/per/adc.h ****     {
  36:../DaisyExamples/libDaisy//src/per/adc.h ****         MUX_SEL_0,    /**< & */
  37:../DaisyExamples/libDaisy//src/per/adc.h ****         MUX_SEL_1,    /**< & */
  38:../DaisyExamples/libDaisy//src/per/adc.h ****         MUX_SEL_2,    /**< & */
  39:../DaisyExamples/libDaisy//src/per/adc.h ****         MUX_SEL_LAST, /**< & */
  40:../DaisyExamples/libDaisy//src/per/adc.h ****     };
  41:../DaisyExamples/libDaisy//src/per/adc.h **** 
  42:../DaisyExamples/libDaisy//src/per/adc.h ****     /** \brief per channel conversion speed added to fixed time based on bitdepth, etc. */
  43:../DaisyExamples/libDaisy//src/per/adc.h ****     enum ConversionSpeed
  44:../DaisyExamples/libDaisy//src/per/adc.h ****     {
  45:../DaisyExamples/libDaisy//src/per/adc.h ****         SPEED_1CYCLES_5,
  46:../DaisyExamples/libDaisy//src/per/adc.h ****         SPEED_2CYCLES_5,
  47:../DaisyExamples/libDaisy//src/per/adc.h ****         SPEED_8CYCLES_5,
  48:../DaisyExamples/libDaisy//src/per/adc.h ****         SPEED_16CYCLES_5,
  49:../DaisyExamples/libDaisy//src/per/adc.h ****         SPEED_32CYCLES_5,
  50:../DaisyExamples/libDaisy//src/per/adc.h ****         SPEED_64CYCLES_5,
  51:../DaisyExamples/libDaisy//src/per/adc.h ****         SPEED_387CYCLES_5,
  52:../DaisyExamples/libDaisy//src/per/adc.h ****         SPEED_810CYCLES_5,
  53:../DaisyExamples/libDaisy//src/per/adc.h ****     };
  54:../DaisyExamples/libDaisy//src/per/adc.h **** 
  55:../DaisyExamples/libDaisy//src/per/adc.h ****     /** Initializes a single ADC pin as an ADC. 
  56:../DaisyExamples/libDaisy//src/per/adc.h ****     \param pin Pin to init.
  57:../DaisyExamples/libDaisy//src/per/adc.h ****     \param speed conversion speed for this pin defaults to 8.5 cycles
  58:../DaisyExamples/libDaisy//src/per/adc.h ****      */
  59:../DaisyExamples/libDaisy//src/per/adc.h ****     void InitSingle(dsy_gpio_pin pin, ConversionSpeed speed = SPEED_8CYCLES_5);
  60:../DaisyExamples/libDaisy//src/per/adc.h **** 
  61:../DaisyExamples/libDaisy//src/per/adc.h ****     /** 
  62:../DaisyExamples/libDaisy//src/per/adc.h ****     Initializes a single ADC pin as a Multiplexed ADC.
  63:../DaisyExamples/libDaisy//src/per/adc.h ****     Requires a CD405X Multiplexer connected to the pin.
  64:../DaisyExamples/libDaisy//src/per/adc.h ****     You only need to supply the mux pins that are required,
  65:../DaisyExamples/libDaisy//src/per/adc.h ****     e.g. a 4052 mux would only require mux_0 and mux_1.
  66:../DaisyExamples/libDaisy//src/per/adc.h ****     Internal Callbacks handle the pin addressing.
  67:../DaisyExamples/libDaisy//src/per/adc.h ****     \param adc_pin &
  68:../DaisyExamples/libDaisy//src/per/adc.h ****     \param mux_channels must be 1-8
  69:../DaisyExamples/libDaisy//src/per/adc.h ****     \param mux_0 First mux pin
  70:../DaisyExamples/libDaisy//src/per/adc.h ****     \param mux_1 Second mux pin
  71:../DaisyExamples/libDaisy//src/per/adc.h ****     \param mux_2 Third mux pin
  72:../DaisyExamples/libDaisy//src/per/adc.h ****     \param speed conversion speed for this pin defaults to 8.5 cycles
  73:../DaisyExamples/libDaisy//src/per/adc.h ****     */
  74:../DaisyExamples/libDaisy//src/per/adc.h ****     void InitMux(dsy_gpio_pin    adc_pin,
  75:../DaisyExamples/libDaisy//src/per/adc.h ****                  size_t          mux_channels,
  76:../DaisyExamples/libDaisy//src/per/adc.h ****                  dsy_gpio_pin    mux_0,
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccf83JLl.s 			page 6


  77:../DaisyExamples/libDaisy//src/per/adc.h ****                  dsy_gpio_pin    mux_1 = {DSY_GPIOX, 0},
  78:../DaisyExamples/libDaisy//src/per/adc.h ****                  dsy_gpio_pin    mux_2 = {DSY_GPIOX, 0},
  79:../DaisyExamples/libDaisy//src/per/adc.h ****                  ConversionSpeed speed = SPEED_8CYCLES_5);
  80:../DaisyExamples/libDaisy//src/per/adc.h **** 
  81:../DaisyExamples/libDaisy//src/per/adc.h ****     dsy_gpio        pin_;                   /**< & */
  82:../DaisyExamples/libDaisy//src/per/adc.h ****     dsy_gpio        mux_pin_[MUX_SEL_LAST]; /**< & */
  83:../DaisyExamples/libDaisy//src/per/adc.h ****     uint8_t         mux_channels_;          /**< & */
  84:../DaisyExamples/libDaisy//src/per/adc.h ****     ConversionSpeed speed_;
  85:../DaisyExamples/libDaisy//src/per/adc.h **** };
  86:../DaisyExamples/libDaisy//src/per/adc.h **** 
  87:../DaisyExamples/libDaisy//src/per/adc.h **** /**
  88:../DaisyExamples/libDaisy//src/per/adc.h ****    @brief Handler for analog to digital conversion
  89:../DaisyExamples/libDaisy//src/per/adc.h **** */
  90:../DaisyExamples/libDaisy//src/per/adc.h **** class AdcHandle
  91:../DaisyExamples/libDaisy//src/per/adc.h **** {
  92:../DaisyExamples/libDaisy//src/per/adc.h ****   public:
  93:../DaisyExamples/libDaisy//src/per/adc.h ****     /** Supported oversampling amounts */
  94:../DaisyExamples/libDaisy//src/per/adc.h ****     enum OverSampling
  95:../DaisyExamples/libDaisy//src/per/adc.h ****     {
  96:../DaisyExamples/libDaisy//src/per/adc.h ****         OVS_NONE, /**< & */
  97:../DaisyExamples/libDaisy//src/per/adc.h ****         OVS_4,    /**< & */
  98:../DaisyExamples/libDaisy//src/per/adc.h ****         OVS_8,    /**< & */
  99:../DaisyExamples/libDaisy//src/per/adc.h ****         OVS_16,   /**< & */
 100:../DaisyExamples/libDaisy//src/per/adc.h ****         OVS_32,   /**< & */
 101:../DaisyExamples/libDaisy//src/per/adc.h ****         OVS_64,   /**< & */
 102:../DaisyExamples/libDaisy//src/per/adc.h ****         OVS_128,  /**< & */
 103:../DaisyExamples/libDaisy//src/per/adc.h ****         OVS_256,  /**< & */
 104:../DaisyExamples/libDaisy//src/per/adc.h ****         OVS_512,  /**< & */
 105:../DaisyExamples/libDaisy//src/per/adc.h ****         OVS_1024, /**< & */
 106:../DaisyExamples/libDaisy//src/per/adc.h ****         OVS_LAST, /**< & */
 107:../DaisyExamples/libDaisy//src/per/adc.h ****     };
 108:../DaisyExamples/libDaisy//src/per/adc.h **** 
 109:../DaisyExamples/libDaisy//src/per/adc.h ****     AdcHandle() {}
 110:../DaisyExamples/libDaisy//src/per/adc.h ****     ~AdcHandle() {}
  50              		.loc 4 110 5 is_stmt 1 view .LVU5
  51              		.loc 4 110 5 is_stmt 0 view .LVU6
  52              	.LBE73:
  53              	.LBB74:
  54              	.LBI74:
  55              		.file 5 "../DaisyExamples/libDaisy//src/hid/audio.h"
   1:../DaisyExamples/libDaisy//src/hid/audio.h **** #ifndef DSY_AUDIO_H
   2:../DaisyExamples/libDaisy//src/hid/audio.h **** #define DSY_AUDIO_H /**< & */
   3:../DaisyExamples/libDaisy//src/hid/audio.h **** 
   4:../DaisyExamples/libDaisy//src/hid/audio.h **** #include "per/sai.h"
   5:../DaisyExamples/libDaisy//src/hid/audio.h **** 
   6:../DaisyExamples/libDaisy//src/hid/audio.h **** namespace daisy
   7:../DaisyExamples/libDaisy//src/hid/audio.h **** {
   8:../DaisyExamples/libDaisy//src/hid/audio.h **** /** @brief Audio Engine Handle
   9:../DaisyExamples/libDaisy//src/hid/audio.h ****  *  @ingroup audio 
  10:../DaisyExamples/libDaisy//src/hid/audio.h ****  *  @details This class allows for higher level access to an audio engine.
  11:../DaisyExamples/libDaisy//src/hid/audio.h ****  *           If you're using a SOM like the DaisySeed or DaisyPatchSM (or any 
  12:../DaisyExamples/libDaisy//src/hid/audio.h ****  *            board that includes one of those objects) then the intialization
  13:../DaisyExamples/libDaisy//src/hid/audio.h ****  *            is already taken  care of.
  14:../DaisyExamples/libDaisy//src/hid/audio.h ****  *           If you're setting up your own custom hardware, or need to make changes
  15:../DaisyExamples/libDaisy//src/hid/audio.h ****  *           you will have to take the following steps:
  16:../DaisyExamples/libDaisy//src/hid/audio.h ****  *             1. Create and Initialize an SaiHandle or two depending on your requirements
  17:../DaisyExamples/libDaisy//src/hid/audio.h ****  *             2. Initialize the Audio Handle with the desired settings and the Initialized SaiHand
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccf83JLl.s 			page 7


  18:../DaisyExamples/libDaisy//src/hid/audio.h ****  *             3. If the connected codec requires special configuration or initialization, do so
  19:../DaisyExamples/libDaisy//src/hid/audio.h ****  *             4. Write a callback method using either the AudioCallback or the InterleavingAudioCa
  20:../DaisyExamples/libDaisy//src/hid/audio.h ****  *             5. Start the Audio using one of the StartAudio function
  21:../DaisyExamples/libDaisy//src/hid/audio.h ****  */
  22:../DaisyExamples/libDaisy//src/hid/audio.h **** class AudioHandle
  23:../DaisyExamples/libDaisy//src/hid/audio.h **** {
  24:../DaisyExamples/libDaisy//src/hid/audio.h ****   public:
  25:../DaisyExamples/libDaisy//src/hid/audio.h ****     /** Manually configurable details about the Audio Engine */
  26:../DaisyExamples/libDaisy//src/hid/audio.h ****     /** TODO: Figure out how to get samplerate in here. */
  27:../DaisyExamples/libDaisy//src/hid/audio.h ****     struct Config
  28:../DaisyExamples/libDaisy//src/hid/audio.h ****     {
  29:../DaisyExamples/libDaisy//src/hid/audio.h ****         /** number of samples to process per callback */
  30:../DaisyExamples/libDaisy//src/hid/audio.h ****         size_t blocksize;
  31:../DaisyExamples/libDaisy//src/hid/audio.h **** 
  32:../DaisyExamples/libDaisy//src/hid/audio.h ****         /**< Sample rate of audio */
  33:../DaisyExamples/libDaisy//src/hid/audio.h ****         SaiHandle::Config::SampleRate samplerate;
  34:../DaisyExamples/libDaisy//src/hid/audio.h **** 
  35:../DaisyExamples/libDaisy//src/hid/audio.h ****         /** factor for adjustment before and after callback for hardware that may have extra headro
  36:../DaisyExamples/libDaisy//src/hid/audio.h ****         float postgain;
  37:../DaisyExamples/libDaisy//src/hid/audio.h **** 
  38:../DaisyExamples/libDaisy//src/hid/audio.h ****         /** factor for additional one-sided compensation to audio path for hardware that may
  39:../DaisyExamples/libDaisy//src/hid/audio.h ****          *  have unequal input/output ranges
  40:../DaisyExamples/libDaisy//src/hid/audio.h ****          */
  41:../DaisyExamples/libDaisy//src/hid/audio.h ****         float output_compensation;
  42:../DaisyExamples/libDaisy//src/hid/audio.h **** 
  43:../DaisyExamples/libDaisy//src/hid/audio.h ****         /** Sets default values for config struct */
  44:../DaisyExamples/libDaisy//src/hid/audio.h ****         Config()
  45:../DaisyExamples/libDaisy//src/hid/audio.h ****         : blocksize(48),
  46:../DaisyExamples/libDaisy//src/hid/audio.h ****           samplerate(SaiHandle::Config::SampleRate::SAI_48KHZ),
  47:../DaisyExamples/libDaisy//src/hid/audio.h ****           postgain(1.f),
  48:../DaisyExamples/libDaisy//src/hid/audio.h ****           output_compensation(1.f)
  49:../DaisyExamples/libDaisy//src/hid/audio.h ****         {
  50:../DaisyExamples/libDaisy//src/hid/audio.h ****         }
  51:../DaisyExamples/libDaisy//src/hid/audio.h ****     };
  52:../DaisyExamples/libDaisy//src/hid/audio.h **** 
  53:../DaisyExamples/libDaisy//src/hid/audio.h ****     enum class Result
  54:../DaisyExamples/libDaisy//src/hid/audio.h ****     {
  55:../DaisyExamples/libDaisy//src/hid/audio.h ****         OK,
  56:../DaisyExamples/libDaisy//src/hid/audio.h ****         ERR,
  57:../DaisyExamples/libDaisy//src/hid/audio.h ****     };
  58:../DaisyExamples/libDaisy//src/hid/audio.h **** 
  59:../DaisyExamples/libDaisy//src/hid/audio.h ****     /** Non-Interleaving input buffer
  60:../DaisyExamples/libDaisy//src/hid/audio.h ****      * Buffer arranged by float[chn][sample] 
  61:../DaisyExamples/libDaisy//src/hid/audio.h ****      * const so that the user can't modify the input
  62:../DaisyExamples/libDaisy//src/hid/audio.h ****      */
  63:../DaisyExamples/libDaisy//src/hid/audio.h ****     typedef const float* const* InputBuffer;
  64:../DaisyExamples/libDaisy//src/hid/audio.h **** 
  65:../DaisyExamples/libDaisy//src/hid/audio.h ****     /** Non-Interleaving output buffer
  66:../DaisyExamples/libDaisy//src/hid/audio.h ****      * Arranged by float[chn][sample] 
  67:../DaisyExamples/libDaisy//src/hid/audio.h ****      */
  68:../DaisyExamples/libDaisy//src/hid/audio.h ****     typedef float** OutputBuffer;
  69:../DaisyExamples/libDaisy//src/hid/audio.h **** 
  70:../DaisyExamples/libDaisy//src/hid/audio.h ****     /** Type for a Non-Interleaving audio callback 
  71:../DaisyExamples/libDaisy//src/hid/audio.h ****      * Non-Interleaving audio callbacks in daisy will be of this type
  72:../DaisyExamples/libDaisy//src/hid/audio.h ****      */
  73:../DaisyExamples/libDaisy//src/hid/audio.h ****     typedef void (*AudioCallback)(InputBuffer  in,
  74:../DaisyExamples/libDaisy//src/hid/audio.h ****                                   OutputBuffer out,
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccf83JLl.s 			page 8


  75:../DaisyExamples/libDaisy//src/hid/audio.h ****                                   size_t       size);
  76:../DaisyExamples/libDaisy//src/hid/audio.h **** 
  77:../DaisyExamples/libDaisy//src/hid/audio.h ****     /** Interleaving Input buffer
  78:../DaisyExamples/libDaisy//src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }]
  79:../DaisyExamples/libDaisy//src/hid/audio.h ****      ** this is const, as the user shouldn't modify it
  80:../DaisyExamples/libDaisy//src/hid/audio.h ****     */
  81:../DaisyExamples/libDaisy//src/hid/audio.h ****     typedef const float* InterleavingInputBuffer;
  82:../DaisyExamples/libDaisy//src/hid/audio.h **** 
  83:../DaisyExamples/libDaisy//src/hid/audio.h ****     /** Interleaving Output buffer 
  84:../DaisyExamples/libDaisy//src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }
  85:../DaisyExamples/libDaisy//src/hid/audio.h ****     */
  86:../DaisyExamples/libDaisy//src/hid/audio.h ****     typedef float* InterleavingOutputBuffer;
  87:../DaisyExamples/libDaisy//src/hid/audio.h **** 
  88:../DaisyExamples/libDaisy//src/hid/audio.h ****     /** Interleaving Audio Callback 
  89:../DaisyExamples/libDaisy//src/hid/audio.h ****      * Interleaving audio callbacks in daisy must be of this type
  90:../DaisyExamples/libDaisy//src/hid/audio.h ****      */
  91:../DaisyExamples/libDaisy//src/hid/audio.h ****     typedef void (*InterleavingAudioCallback)(InterleavingInputBuffer  in,
  92:../DaisyExamples/libDaisy//src/hid/audio.h ****                                               InterleavingOutputBuffer out,
  93:../DaisyExamples/libDaisy//src/hid/audio.h ****                                               size_t                   size);
  94:../DaisyExamples/libDaisy//src/hid/audio.h **** 
  95:../DaisyExamples/libDaisy//src/hid/audio.h ****     AudioHandle() : pimpl_(nullptr) {}
  96:../DaisyExamples/libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
  56              		.loc 5 96 5 is_stmt 1 view .LVU7
  57              		.loc 5 96 5 is_stmt 0 view .LVU8
  58              	.LBE74:
  59              		.loc 1 22 19 view .LVU9
  60 0000 7047     		bx	lr
  61              		.cfi_endproc
  62              	.LFE4466:
  64              		.weak	_ZN5daisy9DaisySeedD1Ev
  65              		.thumb_set _ZN5daisy9DaisySeedD1Ev,_ZN5daisy9DaisySeedD2Ev
  66 0002 00BF     		.section	.text._Z13AudioCallbackPKPKfPPfj,"ax",%progbits
  67              		.align	1
  68              		.p2align 2,,3
  69              		.global	_Z13AudioCallbackPKPKfPPfj
  70              		.syntax unified
  71              		.thumb
  72              		.thumb_func
  73              		.fpu fpv5-d16
  75              	_Z13AudioCallbackPKPKfPPfj:
  76              	.LVL1:
  77              	.LFB5972:
  78              		.file 6 "src/VocoDaisy.cpp"
   1:src/VocoDaisy.cpp **** #include "daisy_seed.h"
   2:src/VocoDaisy.cpp **** #include "daisysp.h"
   3:src/VocoDaisy.cpp **** #include "TalkBoxProcessor.h"
   4:src/VocoDaisy.cpp **** 
   5:src/VocoDaisy.cpp **** using namespace daisy;
   6:src/VocoDaisy.cpp **** using namespace daisysp;
   7:src/VocoDaisy.cpp **** 
   8:src/VocoDaisy.cpp **** DaisySeed hw;
   9:src/VocoDaisy.cpp **** TalkBoxProcessor talkbox;
  10:src/VocoDaisy.cpp **** 
  11:src/VocoDaisy.cpp **** // Optional: parameters struct for initialization
  12:src/VocoDaisy.cpp **** TalkBoxParams tb_params;
  13:src/VocoDaisy.cpp **** 
  14:src/VocoDaisy.cpp **** void AudioCallback(AudioHandle::InputBuffer in, AudioHandle::OutputBuffer out, size_t size)
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccf83JLl.s 			page 9


  15:src/VocoDaisy.cpp **** {
  79              		.loc 6 15 1 is_stmt 1 view -0
  80              		.cfi_startproc
  81              		@ args = 0, pretend = 0, frame = 0
  82              		@ frame_needed = 0, uses_anonymous_args = 0
  16:src/VocoDaisy.cpp ****     // Process the block
  17:src/VocoDaisy.cpp ****     talkbox.processBlock(
  83              		.loc 6 17 5 view .LVU11
  15:src/VocoDaisy.cpp ****     // Process the block
  84              		.loc 6 15 1 is_stmt 0 view .LVU12
  85 0000 10B5     		push	{r4, lr}
  86              		.cfi_def_cfa_offset 8
  87              		.cfi_offset 4, -8
  88              		.cfi_offset 14, -4
  89 0002 82B0     		sub	sp, sp, #8
  90              		.cfi_def_cfa_offset 16
  91              		.loc 6 17 25 view .LVU13
  92 0004 0192     		str	r2, [sp, #4]
  93 0006 D1E90034 		ldrd	r3, r4, [r1]
  94 000a D0E90012 		ldrd	r1, r2, [r0]
  95              	.LVL2:
  96              		.loc 6 17 25 view .LVU14
  97 000e 0348     		ldr	r0, .L5
  98              	.LVL3:
  99              		.loc 6 17 25 view .LVU15
 100 0010 0094     		str	r4, [sp]
 101 0012 FFF7FEFF 		bl	_ZN16TalkBoxProcessor12processBlockEPKfS1_PfS2_l
 102              	.LVL4:
  18:src/VocoDaisy.cpp ****         in[0],      // modulator (voice)
  19:src/VocoDaisy.cpp ****         in[1],      // carrier
  20:src/VocoDaisy.cpp ****         out[0],     // left output
  21:src/VocoDaisy.cpp ****         out[1],     // right output
  22:src/VocoDaisy.cpp ****         size
  23:src/VocoDaisy.cpp ****     );
  24:src/VocoDaisy.cpp **** }
 103              		.loc 6 24 1 view .LVU16
 104 0016 02B0     		add	sp, sp, #8
 105              		.cfi_def_cfa_offset 8
 106              		@ sp needed
 107 0018 10BD     		pop	{r4, pc}
 108              	.L6:
 109 001a 00BF     		.align	2
 110              	.L5:
 111 001c 00000000 		.word	.LANCHOR0
 112              		.cfi_endproc
 113              	.LFE5972:
 115              		.section	.text.startup.main,"ax",%progbits
 116              		.align	1
 117              		.p2align 2,,3
 118              		.global	main
 119              		.syntax unified
 120              		.thumb
 121              		.thumb_func
 122              		.fpu fpv5-d16
 124              	main:
 125              	.LFB5973:
  25:src/VocoDaisy.cpp **** 
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccf83JLl.s 			page 10


  26:src/VocoDaisy.cpp **** int main(void)
  27:src/VocoDaisy.cpp **** {
 126              		.loc 6 27 1 is_stmt 1 view -0
 127              		.cfi_startproc
 128              		@ Volatile: function does not return.
 129              		@ args = 0, pretend = 0, frame = 0
 130              		@ frame_needed = 0, uses_anonymous_args = 0
  28:src/VocoDaisy.cpp ****     // Initialize Daisy Seed hardware
  29:src/VocoDaisy.cpp ****     hw.Init();
 131              		.loc 6 29 5 view .LVU18
  27:src/VocoDaisy.cpp ****     // Initialize Daisy Seed hardware
 132              		.loc 6 27 1 is_stmt 0 view .LVU19
 133 0000 08B5     		push	{r3, lr}
 134              		.cfi_def_cfa_offset 8
 135              		.cfi_offset 3, -8
 136              		.cfi_offset 14, -4
 137              		.loc 6 29 12 view .LVU20
 138 0002 0021     		movs	r1, #0
 139 0004 0E48     		ldr	r0, .L10
 140 0006 FFF7FEFF 		bl	_ZN5daisy9DaisySeed4InitEb
 141              	.LVL5:
  30:src/VocoDaisy.cpp ****     hw.SetAudioBlockSize(4); // block size
 142              		.loc 6 30 5 is_stmt 1 view .LVU21
 143              		.loc 6 30 25 is_stmt 0 view .LVU22
 144 000a 0421     		movs	r1, #4
 145 000c 0C48     		ldr	r0, .L10
 146 000e FFF7FEFF 		bl	_ZN5daisy9DaisySeed17SetAudioBlockSizeEj
 147              	.LVL6:
  31:src/VocoDaisy.cpp ****     hw.SetAudioSampleRate(SaiHandle::Config::SampleRate::SAI_48KHZ);
 148              		.loc 6 31 5 is_stmt 1 view .LVU23
 149              		.loc 6 31 26 is_stmt 0 view .LVU24
 150 0012 0321     		movs	r1, #3
 151 0014 0A48     		ldr	r0, .L10
 152 0016 FFF7FEFF 		bl	_ZN5daisy9DaisySeed18SetAudioSampleRateENS_9SaiHandle6Config10SampleRateE
 153              	.LVL7:
  32:src/VocoDaisy.cpp **** 
  33:src/VocoDaisy.cpp ****     // Initialize TalkBoxProcessor
  34:src/VocoDaisy.cpp ****     tb_params.quality = 0.5f; // adjust as needed
 154              		.loc 6 34 5 is_stmt 1 view .LVU25
 155              		.loc 6 34 23 is_stmt 0 view .LVU26
 156 001a 0A49     		ldr	r1, .L10+4
 157 001c 4FF07C50 		mov	r0, #1056964608
  35:src/VocoDaisy.cpp ****     tb_params.wet     = 1.0f; // full effect
 158              		.loc 6 35 23 view .LVU27
 159 0020 4FF07E52 		mov	r2, #1065353216
  36:src/VocoDaisy.cpp ****     tb_params.dry     = 0.0f; // ignore dry voice if desired
 160              		.loc 6 36 23 view .LVU28
 161 0024 0023     		movs	r3, #0
  37:src/VocoDaisy.cpp ****     talkbox.init(48000.0f, tb_params); // match hw sample rate
 162              		.loc 6 37 17 view .LVU29
 163 0026 9FED080A 		vldr.32	s0, .L10+8
  34:src/VocoDaisy.cpp ****     tb_params.wet     = 1.0f; // full effect
 164              		.loc 6 34 23 view .LVU30
 165 002a 8860     		str	r0, [r1, #8]	@ float
  35:src/VocoDaisy.cpp ****     tb_params.dry     = 0.0f; // ignore dry voice if desired
 166              		.loc 6 35 5 is_stmt 1 view .LVU31
 167              		.loc 6 37 17 is_stmt 0 view .LVU32
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccf83JLl.s 			page 11


 168 002c 0748     		ldr	r0, .L10+12
  35:src/VocoDaisy.cpp ****     tb_params.dry     = 0.0f; // ignore dry voice if desired
 169              		.loc 6 35 23 view .LVU33
 170 002e 0A60     		str	r2, [r1]	@ float
  36:src/VocoDaisy.cpp ****     talkbox.init(48000.0f, tb_params); // match hw sample rate
 171              		.loc 6 36 5 is_stmt 1 view .LVU34
  36:src/VocoDaisy.cpp ****     talkbox.init(48000.0f, tb_params); // match hw sample rate
 172              		.loc 6 36 23 is_stmt 0 view .LVU35
 173 0030 4B60     		str	r3, [r1, #4]	@ float
 174              		.loc 6 37 5 is_stmt 1 view .LVU36
 175              		.loc 6 37 17 is_stmt 0 view .LVU37
 176 0032 FFF7FEFF 		bl	_ZN16TalkBoxProcessor4initEfRK13TalkBoxParams
 177              	.LVL8:
  38:src/VocoDaisy.cpp **** 
  39:src/VocoDaisy.cpp ****     // Start audio with callback
  40:src/VocoDaisy.cpp ****     hw.StartAudio(AudioCallback);
 178              		.loc 6 40 5 is_stmt 1 view .LVU38
 179              		.loc 6 40 18 is_stmt 0 view .LVU39
 180 0036 0649     		ldr	r1, .L10+16
 181 0038 0148     		ldr	r0, .L10
 182 003a FFF7FEFF 		bl	_ZN5daisy9DaisySeed10StartAudioEPFvPKPKfPPfjE
 183              	.LVL9:
 184              	.L8:
  41:src/VocoDaisy.cpp **** 
  42:src/VocoDaisy.cpp ****     while(1) {}
 185              		.loc 6 42 5 is_stmt 1 discriminator 1 view .LVU40
 186              		.loc 6 42 5 discriminator 1 view .LVU41
 187              		.loc 6 42 5 discriminator 1 view .LVU42
 188              		.loc 6 42 5 discriminator 1 view .LVU43
 189 003e FEE7     		b	.L8
 190              	.L11:
 191              		.align	2
 192              	.L10:
 193 0040 00000000 		.word	.LANCHOR1
 194 0044 00000000 		.word	.LANCHOR2
 195 0048 00803B47 		.word	1195081728
 196 004c 00000000 		.word	.LANCHOR0
 197 0050 00000000 		.word	_Z13AudioCallbackPKPKfPPfj
 198              		.cfi_endproc
 199              	.LFE5973:
 201              		.section	.text.startup._GLOBAL__sub_I_hw,"ax",%progbits
 202              		.align	1
 203              		.p2align 2,,3
 204              		.syntax unified
 205              		.thumb
 206              		.thumb_func
 207              		.fpu fpv5-d16
 209              	_GLOBAL__sub_I_hw:
 210              	.LFB6655:
  43:src/VocoDaisy.cpp **** }
 211              		.loc 6 43 1 view -0
 212              		.cfi_startproc
 213              		@ args = 0, pretend = 0, frame = 0
 214              		@ frame_needed = 0, uses_anonymous_args = 0
 215              	.LBB96:
 216              	.LBI96:
 217              		.loc 6 43 1 view .LVU45
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccf83JLl.s 			page 12


 218              	.LVL10:
 219              	.LBB97:
 220              	.LBB98:
 221              	.LBI98:
  21:../DaisyExamples/libDaisy//src/daisy_seed.h ****     ~DaisySeed() {}
 222              		.loc 1 21 5 view .LVU46
 223              	.LBB99:
 224              	.LBB100:
 225              	.LBI100:
 226              		.file 7 "../DaisyExamples/libDaisy//src/per/qspi.h"
   1:../DaisyExamples/libDaisy//src/per/qspi.h **** #ifndef DSY_QSPI
   2:../DaisyExamples/libDaisy//src/per/qspi.h **** #define DSY_QSPI /**< Macro */
   3:../DaisyExamples/libDaisy//src/per/qspi.h **** 
   4:../DaisyExamples/libDaisy//src/per/qspi.h **** #ifndef UNIT_TEST // for unit tests, a dummy implementation
   5:../DaisyExamples/libDaisy//src/per/qspi.h **** 
   6:../DaisyExamples/libDaisy//src/per/qspi.h **** #include <cstdint>
   7:../DaisyExamples/libDaisy//src/per/qspi.h **** #include "daisy_core.h" // Added for dsy_gpio_pin typedef
   8:../DaisyExamples/libDaisy//src/per/qspi.h **** 
   9:../DaisyExamples/libDaisy//src/per/qspi.h **** #define DSY_QSPI_TEXT       \
  10:../DaisyExamples/libDaisy//src/per/qspi.h ****     __attribute__((section( \
  11:../DaisyExamples/libDaisy//src/per/qspi.h ****         ".qspiflash_text"))) /**< used for reading memory in memory_mapped mode. */
  12:../DaisyExamples/libDaisy//src/per/qspi.h **** #define DSY_QSPI_DATA       \
  13:../DaisyExamples/libDaisy//src/per/qspi.h ****     __attribute__((section( \
  14:../DaisyExamples/libDaisy//src/per/qspi.h ****         ".qspiflash_data"))) /**< used for reading memory in memory_mapped mode. */
  15:../DaisyExamples/libDaisy//src/per/qspi.h **** #define DSY_QSPI_BSS        \
  16:../DaisyExamples/libDaisy//src/per/qspi.h ****     __attribute__((section( \
  17:../DaisyExamples/libDaisy//src/per/qspi.h ****         ".qspiflash_bss"))) /**< used for reading memory in memory_mapped mode. */
  18:../DaisyExamples/libDaisy//src/per/qspi.h **** 
  19:../DaisyExamples/libDaisy//src/per/qspi.h **** namespace daisy
  20:../DaisyExamples/libDaisy//src/per/qspi.h **** {
  21:../DaisyExamples/libDaisy//src/per/qspi.h **** /** @addtogroup serial
  22:../DaisyExamples/libDaisy//src/per/qspi.h **** @{
  23:../DaisyExamples/libDaisy//src/per/qspi.h **** */
  24:../DaisyExamples/libDaisy//src/per/qspi.h **** 
  25:../DaisyExamples/libDaisy//src/per/qspi.h **** /** 
  26:../DaisyExamples/libDaisy//src/per/qspi.h ****  Driver for QSPI peripheral to interface with external flash memory. \n 
  27:../DaisyExamples/libDaisy//src/per/qspi.h ****     Currently supported QSPI Devices: \n 
  28:../DaisyExamples/libDaisy//src/per/qspi.h ****     * IS25LP080D
  29:../DaisyExamples/libDaisy//src/per/qspi.h **** */
  30:../DaisyExamples/libDaisy//src/per/qspi.h **** class QSPIHandle
  31:../DaisyExamples/libDaisy//src/per/qspi.h **** {
  32:../DaisyExamples/libDaisy//src/per/qspi.h ****   public:
  33:../DaisyExamples/libDaisy//src/per/qspi.h ****     enum Result
  34:../DaisyExamples/libDaisy//src/per/qspi.h ****     {
  35:../DaisyExamples/libDaisy//src/per/qspi.h ****         OK = 0,
  36:../DaisyExamples/libDaisy//src/per/qspi.h ****         ERR
  37:../DaisyExamples/libDaisy//src/per/qspi.h ****     };
  38:../DaisyExamples/libDaisy//src/per/qspi.h **** 
  39:../DaisyExamples/libDaisy//src/per/qspi.h ****     /** Indicates the current status of the module. 
  40:../DaisyExamples/libDaisy//src/per/qspi.h ****          *  Warnings are indicated by a leading W.
  41:../DaisyExamples/libDaisy//src/per/qspi.h ****          *  Errors are indicated by a leading E and cause an immediate exit.
  42:../DaisyExamples/libDaisy//src/per/qspi.h ****          * 
  43:../DaisyExamples/libDaisy//src/per/qspi.h ****          *  \param GOOD - No errors have been reported.
  44:../DaisyExamples/libDaisy//src/per/qspi.h ****          *  \param E_HAL_ERROR - HAL code did not return HAL_OK.
  45:../DaisyExamples/libDaisy//src/per/qspi.h ****          *  \param E_SWITCHING_MODES - An error was encountered while switching QSPI peripheral mod
  46:../DaisyExamples/libDaisy//src/per/qspi.h ****          *  \param E_INVALID_MODE - QSPI should not be written to while the program is executing fr
  47:../DaisyExamples/libDaisy//src/per/qspi.h ****          */
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccf83JLl.s 			page 13


  48:../DaisyExamples/libDaisy//src/per/qspi.h ****     enum Status
  49:../DaisyExamples/libDaisy//src/per/qspi.h ****     {
  50:../DaisyExamples/libDaisy//src/per/qspi.h ****         GOOD = 0,
  51:../DaisyExamples/libDaisy//src/per/qspi.h ****         E_HAL_ERROR,
  52:../DaisyExamples/libDaisy//src/per/qspi.h ****         E_SWITCHING_MODES,
  53:../DaisyExamples/libDaisy//src/per/qspi.h ****         E_INVALID_MODE,
  54:../DaisyExamples/libDaisy//src/per/qspi.h ****     };
  55:../DaisyExamples/libDaisy//src/per/qspi.h **** 
  56:../DaisyExamples/libDaisy//src/per/qspi.h ****     /** Configuration structure for interfacing with QSPI Driver */
  57:../DaisyExamples/libDaisy//src/per/qspi.h ****     struct Config
  58:../DaisyExamples/libDaisy//src/per/qspi.h ****     {
  59:../DaisyExamples/libDaisy//src/per/qspi.h ****         /** Flash Devices supported. (Both of these are more-or-less the same, just different sizes
  60:../DaisyExamples/libDaisy//src/per/qspi.h ****         enum Device
  61:../DaisyExamples/libDaisy//src/per/qspi.h ****         {
  62:../DaisyExamples/libDaisy//src/per/qspi.h ****             IS25LP080D,  /**< & */
  63:../DaisyExamples/libDaisy//src/per/qspi.h ****             IS25LP064A,  /**< & */
  64:../DaisyExamples/libDaisy//src/per/qspi.h ****             DEVICE_LAST, /**< & */
  65:../DaisyExamples/libDaisy//src/per/qspi.h ****         };
  66:../DaisyExamples/libDaisy//src/per/qspi.h **** 
  67:../DaisyExamples/libDaisy//src/per/qspi.h ****         /** 
  68:../DaisyExamples/libDaisy//src/per/qspi.h ****         Modes of operation.
  69:../DaisyExamples/libDaisy//src/per/qspi.h ****         Memory Mapped mode: QSPI configured so that the QSPI can be
  70:../DaisyExamples/libDaisy//src/per/qspi.h ****         read from starting address 0x90000000. Writing is not
  71:../DaisyExamples/libDaisy//src/per/qspi.h ****         possible in this mode. \n 
  72:../DaisyExamples/libDaisy//src/per/qspi.h ****         Indirect Polling mode: Device driver enabled. 
  73:../DaisyExamples/libDaisy//src/per/qspi.h ****         */
  74:../DaisyExamples/libDaisy//src/per/qspi.h ****         enum Mode
  75:../DaisyExamples/libDaisy//src/per/qspi.h ****         {
  76:../DaisyExamples/libDaisy//src/per/qspi.h ****             MEMORY_MAPPED,    /**< & */
  77:../DaisyExamples/libDaisy//src/per/qspi.h ****             INDIRECT_POLLING, /**< & */
  78:../DaisyExamples/libDaisy//src/per/qspi.h ****             MODE_LAST,
  79:../DaisyExamples/libDaisy//src/per/qspi.h ****         };
  80:../DaisyExamples/libDaisy//src/per/qspi.h **** 
  81:../DaisyExamples/libDaisy//src/per/qspi.h ****         //SCK,  CE# (active low)
  82:../DaisyExamples/libDaisy//src/per/qspi.h ****         struct
  83:../DaisyExamples/libDaisy//src/per/qspi.h ****         {
  84:../DaisyExamples/libDaisy//src/per/qspi.h ****             dsy_gpio_pin io0; /**< & */
  85:../DaisyExamples/libDaisy//src/per/qspi.h ****             dsy_gpio_pin io1; /**< & */
  86:../DaisyExamples/libDaisy//src/per/qspi.h ****             dsy_gpio_pin io2; /**< & */
  87:../DaisyExamples/libDaisy//src/per/qspi.h ****             dsy_gpio_pin io3; /**< & */
  88:../DaisyExamples/libDaisy//src/per/qspi.h ****             dsy_gpio_pin clk; /**< & */
  89:../DaisyExamples/libDaisy//src/per/qspi.h ****             dsy_gpio_pin ncs; /**< & */
  90:../DaisyExamples/libDaisy//src/per/qspi.h ****         } pin_config;
  91:../DaisyExamples/libDaisy//src/per/qspi.h **** 
  92:../DaisyExamples/libDaisy//src/per/qspi.h ****         Device device;
  93:../DaisyExamples/libDaisy//src/per/qspi.h ****         Mode   mode;
  94:../DaisyExamples/libDaisy//src/per/qspi.h ****     };
  95:../DaisyExamples/libDaisy//src/per/qspi.h **** 
  96:../DaisyExamples/libDaisy//src/per/qspi.h ****     /** 
  97:../DaisyExamples/libDaisy//src/per/qspi.h ****         Initializes QSPI peripheral, and Resets, and prepares memory for access.
  98:../DaisyExamples/libDaisy//src/per/qspi.h ****         \param config should be populated with the mode, device and pin_config before calling this 
  99:../DaisyExamples/libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 100:../DaisyExamples/libDaisy//src/per/qspi.h ****         */
 101:../DaisyExamples/libDaisy//src/per/qspi.h ****     Result Init(const Config& config);
 102:../DaisyExamples/libDaisy//src/per/qspi.h **** 
 103:../DaisyExamples/libDaisy//src/per/qspi.h ****     /** Returns the current config. */
 104:../DaisyExamples/libDaisy//src/per/qspi.h ****     const Config& GetConfig() const;
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccf83JLl.s 			page 14


 105:../DaisyExamples/libDaisy//src/per/qspi.h **** 
 106:../DaisyExamples/libDaisy//src/per/qspi.h ****     // Couldn't this just be called before anything else in init? That
 107:../DaisyExamples/libDaisy//src/per/qspi.h ****     // would make manually calling it unnecessary.
 108:../DaisyExamples/libDaisy//src/per/qspi.h ****     /** 
 109:../DaisyExamples/libDaisy//src/per/qspi.h ****         Deinitializes the peripheral
 110:../DaisyExamples/libDaisy//src/per/qspi.h ****         This should be called before reinitializing QSPI in a different mode.
 111:../DaisyExamples/libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 112:../DaisyExamples/libDaisy//src/per/qspi.h ****         */
 113:../DaisyExamples/libDaisy//src/per/qspi.h ****     Result DeInit();
 114:../DaisyExamples/libDaisy//src/per/qspi.h **** 
 115:../DaisyExamples/libDaisy//src/per/qspi.h ****     /** 
 116:../DaisyExamples/libDaisy//src/per/qspi.h ****         Writes a single page to to the specified address on the QSPI chip.
 117:../DaisyExamples/libDaisy//src/per/qspi.h ****         For IS25LP*, page size is 256 bytes.
 118:../DaisyExamples/libDaisy//src/per/qspi.h ****         \param address Address to write to
 119:../DaisyExamples/libDaisy//src/per/qspi.h ****         \param size Buffer size
 120:../DaisyExamples/libDaisy//src/per/qspi.h ****         \param buffer Buffer to write
 121:../DaisyExamples/libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 122:../DaisyExamples/libDaisy//src/per/qspi.h ****         */
 123:../DaisyExamples/libDaisy//src/per/qspi.h ****     Result WritePage(uint32_t address, uint32_t size, uint8_t* buffer);
 124:../DaisyExamples/libDaisy//src/per/qspi.h **** 
 125:../DaisyExamples/libDaisy//src/per/qspi.h ****     /** 
 126:../DaisyExamples/libDaisy//src/per/qspi.h ****         Writes data in buffer to to the QSPI. Starting at address to address+size 
 127:../DaisyExamples/libDaisy//src/per/qspi.h ****         \param address Address to write to
 128:../DaisyExamples/libDaisy//src/per/qspi.h ****         \param size Buffer size
 129:../DaisyExamples/libDaisy//src/per/qspi.h ****         \param buffer Buffer to write
 130:../DaisyExamples/libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 131:../DaisyExamples/libDaisy//src/per/qspi.h ****         */
 132:../DaisyExamples/libDaisy//src/per/qspi.h ****     Result Write(uint32_t address, uint32_t size, uint8_t* buffer);
 133:../DaisyExamples/libDaisy//src/per/qspi.h **** 
 134:../DaisyExamples/libDaisy//src/per/qspi.h ****     /** 
 135:../DaisyExamples/libDaisy//src/per/qspi.h ****         Erases the area specified on the chip.
 136:../DaisyExamples/libDaisy//src/per/qspi.h ****         Erasures will happen by 4K, 32K or 64K increments.
 137:../DaisyExamples/libDaisy//src/per/qspi.h ****         Smallest erase possible is 4kB at a time. (on IS25LP*)
 138:../DaisyExamples/libDaisy//src/per/qspi.h ****         \param start_addr Address to begin erasing from
 139:../DaisyExamples/libDaisy//src/per/qspi.h ****         \param end_addr  Address to stop erasing at
 140:../DaisyExamples/libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 141:../DaisyExamples/libDaisy//src/per/qspi.h ****         */
 142:../DaisyExamples/libDaisy//src/per/qspi.h ****     Result Erase(uint32_t start_addr, uint32_t end_addr);
 143:../DaisyExamples/libDaisy//src/per/qspi.h **** 
 144:../DaisyExamples/libDaisy//src/per/qspi.h ****     /**  
 145:../DaisyExamples/libDaisy//src/per/qspi.h ****          Erases a single sector of the chip.  
 146:../DaisyExamples/libDaisy//src/per/qspi.h ****         TODO: Document the size of this function. 
 147:../DaisyExamples/libDaisy//src/per/qspi.h ****         \param address Address of sector to erase
 148:../DaisyExamples/libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 149:../DaisyExamples/libDaisy//src/per/qspi.h ****         */
 150:../DaisyExamples/libDaisy//src/per/qspi.h ****     Result EraseSector(uint32_t address);
 151:../DaisyExamples/libDaisy//src/per/qspi.h **** 
 152:../DaisyExamples/libDaisy//src/per/qspi.h ****     /** Returns the current class status. Useful for debugging.
 153:../DaisyExamples/libDaisy//src/per/qspi.h ****      *  \returns Status
 154:../DaisyExamples/libDaisy//src/per/qspi.h ****      */
 155:../DaisyExamples/libDaisy//src/per/qspi.h ****     Status GetStatus();
 156:../DaisyExamples/libDaisy//src/per/qspi.h **** 
 157:../DaisyExamples/libDaisy//src/per/qspi.h ****     /** Returns a pointer to the actual memory used 
 158:../DaisyExamples/libDaisy//src/per/qspi.h ****      *  The memory at this address is read-only
 159:../DaisyExamples/libDaisy//src/per/qspi.h ****      *  to write to it use the Write function.
 160:../DaisyExamples/libDaisy//src/per/qspi.h ****      * 
 161:../DaisyExamples/libDaisy//src/per/qspi.h ****      *  \param offset returns the pointer starting this 
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccf83JLl.s 			page 15


 162:../DaisyExamples/libDaisy//src/per/qspi.h ****      *                many bytes into the memory
 163:../DaisyExamples/libDaisy//src/per/qspi.h ****     */
 164:../DaisyExamples/libDaisy//src/per/qspi.h ****     void* GetData(uint32_t offset = 0);
 165:../DaisyExamples/libDaisy//src/per/qspi.h **** 
 166:../DaisyExamples/libDaisy//src/per/qspi.h ****     QSPIHandle() : pimpl_(nullptr) {}
 227              		.loc 7 166 5 view .LVU47
 228              	.LBB101:
 229              	.LBB102:
 230              		.loc 7 166 34 is_stmt 0 view .LVU48
 231 0000 0023     		movs	r3, #0
 232 0002 0A48     		ldr	r0, .L14
 233              	.LBE102:
 234              	.LBE101:
 235              	.LBE100:
 236              	.LBE99:
 237              	.LBE98:
   8:src/VocoDaisy.cpp **** TalkBoxProcessor talkbox;
 238              		.loc 6 8 11 view .LVU49
 239 0004 0A4A     		ldr	r2, .L14+4
 240 0006 0B49     		ldr	r1, .L14+8
 241              	.LBE97:
 242              	.LBE96:
 243              		.loc 6 43 1 view .LVU50
 244 0008 10B5     		push	{r4, lr}
 245              		.cfi_def_cfa_offset 8
 246              		.cfi_offset 4, -8
 247              		.cfi_offset 14, -4
 248              	.LBB122:
 249              	.LBB120:
   9:src/VocoDaisy.cpp **** 
 250              		.loc 6 9 18 view .LVU51
 251 000a 0B4C     		ldr	r4, .L14+12
 252              	.LBB119:
 253              	.LBB118:
 254              	.LBB105:
 255              	.LBB104:
 256              	.LBB103:
 257              		.loc 7 166 34 view .LVU52
 258 000c 0360     		str	r3, [r0]
 259              	.LVL11:
 260              		.loc 7 166 34 view .LVU53
 261              	.LBE103:
 262              	.LBE104:
 263              	.LBE105:
 264              	.LBB106:
 265              	.LBI106:
  95:../DaisyExamples/libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
 266              		.loc 5 95 5 is_stmt 1 view .LVU54
 267              	.LBB107:
 268              	.LBB108:
  95:../DaisyExamples/libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
 269              		.loc 5 95 35 is_stmt 0 view .LVU55
 270 000e 4361     		str	r3, [r0, #20]
 271              	.LVL12:
  95:../DaisyExamples/libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
 272              		.loc 5 95 35 view .LVU56
 273              	.LBE108:
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccf83JLl.s 			page 16


 274              	.LBE107:
 275              	.LBE106:
 276              	.LBB109:
 277              	.LBI109:
 109:../DaisyExamples/libDaisy//src/per/adc.h ****     ~AdcHandle() {}
 278              		.loc 4 109 5 is_stmt 1 view .LVU57
 109:../DaisyExamples/libDaisy//src/per/adc.h ****     ~AdcHandle() {}
 279              		.loc 4 109 5 is_stmt 0 view .LVU58
 280              	.LBE109:
 281              	.LBB110:
 282              	.LBI110:
 283              		.file 8 "../DaisyExamples/libDaisy//src/per/dac.h"
   1:../DaisyExamples/libDaisy//src/per/dac.h **** #pragma once
   2:../DaisyExamples/libDaisy//src/per/dac.h **** #ifndef DSY_DAC_H
   3:../DaisyExamples/libDaisy//src/per/dac.h **** #define DSY_DAC_H
   4:../DaisyExamples/libDaisy//src/per/dac.h **** 
   5:../DaisyExamples/libDaisy//src/per/dac.h **** #include "daisy_core.h"
   6:../DaisyExamples/libDaisy//src/per/dac.h **** 
   7:../DaisyExamples/libDaisy//src/per/dac.h **** namespace daisy
   8:../DaisyExamples/libDaisy//src/per/dac.h **** {
   9:../DaisyExamples/libDaisy//src/per/dac.h **** /** @brief DAC handle for Built-in DAC Peripheral 
  10:../DaisyExamples/libDaisy//src/per/dac.h ****  *  @ingroup per_analog
  11:../DaisyExamples/libDaisy//src/per/dac.h ****  ** 
  12:../DaisyExamples/libDaisy//src/per/dac.h ****  ** For now only Normal Mode is supported,
  13:../DaisyExamples/libDaisy//src/per/dac.h ****  ** Sample and hold mode provides reduced power consumption, but requires a bit more setup.
  14:../DaisyExamples/libDaisy//src/per/dac.h ****  **
  15:../DaisyExamples/libDaisy//src/per/dac.h ****  ** For now connecting the DAC through other internal peripherals is also not supported.
  16:../DaisyExamples/libDaisy//src/per/dac.h ****  **
  17:../DaisyExamples/libDaisy//src/per/dac.h ****  ** Since the DAC channels have dedicated pins we don't need to pass in a pin config like with
  18:../DaisyExamples/libDaisy//src/per/dac.h ****  ** other modules. However, it is still important to not try to use the DAC pins for anything else.
  19:../DaisyExamples/libDaisy//src/per/dac.h ****  ** DAC Channel 1 is on PA4, and DAC Channel 2 is on PA5
  20:../DaisyExamples/libDaisy//src/per/dac.h ****  ***/
  21:../DaisyExamples/libDaisy//src/per/dac.h **** class DacHandle
  22:../DaisyExamples/libDaisy//src/per/dac.h **** {
  23:../DaisyExamples/libDaisy//src/per/dac.h ****   public:
  24:../DaisyExamples/libDaisy//src/per/dac.h ****     /** Return Values for the DacHandle class */
  25:../DaisyExamples/libDaisy//src/per/dac.h ****     enum class Result
  26:../DaisyExamples/libDaisy//src/per/dac.h ****     {
  27:../DaisyExamples/libDaisy//src/per/dac.h ****         OK,
  28:../DaisyExamples/libDaisy//src/per/dac.h ****         ERR,
  29:../DaisyExamples/libDaisy//src/per/dac.h ****     };
  30:../DaisyExamples/libDaisy//src/per/dac.h **** 
  31:../DaisyExamples/libDaisy//src/per/dac.h ****     /** Selects which channel(s) will be configured for use. */
  32:../DaisyExamples/libDaisy//src/per/dac.h ****     enum class Channel
  33:../DaisyExamples/libDaisy//src/per/dac.h ****     {
  34:../DaisyExamples/libDaisy//src/per/dac.h ****         ONE,
  35:../DaisyExamples/libDaisy//src/per/dac.h ****         TWO,
  36:../DaisyExamples/libDaisy//src/per/dac.h ****         BOTH,
  37:../DaisyExamples/libDaisy//src/per/dac.h ****     };
  38:../DaisyExamples/libDaisy//src/per/dac.h **** 
  39:../DaisyExamples/libDaisy//src/per/dac.h ****     /** Sets the Mode for the DAC channels.
  40:../DaisyExamples/libDaisy//src/per/dac.h ****      **
  41:../DaisyExamples/libDaisy//src/per/dac.h ****      ** Polling mode uses the blocking mode to transmit a single value at a time.
  42:../DaisyExamples/libDaisy//src/per/dac.h ****      **
  43:../DaisyExamples/libDaisy//src/per/dac.h ****      ** DMA mode uses a buffer, and periodically transmits it triggering a 
  44:../DaisyExamples/libDaisy//src/per/dac.h ****      ** callback to fill the buffer when it is ready for more samples.
  45:../DaisyExamples/libDaisy//src/per/dac.h ****      ***/
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccf83JLl.s 			page 17


  46:../DaisyExamples/libDaisy//src/per/dac.h ****     enum class Mode
  47:../DaisyExamples/libDaisy//src/per/dac.h ****     {
  48:../DaisyExamples/libDaisy//src/per/dac.h ****         POLLING,
  49:../DaisyExamples/libDaisy//src/per/dac.h ****         DMA,
  50:../DaisyExamples/libDaisy//src/per/dac.h ****     };
  51:../DaisyExamples/libDaisy//src/per/dac.h **** 
  52:../DaisyExamples/libDaisy//src/per/dac.h ****     /** Sets the number of bits per sample transmitted out of the DAC.
  53:../DaisyExamples/libDaisy//src/per/dac.h ****      ** The output range will be: 0V - VDDA
  54:../DaisyExamples/libDaisy//src/per/dac.h ****      ** The resolution will be roughly: bitdepth / (VDDA - 0V) 
  55:../DaisyExamples/libDaisy//src/per/dac.h ****      ***/
  56:../DaisyExamples/libDaisy//src/per/dac.h ****     enum class BitDepth
  57:../DaisyExamples/libDaisy//src/per/dac.h ****     {
  58:../DaisyExamples/libDaisy//src/per/dac.h ****         BITS_8,
  59:../DaisyExamples/libDaisy//src/per/dac.h ****         BITS_12
  60:../DaisyExamples/libDaisy//src/per/dac.h ****     };
  61:../DaisyExamples/libDaisy//src/per/dac.h **** 
  62:../DaisyExamples/libDaisy//src/per/dac.h ****     /** Sets whether the DAC output is buffered for higher drive ability. */
  63:../DaisyExamples/libDaisy//src/per/dac.h ****     enum class BufferState
  64:../DaisyExamples/libDaisy//src/per/dac.h ****     {
  65:../DaisyExamples/libDaisy//src/per/dac.h ****         ENABLED,
  66:../DaisyExamples/libDaisy//src/per/dac.h ****         DISABLED,
  67:../DaisyExamples/libDaisy//src/per/dac.h ****     };
  68:../DaisyExamples/libDaisy//src/per/dac.h **** 
  69:../DaisyExamples/libDaisy//src/per/dac.h ****     /** Configuration structure for initializing the DAC structure. */
  70:../DaisyExamples/libDaisy//src/per/dac.h ****     struct Config
  71:../DaisyExamples/libDaisy//src/per/dac.h ****     {
  72:../DaisyExamples/libDaisy//src/per/dac.h ****         /** Target Samplerate in Hz used to configure the internal 
  73:../DaisyExamples/libDaisy//src/per/dac.h ****          ** timebase for DMA mode. Does nothing in POLLING mode.
  74:../DaisyExamples/libDaisy//src/per/dac.h ****          ** If the value is 0 at Init time this will default to 48000Hz 
  75:../DaisyExamples/libDaisy//src/per/dac.h ****          ** otherwise the driver will attempt meet the target.*/
  76:../DaisyExamples/libDaisy//src/per/dac.h ****         uint32_t target_samplerate;
  77:../DaisyExamples/libDaisy//src/per/dac.h **** 
  78:../DaisyExamples/libDaisy//src/per/dac.h ****         Channel     chn;
  79:../DaisyExamples/libDaisy//src/per/dac.h ****         Mode        mode;
  80:../DaisyExamples/libDaisy//src/per/dac.h ****         BitDepth    bitdepth;
  81:../DaisyExamples/libDaisy//src/per/dac.h ****         BufferState buff_state;
  82:../DaisyExamples/libDaisy//src/per/dac.h ****     };
  83:../DaisyExamples/libDaisy//src/per/dac.h **** 
  84:../DaisyExamples/libDaisy//src/per/dac.h ****     DacHandle() : pimpl_(nullptr) {}
 284              		.loc 8 84 5 is_stmt 1 view .LVU59
 285              	.LBB111:
 286              	.LBB112:
 287              		.loc 8 84 33 is_stmt 0 view .LVU60
 288 0010 0362     		str	r3, [r0, #32]
 289              	.LVL13:
 290              		.loc 8 84 33 view .LVU61
 291              	.LBE112:
 292              	.LBE111:
 293              	.LBE110:
 294              	.LBB113:
 295              	.LBI113:
  40:../DaisyExamples/libDaisy//src/hid/usb.h **** 
 296              		.loc 3 40 5 is_stmt 1 view .LVU62
  40:../DaisyExamples/libDaisy//src/hid/usb.h **** 
 297              		.loc 3 40 5 is_stmt 0 view .LVU63
 298              	.LBE113:
 299              	.LBB114:
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccf83JLl.s 			page 18


 300              	.LBI114:
  96:../DaisyExamples/libDaisy//src/sys/system.h ****     ~System() {}
 301              		.loc 2 96 5 is_stmt 1 view .LVU64
  96:../DaisyExamples/libDaisy//src/sys/system.h ****     ~System() {}
 302              		.loc 2 96 5 is_stmt 0 view .LVU65
 303              	.LBE114:
 304              	.LBB115:
 305              	.LBI115:
 306              		.file 9 "../DaisyExamples/libDaisy//src/per/sai.h"
   1:../DaisyExamples/libDaisy//src/per/sai.h **** #pragma once
   2:../DaisyExamples/libDaisy//src/per/sai.h **** #ifndef DSY_SAI_H
   3:../DaisyExamples/libDaisy//src/per/sai.h **** #define DSY_SAI_H
   4:../DaisyExamples/libDaisy//src/per/sai.h **** 
   5:../DaisyExamples/libDaisy//src/per/sai.h **** #include "daisy_core.h"
   6:../DaisyExamples/libDaisy//src/per/sai.h **** 
   7:../DaisyExamples/libDaisy//src/per/sai.h **** namespace daisy
   8:../DaisyExamples/libDaisy//src/per/sai.h **** {
   9:../DaisyExamples/libDaisy//src/per/sai.h **** /** 
  10:../DaisyExamples/libDaisy//src/per/sai.h ****  * Support for I2S Audio Protocol with different bit-depth, samplerate options
  11:../DaisyExamples/libDaisy//src/per/sai.h ****  * Allows for master or slave, as well as freedom of selecting direction, 
  12:../DaisyExamples/libDaisy//src/per/sai.h ****  * and other behavior for each peripheral, and block.
  13:../DaisyExamples/libDaisy//src/per/sai.h ****  * 
  14:../DaisyExamples/libDaisy//src/per/sai.h ****  * DMA Transfer commands must use buffers located within non-cached memory or use cache maintenance
  15:../DaisyExamples/libDaisy//src/per/sai.h ****  * To declare an unitialized global element in the DMA memory section:
  16:../DaisyExamples/libDaisy//src/per/sai.h ****  *    int32_t DSY_DMA_BUFFER_SECTOR my_buffer[96];
  17:../DaisyExamples/libDaisy//src/per/sai.h ****  *
  18:../DaisyExamples/libDaisy//src/per/sai.h ****  * Callback functions will be called once per half of the buffer. In the above example, 
  19:../DaisyExamples/libDaisy//src/per/sai.h ****  * the callback function would be called once for every 48 samples.
  20:../DaisyExamples/libDaisy//src/per/sai.h ****  * 
  21:../DaisyExamples/libDaisy//src/per/sai.h ****  * Use SAI Handle like this:
  22:../DaisyExamples/libDaisy//src/per/sai.h ****  * 
  23:../DaisyExamples/libDaisy//src/per/sai.h ****  *  SaiHandle::Config sai_config;
  24:../DaisyExamples/libDaisy//src/per/sai.h ****  *  sai_config.periph          = SaiHandle::Config::Peripheral::SAI_1;
  25:../DaisyExamples/libDaisy//src/per/sai.h ****  *  sai_config.sr              = SaiHandle::Config::SampleRate::SAI_48KHZ;
  26:../DaisyExamples/libDaisy//src/per/sai.h ****  *  sai_config.bit_depth       = SaiHandle::Config::BitDepth::SAI_24BIT;
  27:../DaisyExamples/libDaisy//src/per/sai.h ****  *  sai_config.a_sync          = SaiHandle::Config::Sync::MASTER;
  28:../DaisyExamples/libDaisy//src/per/sai.h ****  *  sai_config.b_sync          = SaiHandle::Config::Sync::SLAVE;
  29:../DaisyExamples/libDaisy//src/per/sai.h ****  *  sai_config.a_dir           = SaiHandle::Config::Direction::RECEIVE;
  30:../DaisyExamples/libDaisy//src/per/sai.h ****  *  sai_config.b_dir           = SaiHandle::Config::Direction::TRANSMIT;
  31:../DaisyExamples/libDaisy//src/per/sai.h ****  *  sai_config.pin_config.fs   = {DSY_GPIOE, 4};
  32:../DaisyExamples/libDaisy//src/per/sai.h ****  *  sai_config.pin_config.mclk = {DSY_GPIOE, 2};
  33:../DaisyExamples/libDaisy//src/per/sai.h ****  *  sai_config.pin_config.sck  = {DSY_GPIOE, 5};
  34:../DaisyExamples/libDaisy//src/per/sai.h ****  *  sai_config.pin_config.sa   = {DSY_GPIOE, 6};
  35:../DaisyExamples/libDaisy//src/per/sai.h ****  *  sai_config.pin_config.sb   = {DSY_GPIOE, 3};
  36:../DaisyExamples/libDaisy//src/per/sai.h ****  *  // Then Initialize
  37:../DaisyExamples/libDaisy//src/per/sai.h ****  *  SaiHandle sai;
  38:../DaisyExamples/libDaisy//src/per/sai.h ****  *  sai.Init(sai_config);
  39:../DaisyExamples/libDaisy//src/per/sai.h ****  *  // Now you can use it:
  40:../DaisyExamples/libDaisy//src/per/sai.h ****  *  sai.StartDma(. . .);
  41:../DaisyExamples/libDaisy//src/per/sai.h ****  */
  42:../DaisyExamples/libDaisy//src/per/sai.h **** class SaiHandle
  43:../DaisyExamples/libDaisy//src/per/sai.h **** {
  44:../DaisyExamples/libDaisy//src/per/sai.h ****   public:
  45:../DaisyExamples/libDaisy//src/per/sai.h ****     /** Contains settings for initialising an SAI Interface */
  46:../DaisyExamples/libDaisy//src/per/sai.h ****     struct Config
  47:../DaisyExamples/libDaisy//src/per/sai.h ****     {
  48:../DaisyExamples/libDaisy//src/per/sai.h ****         /** Specifies the internal peripheral to use (mapped to different hardware pins) */
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccf83JLl.s 			page 19


  49:../DaisyExamples/libDaisy//src/per/sai.h ****         enum class Peripheral
  50:../DaisyExamples/libDaisy//src/per/sai.h ****         {
  51:../DaisyExamples/libDaisy//src/per/sai.h ****             SAI_1,
  52:../DaisyExamples/libDaisy//src/per/sai.h ****             SAI_2,
  53:../DaisyExamples/libDaisy//src/per/sai.h ****         };
  54:../DaisyExamples/libDaisy//src/per/sai.h **** 
  55:../DaisyExamples/libDaisy//src/per/sai.h ****         /** Rate at which samples will be streaming to/from the device. */
  56:../DaisyExamples/libDaisy//src/per/sai.h ****         enum class SampleRate
  57:../DaisyExamples/libDaisy//src/per/sai.h ****         {
  58:../DaisyExamples/libDaisy//src/per/sai.h ****             SAI_8KHZ,
  59:../DaisyExamples/libDaisy//src/per/sai.h ****             SAI_16KHZ,
  60:../DaisyExamples/libDaisy//src/per/sai.h ****             SAI_32KHZ,
  61:../DaisyExamples/libDaisy//src/per/sai.h ****             SAI_48KHZ,
  62:../DaisyExamples/libDaisy//src/per/sai.h ****             SAI_96KHZ,
  63:../DaisyExamples/libDaisy//src/per/sai.h ****         };
  64:../DaisyExamples/libDaisy//src/per/sai.h **** 
  65:../DaisyExamples/libDaisy//src/per/sai.h ****         /** Bit Depth that the hardware expects to be transferred to/from the device. */
  66:../DaisyExamples/libDaisy//src/per/sai.h ****         enum class BitDepth
  67:../DaisyExamples/libDaisy//src/per/sai.h ****         {
  68:../DaisyExamples/libDaisy//src/per/sai.h ****             SAI_16BIT,
  69:../DaisyExamples/libDaisy//src/per/sai.h ****             SAI_24BIT,
  70:../DaisyExamples/libDaisy//src/per/sai.h ****             SAI_32BIT,
  71:../DaisyExamples/libDaisy//src/per/sai.h ****         };
  72:../DaisyExamples/libDaisy//src/per/sai.h **** 
  73:../DaisyExamples/libDaisy//src/per/sai.h ****         /** Specifies whether a particular block is the master or the slave 
  74:../DaisyExamples/libDaisy//src/per/sai.h ****          ** If both are set to slave, no MCLK signal will be used, and it is
  75:../DaisyExamples/libDaisy//src/per/sai.h ****          ** expected that the codec will have its own xtal.
  76:../DaisyExamples/libDaisy//src/per/sai.h ****          */
  77:../DaisyExamples/libDaisy//src/per/sai.h ****         enum class Sync
  78:../DaisyExamples/libDaisy//src/per/sai.h ****         {
  79:../DaisyExamples/libDaisy//src/per/sai.h ****             MASTER,
  80:../DaisyExamples/libDaisy//src/per/sai.h ****             SLAVE,
  81:../DaisyExamples/libDaisy//src/per/sai.h ****         };
  82:../DaisyExamples/libDaisy//src/per/sai.h **** 
  83:../DaisyExamples/libDaisy//src/per/sai.h ****         /** Specifies the direction for each peripheral block. */
  84:../DaisyExamples/libDaisy//src/per/sai.h ****         enum class Direction
  85:../DaisyExamples/libDaisy//src/per/sai.h ****         {
  86:../DaisyExamples/libDaisy//src/per/sai.h ****             TRANSMIT,
  87:../DaisyExamples/libDaisy//src/per/sai.h ****             RECEIVE,
  88:../DaisyExamples/libDaisy//src/per/sai.h ****         };
  89:../DaisyExamples/libDaisy//src/per/sai.h **** 
  90:../DaisyExamples/libDaisy//src/per/sai.h ****         Peripheral periph;
  91:../DaisyExamples/libDaisy//src/per/sai.h ****         struct
  92:../DaisyExamples/libDaisy//src/per/sai.h ****         {
  93:../DaisyExamples/libDaisy//src/per/sai.h ****             dsy_gpio_pin mclk, fs, sck, sa, sb;
  94:../DaisyExamples/libDaisy//src/per/sai.h ****         } pin_config;
  95:../DaisyExamples/libDaisy//src/per/sai.h ****         SampleRate sr;
  96:../DaisyExamples/libDaisy//src/per/sai.h ****         BitDepth   bit_depth;
  97:../DaisyExamples/libDaisy//src/per/sai.h ****         Sync       a_sync, b_sync;
  98:../DaisyExamples/libDaisy//src/per/sai.h ****         Direction  a_dir, b_dir;
  99:../DaisyExamples/libDaisy//src/per/sai.h ****     };
 100:../DaisyExamples/libDaisy//src/per/sai.h **** 
 101:../DaisyExamples/libDaisy//src/per/sai.h ****     /** Return values for SAI functions */
 102:../DaisyExamples/libDaisy//src/per/sai.h ****     enum class Result
 103:../DaisyExamples/libDaisy//src/per/sai.h ****     {
 104:../DaisyExamples/libDaisy//src/per/sai.h ****         OK,
 105:../DaisyExamples/libDaisy//src/per/sai.h ****         ERR,
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccf83JLl.s 			page 20


 106:../DaisyExamples/libDaisy//src/per/sai.h ****     };
 107:../DaisyExamples/libDaisy//src/per/sai.h **** 
 108:../DaisyExamples/libDaisy//src/per/sai.h ****     SaiHandle() : pimpl_(nullptr) {}
 307              		.loc 9 108 5 is_stmt 1 view .LVU66
 308              	.LBB116:
 309              	.LBB117:
 310              		.loc 9 108 33 is_stmt 0 view .LVU67
 311 0012 C363     		str	r3, [r0, #60]
 312              	.LVL14:
 313              		.loc 9 108 33 view .LVU68
 314              	.LBE117:
 315              	.LBE116:
 316              	.LBE115:
 317              	.LBE118:
 318              	.LBE119:
   8:src/VocoDaisy.cpp **** TalkBoxProcessor talkbox;
 319              		.loc 6 8 11 view .LVU69
 320 0014 FFF7FEFF 		bl	__aeabi_atexit
 321              	.LVL15:
   9:src/VocoDaisy.cpp **** 
 322              		.loc 6 9 18 view .LVU70
 323 0018 2046     		mov	r0, r4
 324 001a FFF7FEFF 		bl	_ZN16TalkBoxProcessorC1Ev
 325              	.LVL16:
 326 001e 2046     		mov	r0, r4
 327 0020 034A     		ldr	r2, .L14+4
 328 0022 0649     		ldr	r1, .L14+16
 329              	.LBE120:
 330              	.LBE122:
 331              		.loc 6 43 1 view .LVU71
 332 0024 BDE81040 		pop	{r4, lr}
 333              		.cfi_restore 14
 334              		.cfi_restore 4
 335              		.cfi_def_cfa_offset 0
 336              	.LBB123:
 337              	.LBB121:
   9:src/VocoDaisy.cpp **** 
 338              		.loc 6 9 18 view .LVU72
 339 0028 FFF7FEBF 		b	__aeabi_atexit
 340              	.LVL17:
 341              	.L15:
 342              		.align	2
 343              	.L14:
 344 002c 00000000 		.word	.LANCHOR1
 345 0030 00000000 		.word	__dso_handle
 346 0034 00000000 		.word	_ZN5daisy9DaisySeedD1Ev
 347 0038 00000000 		.word	.LANCHOR0
 348 003c 00000000 		.word	_ZN16TalkBoxProcessorD1Ev
 349              	.LBE121:
 350              	.LBE123:
 351              		.cfi_endproc
 352              	.LFE6655:
 354              		.section	.init_array,"aw",%init_array
 355              		.align	2
 356 0000 00000000 		.word	_GLOBAL__sub_I_hw(target1)
 357              		.global	tb_params
 358              		.global	talkbox
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccf83JLl.s 			page 21


 359              		.global	hw
 360              		.section	.bss.hw,"aw",%nobits
 361              		.align	2
 362              		.set	.LANCHOR1,. + 0
 365              	hw:
 366 0000 00000000 		.space	64
 366      00000000 
 366      00000000 
 366      00000000 
 366      00000000 
 367              		.section	.bss.talkbox,"aw",%nobits
 368              		.align	2
 369              		.set	.LANCHOR0,. + 0
 372              	talkbox:
 373 0000 00000000 		.space	92
 373      00000000 
 373      00000000 
 373      00000000 
 373      00000000 
 374              		.section	.data.tb_params,"aw"
 375              		.align	2
 376              		.set	.LANCHOR2,. + 0
 379              	tb_params:
 380 0000 0000003F 		.word	1056964608
 381 0004 00000000 		.word	0
 382 0008 0000803F 		.word	1065353216
 383              		.text
 384              	.Letext0:
 385              		.file 10 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\machine\\_default_types.h"
 386              		.file 11 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\_stdint.h"
 387              		.file 12 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\stdint.h"
 388              		.file 13 "c:\\program files\\daisytoolchain\\lib\\gcc\\arm-none-eabi\\10.2.1\\include\\stddef.h"
 389              		.file 14 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cmath"
 390              		.file 15 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\type_traits"
 391              		.file 16 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\debug\\debug.h"
 392              		.file 17 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\std_abs.h"
 393              		.file 18 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstdlib"
 394              		.file 19 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstdint"
 395              		.file 20 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\arm-none-eabi\\t
 396              		.file 21 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\algorithmf
 397              		.file 22 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\exception_
 398              		.file 23 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\tr1\\special_fun
 399              		.file 24 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\functional"
 400              		.file 25 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstdarg"
 401              		.file 26 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstdio"
 402              		.file 27 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstring"
 403              		.file 28 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cwchar"
 404              		.file 29 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\string_view"
 405              		.file 30 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\basic_stri
 406              		.file 31 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\clocale"
 407              		.file 32 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\predefined
 408              		.file 33 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\_types.h"
 409              		.file 34 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\reent.h"
 410              		.file 35 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\lock.h"
 411              		.file 36 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\math.h"
 412              		.file 37 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\stdlib.h"
 413              		.file 38 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\math.h"
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccf83JLl.s 			page 22


 414              		.file 39 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\stdlib.h"
 415              		.file 40 "../DaisyExamples/libDaisy//src/daisy_core.h"
 416              		.file 41 "../DaisyExamples/libDaisy//src/per/tim.h"
 417              		.file 42 "../DaisyExamples/libDaisy//src/util/wav_format.h"
 418              		.file 43 "../DaisyExamples/libDaisy//src/dev/max11300.h"
 419              		.file 44 "../DaisyExamples/libDaisy//src/per/gpio.h"
 420              		.file 45 "../DaisyExamples/libDaisy//src/dev/sdram.h"
 421              		.file 46 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\pstl\\execution_
 422              		.file 47 "c:\\program files\\daisytoolchain\\lib\\gcc\\arm-none-eabi\\10.2.1\\include\\stdarg.h"
 423              		.file 48 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\stdio.h"
 424              		.file 49 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\string.h"
 425              		.file 50 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\wchar.h"
 426              		.file 51 "../DaisyExamples/DaisySP//Source/Control/adenv.h"
 427              		.file 52 "../DaisyExamples/DaisySP//Source/Utility/dsp.h"
 428              		.file 53 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\locale.h"
 429              		.file 54 "include/TalkBoxProcessor.h"
 430              		.file 55 "<built-in>"
 431              		.file 56 "../DaisyExamples/libDaisy//src/dev/sr_595.h"
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccf83JLl.s 			page 23


DEFINED SYMBOLS
                            *ABS*:00000000 VocoDaisy.cpp
C:\Users\philg\AppData\Local\Temp\ccf83JLl.s:17     .text._ZN5daisy9DaisySeedD2Ev:00000000 $t
C:\Users\philg\AppData\Local\Temp\ccf83JLl.s:26     .text._ZN5daisy9DaisySeedD2Ev:00000000 _ZN5daisy9DaisySeedD2Ev
C:\Users\philg\AppData\Local\Temp\ccf83JLl.s:26     .text._ZN5daisy9DaisySeedD2Ev:00000000 _ZN5daisy9DaisySeedD1Ev
C:\Users\philg\AppData\Local\Temp\ccf83JLl.s:67     .text._Z13AudioCallbackPKPKfPPfj:00000000 $t
C:\Users\philg\AppData\Local\Temp\ccf83JLl.s:75     .text._Z13AudioCallbackPKPKfPPfj:00000000 _Z13AudioCallbackPKPKfPPfj
C:\Users\philg\AppData\Local\Temp\ccf83JLl.s:111    .text._Z13AudioCallbackPKPKfPPfj:0000001c $d
C:\Users\philg\AppData\Local\Temp\ccf83JLl.s:116    .text.startup.main:00000000 $t
C:\Users\philg\AppData\Local\Temp\ccf83JLl.s:124    .text.startup.main:00000000 main
C:\Users\philg\AppData\Local\Temp\ccf83JLl.s:193    .text.startup.main:00000040 $d
C:\Users\philg\AppData\Local\Temp\ccf83JLl.s:202    .text.startup._GLOBAL__sub_I_hw:00000000 $t
C:\Users\philg\AppData\Local\Temp\ccf83JLl.s:209    .text.startup._GLOBAL__sub_I_hw:00000000 _GLOBAL__sub_I_hw
C:\Users\philg\AppData\Local\Temp\ccf83JLl.s:344    .text.startup._GLOBAL__sub_I_hw:0000002c $d
C:\Users\philg\AppData\Local\Temp\ccf83JLl.s:355    .init_array:00000000 $d
C:\Users\philg\AppData\Local\Temp\ccf83JLl.s:379    .data.tb_params:00000000 tb_params
C:\Users\philg\AppData\Local\Temp\ccf83JLl.s:372    .bss.talkbox:00000000 talkbox
C:\Users\philg\AppData\Local\Temp\ccf83JLl.s:365    .bss.hw:00000000 hw
C:\Users\philg\AppData\Local\Temp\ccf83JLl.s:361    .bss.hw:00000000 $d
C:\Users\philg\AppData\Local\Temp\ccf83JLl.s:368    .bss.talkbox:00000000 $d
C:\Users\philg\AppData\Local\Temp\ccf83JLl.s:375    .data.tb_params:00000000 $d
                           .group:00000000 _ZN5daisy9DaisySeedD5Ev

UNDEFINED SYMBOLS
_ZN16TalkBoxProcessor12processBlockEPKfS1_PfS2_l
_ZN5daisy9DaisySeed4InitEb
_ZN5daisy9DaisySeed17SetAudioBlockSizeEj
_ZN5daisy9DaisySeed18SetAudioSampleRateENS_9SaiHandle6Config10SampleRateE
_ZN16TalkBoxProcessor4initEfRK13TalkBoxParams
_ZN5daisy9DaisySeed10StartAudioEPFvPKPKfPPfjE
__aeabi_atexit
_ZN16TalkBoxProcessorC1Ev
__dso_handle
_ZN16TalkBoxProcessorD1Ev
