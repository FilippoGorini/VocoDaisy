ARM GAS  C:\Users\philg\AppData\Local\Temp\ccaSMceU.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"TalkBoxProcessor.cpp"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text._ZN16TalkBoxProcessorC2Ev,"ax",%progbits
  17              		.align	1
  18              		.p2align 2,,3
  19              		.global	_ZN16TalkBoxProcessorC2Ev
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv5-d16
  26              	_ZN16TalkBoxProcessorC2Ev:
  27              	.LVL0:
  28              	.LFB3096:
  29              		.file 1 "src/TalkBoxProcessor.cpp"
   1:src/TalkBoxProcessor.cpp **** #include "TalkBoxProcessor.h"
   2:src/TalkBoxProcessor.cpp **** #include <algorithm>
   3:src/TalkBoxProcessor.cpp **** #include <cmath>
   4:src/TalkBoxProcessor.cpp **** 
   5:src/TalkBoxProcessor.cpp **** using namespace std;
   6:src/TalkBoxProcessor.cpp **** 
   7:src/TalkBoxProcessor.cpp **** 
   8:src/TalkBoxProcessor.cpp **** TalkBoxProcessor::TalkBoxProcessor() {          // This is the constructor
  30              		.loc 1 8 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 8 1 is_stmt 0 view .LVU1
  35 0000 70B5     		push	{r4, r5, r6, lr}
  36              		.cfi_def_cfa_offset 16
  37              		.cfi_offset 4, -16
  38              		.cfi_offset 5, -12
  39              		.cfi_offset 6, -8
  40              		.cfi_offset 14, -4
  41              	.LBB37:
  42              		.loc 1 8 36 view .LVU2
  43 0002 0023     		movs	r3, #0
  44              	.LBE37:
  45              		.loc 1 8 1 view .LVU3
  46 0004 0446     		mov	r4, r0
  47              	.LBB38:
  48              		.loc 1 8 36 view .LVU4
  49 0006 0025     		movs	r5, #0
  50 0008 4FF07C52 		mov	r2, #1056964608
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccaSMceU.s 			page 2


  51 000c A362     		str	r3, [r4, #40]	@ float
   9:src/TalkBoxProcessor.cpp ****     buf0    = new float[BUF_MAX];               // Allocate memory for the buffers
  52              		.loc 1 9 32 view .LVU5
  53 000e 4FF4C850 		mov	r0, #6400
  54              	.LVL1:
   8:src/TalkBoxProcessor.cpp ****     buf0    = new float[BUF_MAX];               // Allocate memory for the buffers
  55              		.loc 1 8 36 view .LVU6
  56 0012 6262     		str	r2, [r4, #36]	@ float
  57 0014 E362     		str	r3, [r4, #44]	@ float
  58 0016 2363     		str	r3, [r4, #48]	@ float
  59 0018 6363     		str	r3, [r4, #52]	@ float
  60 001a A363     		str	r3, [r4, #56]	@ float
  61 001c E363     		str	r3, [r4, #60]	@ float
  62 001e 2364     		str	r3, [r4, #64]	@ float
  63 0020 6364     		str	r3, [r4, #68]	@ float
  64 0022 A364     		str	r3, [r4, #72]	@ float
  65 0024 E364     		str	r3, [r4, #76]	@ float
  66 0026 2365     		str	r3, [r4, #80]	@ float
  67 0028 6365     		str	r3, [r4, #84]	@ float
  68 002a A365     		str	r3, [r4, #88]	@ float
  69              		.loc 1 9 5 is_stmt 1 view .LVU7
   8:src/TalkBoxProcessor.cpp ****     buf0    = new float[BUF_MAX];               // Allocate memory for the buffers
  70              		.loc 1 8 36 is_stmt 0 view .LVU8
  71 002c C4E90555 		strd	r5, r5, [r4, #20]
  72 0030 C4E90755 		strd	r5, r5, [r4, #28]
  73              		.loc 1 9 32 view .LVU9
  74 0034 FFF7FEFF 		bl	_Znaj
  75              	.LVL2:
  76 0038 0346     		mov	r3, r0
  10:src/TalkBoxProcessor.cpp ****     car0    = new float[BUF_MAX];
  77              		.loc 1 10 32 view .LVU10
  78 003a 4FF4C850 		mov	r0, #6400
   9:src/TalkBoxProcessor.cpp ****     buf0    = new float[BUF_MAX];               // Allocate memory for the buffers
  79              		.loc 1 9 13 view .LVU11
  80 003e 2360     		str	r3, [r4]
  81              		.loc 1 10 5 is_stmt 1 view .LVU12
  11:src/TalkBoxProcessor.cpp ****     buf1    = new float[BUF_MAX];
  12:src/TalkBoxProcessor.cpp ****     car1    = new float[BUF_MAX];
  13:src/TalkBoxProcessor.cpp ****     window  = new float[BUF_MAX];
  14:src/TalkBoxProcessor.cpp ****     K = 0;                                      // Suggested by Gemini revision
  15:src/TalkBoxProcessor.cpp ****     memset(buf0,0,sizeof(float)*BUF_MAX);       // Zero out the buffers
  82              		.loc 1 15 11 is_stmt 0 view .LVU13
  83 0040 0646     		mov	r6, r0
  10:src/TalkBoxProcessor.cpp ****     car0    = new float[BUF_MAX];
  84              		.loc 1 10 32 view .LVU14
  85 0042 FFF7FEFF 		bl	_Znaj
  86              	.LVL3:
  87 0046 0346     		mov	r3, r0
  11:src/TalkBoxProcessor.cpp ****     buf1    = new float[BUF_MAX];
  88              		.loc 1 11 32 view .LVU15
  89 0048 3046     		mov	r0, r6
  10:src/TalkBoxProcessor.cpp ****     car0    = new float[BUF_MAX];
  90              		.loc 1 10 13 view .LVU16
  91 004a A360     		str	r3, [r4, #8]
  11:src/TalkBoxProcessor.cpp ****     buf1    = new float[BUF_MAX];
  92              		.loc 1 11 5 is_stmt 1 view .LVU17
  11:src/TalkBoxProcessor.cpp ****     buf1    = new float[BUF_MAX];
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccaSMceU.s 			page 3


  93              		.loc 1 11 32 is_stmt 0 view .LVU18
  94 004c FFF7FEFF 		bl	_Znaj
  95              	.LVL4:
  11:src/TalkBoxProcessor.cpp ****     buf1    = new float[BUF_MAX];
  96              		.loc 1 11 13 view .LVU19
  97 0050 6060     		str	r0, [r4, #4]
  12:src/TalkBoxProcessor.cpp ****     window  = new float[BUF_MAX];
  98              		.loc 1 12 5 is_stmt 1 view .LVU20
  12:src/TalkBoxProcessor.cpp ****     window  = new float[BUF_MAX];
  99              		.loc 1 12 32 is_stmt 0 view .LVU21
 100 0052 3046     		mov	r0, r6
 101 0054 FFF7FEFF 		bl	_Znaj
 102              	.LVL5:
 103 0058 0346     		mov	r3, r0
  13:src/TalkBoxProcessor.cpp ****     K = 0;                                      // Suggested by Gemini revision
 104              		.loc 1 13 32 view .LVU22
 105 005a 3046     		mov	r0, r6
  12:src/TalkBoxProcessor.cpp ****     window  = new float[BUF_MAX];
 106              		.loc 1 12 13 view .LVU23
 107 005c E360     		str	r3, [r4, #12]
  13:src/TalkBoxProcessor.cpp ****     K = 0;                                      // Suggested by Gemini revision
 108              		.loc 1 13 5 is_stmt 1 view .LVU24
  13:src/TalkBoxProcessor.cpp ****     K = 0;                                      // Suggested by Gemini revision
 109              		.loc 1 13 32 is_stmt 0 view .LVU25
 110 005e FFF7FEFF 		bl	_Znaj
 111              	.LVL6:
 112              		.loc 1 15 11 view .LVU26
 113 0062 3246     		mov	r2, r6
 114 0064 2946     		mov	r1, r5
  13:src/TalkBoxProcessor.cpp ****     K = 0;                                      // Suggested by Gemini revision
 115              		.loc 1 13 13 view .LVU27
 116 0066 2061     		str	r0, [r4, #16]
  14:src/TalkBoxProcessor.cpp ****     memset(buf0,0,sizeof(float)*BUF_MAX);       // Zero out the buffers
 117              		.loc 1 14 5 is_stmt 1 view .LVU28
 118              		.loc 1 15 5 view .LVU29
  14:src/TalkBoxProcessor.cpp ****     memset(buf0,0,sizeof(float)*BUF_MAX);       // Zero out the buffers
 119              		.loc 1 14 7 is_stmt 0 view .LVU30
 120 0068 2562     		str	r5, [r4, #32]
 121              		.loc 1 15 11 view .LVU31
 122 006a 2068     		ldr	r0, [r4]
 123 006c FFF7FEFF 		bl	memset
 124              	.LVL7:
  16:src/TalkBoxProcessor.cpp ****     memset(buf1,0,sizeof(float)*BUF_MAX);
 125              		.loc 1 16 5 is_stmt 1 view .LVU32
 126              		.loc 1 16 11 is_stmt 0 view .LVU33
 127 0070 3246     		mov	r2, r6
 128 0072 2946     		mov	r1, r5
 129 0074 6068     		ldr	r0, [r4, #4]
 130 0076 FFF7FEFF 		bl	memset
 131              	.LVL8:
  17:src/TalkBoxProcessor.cpp ****     memset(car0,0,sizeof(float)*BUF_MAX);
 132              		.loc 1 17 5 is_stmt 1 view .LVU34
 133              		.loc 1 17 11 is_stmt 0 view .LVU35
 134 007a 3246     		mov	r2, r6
 135 007c 2946     		mov	r1, r5
 136 007e A068     		ldr	r0, [r4, #8]
 137 0080 FFF7FEFF 		bl	memset
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccaSMceU.s 			page 4


 138              	.LVL9:
  18:src/TalkBoxProcessor.cpp ****     memset(car1,0,sizeof(float)*BUF_MAX);
 139              		.loc 1 18 5 is_stmt 1 view .LVU36
 140              		.loc 1 18 11 is_stmt 0 view .LVU37
 141 0084 3246     		mov	r2, r6
 142 0086 2946     		mov	r1, r5
 143 0088 E068     		ldr	r0, [r4, #12]
 144 008a FFF7FEFF 		bl	memset
 145              	.LVL10:
 146              	.LBE38:
  19:src/TalkBoxProcessor.cpp **** }
 147              		.loc 1 19 1 view .LVU38
 148 008e 2046     		mov	r0, r4
 149 0090 70BD     		pop	{r4, r5, r6, pc}
 150              		.loc 1 19 1 view .LVU39
 151              		.cfi_endproc
 152              	.LFE3096:
 154              		.global	_ZN16TalkBoxProcessorC1Ev
 155              		.thumb_set _ZN16TalkBoxProcessorC1Ev,_ZN16TalkBoxProcessorC2Ev
 156 0092 00BF     		.section	.text._ZN16TalkBoxProcessorD2Ev,"ax",%progbits
 157              		.align	1
 158              		.p2align 2,,3
 159              		.global	_ZN16TalkBoxProcessorD2Ev
 160              		.syntax unified
 161              		.thumb
 162              		.thumb_func
 163              		.fpu fpv5-d16
 165              	_ZN16TalkBoxProcessorD2Ev:
 166              	.LVL11:
 167              	.LFB3099:
  20:src/TalkBoxProcessor.cpp **** 
  21:src/TalkBoxProcessor.cpp **** 
  22:src/TalkBoxProcessor.cpp **** TalkBoxProcessor::~TalkBoxProcessor() {         // This is the destructor
 168              		.loc 1 22 1 is_stmt 1 view -0
 169              		.cfi_startproc
 170              		@ args = 0, pretend = 0, frame = 0
 171              		@ frame_needed = 0, uses_anonymous_args = 0
 172              	.LBB39:
  23:src/TalkBoxProcessor.cpp ****     delete[] buf0; delete[] car0;
 173              		.loc 1 23 5 view .LVU41
 174              	.LBE39:
  22:src/TalkBoxProcessor.cpp ****     delete[] buf0; delete[] car0;
 175              		.loc 1 22 1 is_stmt 0 view .LVU42
 176 0000 10B5     		push	{r4, lr}
 177              		.cfi_def_cfa_offset 8
 178              		.cfi_offset 4, -8
 179              		.cfi_offset 14, -4
  22:src/TalkBoxProcessor.cpp ****     delete[] buf0; delete[] car0;
 180              		.loc 1 22 1 view .LVU43
 181 0002 0446     		mov	r4, r0
 182              	.LBB40:
 183              		.loc 1 23 14 view .LVU44
 184 0004 0068     		ldr	r0, [r0]
 185              	.LVL12:
 186              		.loc 1 23 5 view .LVU45
 187 0006 08B1     		cbz	r0, .L5
 188              		.loc 1 23 14 discriminator 1 view .LVU46
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccaSMceU.s 			page 5


 189 0008 FFF7FEFF 		bl	_ZdaPv
 190              	.LVL13:
 191              	.L5:
 192              		.loc 1 23 20 is_stmt 1 discriminator 3 view .LVU47
 193              		.loc 1 23 29 is_stmt 0 discriminator 3 view .LVU48
 194 000c A068     		ldr	r0, [r4, #8]
 195              		.loc 1 23 20 discriminator 3 view .LVU49
 196 000e 08B1     		cbz	r0, .L6
 197              		.loc 1 23 29 discriminator 4 view .LVU50
 198 0010 FFF7FEFF 		bl	_ZdaPv
 199              	.LVL14:
 200              	.L6:
  24:src/TalkBoxProcessor.cpp ****     delete[] buf1; delete[] car1;
 201              		.loc 1 24 5 is_stmt 1 view .LVU51
 202              		.loc 1 24 14 is_stmt 0 view .LVU52
 203 0014 6068     		ldr	r0, [r4, #4]
 204              		.loc 1 24 5 view .LVU53
 205 0016 08B1     		cbz	r0, .L7
 206              		.loc 1 24 14 discriminator 1 view .LVU54
 207 0018 FFF7FEFF 		bl	_ZdaPv
 208              	.LVL15:
 209              	.L7:
 210              		.loc 1 24 20 is_stmt 1 discriminator 3 view .LVU55
 211              		.loc 1 24 29 is_stmt 0 discriminator 3 view .LVU56
 212 001c E068     		ldr	r0, [r4, #12]
 213              		.loc 1 24 20 discriminator 3 view .LVU57
 214 001e 08B1     		cbz	r0, .L8
 215              		.loc 1 24 29 discriminator 4 view .LVU58
 216 0020 FFF7FEFF 		bl	_ZdaPv
 217              	.LVL16:
 218              	.L8:
  25:src/TalkBoxProcessor.cpp ****     delete[] window;
 219              		.loc 1 25 5 is_stmt 1 view .LVU59
 220              		.loc 1 25 14 is_stmt 0 view .LVU60
 221 0024 2069     		ldr	r0, [r4, #16]
 222              		.loc 1 25 5 view .LVU61
 223 0026 08B1     		cbz	r0, .L9
 224              		.loc 1 25 14 discriminator 1 view .LVU62
 225 0028 FFF7FEFF 		bl	_ZdaPv
 226              	.LVL17:
 227              	.L9:
 228              	.LBE40:
  26:src/TalkBoxProcessor.cpp **** }
 229              		.loc 1 26 1 view .LVU63
 230 002c 2046     		mov	r0, r4
 231 002e 10BD     		pop	{r4, pc}
 232              		.loc 1 26 1 view .LVU64
 233              		.cfi_endproc
 234              	.LFE3099:
 236              		.global	_ZN16TalkBoxProcessorD1Ev
 237              		.thumb_set _ZN16TalkBoxProcessorD1Ev,_ZN16TalkBoxProcessorD2Ev
 238              		.section	.text._ZN16TalkBoxProcessor4initEfRK13TalkBoxParams,"ax",%progbits
 239              		.align	1
 240              		.p2align 2,,3
 241              		.global	_ZN16TalkBoxProcessor4initEfRK13TalkBoxParams
 242              		.syntax unified
 243              		.thumb
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccaSMceU.s 			page 6


 244              		.thumb_func
 245              		.fpu fpv5-d16
 247              	_ZN16TalkBoxProcessor4initEfRK13TalkBoxParams:
 248              	.LVL18:
 249              	.LFB3101:
  27:src/TalkBoxProcessor.cpp **** 
  28:src/TalkBoxProcessor.cpp **** 
  29:src/TalkBoxProcessor.cpp **** void TalkBoxProcessor::init(float sampleRate, const TalkBoxParams& p) {
 250              		.loc 1 29 71 is_stmt 1 view -0
 251              		.cfi_startproc
 252              		@ args = 0, pretend = 0, frame = 0
 253              		@ frame_needed = 0, uses_anonymous_args = 0
  30:src/TalkBoxProcessor.cpp ****     // 1) Clamp sample rate
  31:src/TalkBoxProcessor.cpp ****     float fs = std::clamp(sampleRate, 8000.0f, 96000.0f);       // Clamp the sampling frequency to 
 254              		.loc 1 31 5 view .LVU66
 255              	.LBB41:
 256              	.LBI41:
 257              		.file 2 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl_algo.h"
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** // Algorithm implementation -*- C++ -*-
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** /*
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****  *
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****  * Copyright (c) 1994
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****  * Hewlett-Packard Company
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****  *
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****  * provided that the above copyright notice appear in all copies and
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****  * that both that copyright notice and this permission notice appear
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****  * representations about the suitability of this software for any
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****  *
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****  *
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****  * Copyright (c) 1996
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccaSMceU.s 			page 7


  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****  * Silicon Graphics Computer Systems, Inc.
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****  *
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****  * provided that the above copyright notice appear in all copies and
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****  * that both that copyright notice and this permission notice appear
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****  * representations about the suitability of this software for any
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****  */
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** /** @file bits/stl_algo.h
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****  *  This is an internal header file, included by other library headers.
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****  *  Do not attempt to use it directly. @headername{algorithm}
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****  */
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** #ifndef _STL_ALGO_H
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** #define _STL_ALGO_H 1
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** #include <cstdlib>	     // for rand
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** #include <bits/algorithmfwd.h>
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** #include <bits/stl_heap.h>
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** #include <bits/stl_tempbuf.h>  // for _Temporary_buffer
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** #include <bits/predefined_ops.h>
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** #if __cplusplus >= 201103L
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** #include <bits/uniform_int_dist.h>
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** #endif
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** // See concept_check.h for the __glibcxx_*_requires macros.
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** namespace std _GLIBCXX_VISIBILITY(default)
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** {
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   /// Swaps the median value of *__a, *__b and *__c under __comp to *__result
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   template<typename _Iterator, typename _Compare>
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _GLIBCXX20_CONSTEXPR
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     void
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     __move_median_to_first(_Iterator __result,_Iterator __a, _Iterator __b,
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 			   _Iterator __c, _Compare __comp)
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     {
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       if (__comp(__a, __b))
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	{
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  if (__comp(__b, __c))
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    std::iter_swap(__result, __b);
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  else if (__comp(__a, __c))
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    std::iter_swap(__result, __c);
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  else
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    std::iter_swap(__result, __a);
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	}
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       else if (__comp(__a, __c))
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	std::iter_swap(__result, __a);
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       else if (__comp(__b, __c))
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	std::iter_swap(__result, __c);
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       else
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	std::iter_swap(__result, __b);
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccaSMceU.s 			page 8


  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     }
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   /// Provided for stable_partition to use.
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   template<typename _InputIterator, typename _Predicate>
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _GLIBCXX20_CONSTEXPR
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     inline _InputIterator
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     __find_if_not(_InputIterator __first, _InputIterator __last,
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		  _Predicate __pred)
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     {
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       return std::__find_if(__first, __last,
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 			    __gnu_cxx::__ops::__negate(__pred),
 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 			    std::__iterator_category(__first));
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     }
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   /// Like find_if_not(), but uses and updates a count of the
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   /// remaining range length instead of comparing against an end
 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   /// iterator.
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   template<typename _InputIterator, typename _Predicate, typename _Distance>
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _GLIBCXX20_CONSTEXPR
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _InputIterator
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     __find_if_not_n(_InputIterator __first, _Distance& __len, _Predicate __pred)
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     {
 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       for (; __len; --__len,  (void) ++__first)
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	if (!__pred(__first))
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  break;
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       return __first;
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     }
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   // set_difference
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   // set_intersection
 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   // set_symmetric_difference
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   // set_union
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   // for_each
 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   // find
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   // find_if
 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   // find_first_of
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   // adjacent_find
 134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   // count
 135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   // count_if
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   // search
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2,
 139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	   typename _BinaryPredicate>
 140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _GLIBCXX20_CONSTEXPR
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _ForwardIterator1
 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     __search(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	     _ForwardIterator2 __first2, _ForwardIterator2 __last2,
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	     _BinaryPredicate  __predicate)
 145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     {
 146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       // Test for empty ranges
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       if (__first1 == __last1 || __first2 == __last2)
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	return __first1;
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       // Test for a pattern of length 1.
 151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       _ForwardIterator2 __p1(__first2);
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       if (++__p1 == __last2)
 153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	return std::__find_if(__first1, __last1,
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccaSMceU.s 			page 9


 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		__gnu_cxx::__ops::__iter_comp_iter(__predicate, __first2));
 155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       // General case.
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       _ForwardIterator1 __current = __first1;
 158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       for (;;)
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	{
 161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  __first1 =
 162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    std::__find_if(__first1, __last1,
 163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		__gnu_cxx::__ops::__iter_comp_iter(__predicate, __first2));
 164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
 165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  if (__first1 == __last1)
 166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    return __last1;
 167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
 168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  _ForwardIterator2 __p = __p1;
 169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  __current = __first1;
 170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  if (++__current == __last1)
 171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    return __last1;
 172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
 173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  while (__predicate(__current, __p))
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    {
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	      if (++__p == __last2)
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		return __first1;
 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	      if (++__current == __last1)
 178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		return __last1;
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    }
 180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  ++__first1;
 181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	}
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       return __first1;
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     }
 184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
 185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   // search_n
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   /**
 188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  This is an helper function for search_n overloaded for forward iterators.
 189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   */
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   template<typename _ForwardIterator, typename _Integer,
 191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	   typename _UnaryPredicate>
 192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _GLIBCXX20_CONSTEXPR
 193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _ForwardIterator
 194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     __search_n_aux(_ForwardIterator __first, _ForwardIterator __last,
 195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		   _Integer __count, _UnaryPredicate __unary_pred,
 196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		   std::forward_iterator_tag)
 197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     {
 198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __first = std::__find_if(__first, __last, __unary_pred);
 199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       while (__first != __last)
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	{
 201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  typename iterator_traits<_ForwardIterator>::difference_type
 202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    __n = __count;
 203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  _ForwardIterator __i = __first;
 204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  ++__i;
 205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  while (__i != __last && __n != 1 && __unary_pred(__i))
 206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    {
 207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	      ++__i;
 208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	      --__n;
 209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    }
 210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  if (__n == 1)
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccaSMceU.s 			page 10


 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    return __first;
 212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  if (__i == __last)
 213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    return __last;
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  __first = std::__find_if(++__i, __last, __unary_pred);
 215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	}
 216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       return __last;
 217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     }
 218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
 219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   /**
 220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  This is an helper function for search_n overloaded for random access
 221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  iterators.
 222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   */
 223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   template<typename _RandomAccessIter, typename _Integer,
 224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	   typename _UnaryPredicate>
 225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _GLIBCXX20_CONSTEXPR
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _RandomAccessIter
 227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     __search_n_aux(_RandomAccessIter __first, _RandomAccessIter __last,
 228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		   _Integer __count, _UnaryPredicate __unary_pred,
 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		   std::random_access_iterator_tag)
 230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     {
 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       typedef typename std::iterator_traits<_RandomAccessIter>::difference_type
 232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	_DistanceType;
 233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
 234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       _DistanceType __tailSize = __last - __first;
 235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       _DistanceType __remainder = __count;
 236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
 237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       while (__remainder <= __tailSize) // the main loop...
 238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	{
 239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  __first += __remainder;
 240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  __tailSize -= __remainder;
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  // __first here is always pointing to one past the last element of
 242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  // next possible match.
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  _RandomAccessIter __backTrack = __first; 
 244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  while (__unary_pred(--__backTrack))
 245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    {
 246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	      if (--__remainder == 0)
 247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		return (__first - __count); // Success
 248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    }
 249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  __remainder = __count + 1 - (__first - __backTrack);
 250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	}
 251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       return __last; // Failure
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     }
 253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
 254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   template<typename _ForwardIterator, typename _Integer,
 255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	   typename _UnaryPredicate>
 256:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _GLIBCXX20_CONSTEXPR
 257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _ForwardIterator
 258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     __search_n(_ForwardIterator __first, _ForwardIterator __last,
 259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	       _Integer __count,
 260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	       _UnaryPredicate __unary_pred)
 261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     {
 262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       if (__count <= 0)
 263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	return __first;
 264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
 265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       if (__count == 1)
 266:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	return std::__find_if(__first, __last, __unary_pred);
 267:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccaSMceU.s 			page 11


 268:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       return std::__search_n_aux(__first, __last, __count, __unary_pred,
 269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 				 std::__iterator_category(__first));
 270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     }
 271:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
 272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   // find_end for forward iterators.
 273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2,
 274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	   typename _BinaryPredicate>
 275:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _GLIBCXX20_CONSTEXPR
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _ForwardIterator1
 277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     __find_end(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
 278:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	       _ForwardIterator2 __first2, _ForwardIterator2 __last2,
 279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	       forward_iterator_tag, forward_iterator_tag,
 280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	       _BinaryPredicate __comp)
 281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     {
 282:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       if (__first2 == __last2)
 283:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	return __last1;
 284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
 285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       _ForwardIterator1 __result = __last1;
 286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       while (1)
 287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	{
 288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  _ForwardIterator1 __new_result
 289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    = std::__search(__first1, __last1, __first2, __last2, __comp);
 290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  if (__new_result == __last1)
 291:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    return __result;
 292:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  else
 293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    {
 294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	      __result = __new_result;
 295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	      __first1 = __new_result;
 296:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	      ++__first1;
 297:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    }
 298:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	}
 299:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     }
 300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
 301:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   // find_end for bidirectional iterators (much faster).
 302:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   template<typename _BidirectionalIterator1, typename _BidirectionalIterator2,
 303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	   typename _BinaryPredicate>
 304:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _GLIBCXX20_CONSTEXPR
 305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _BidirectionalIterator1
 306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     __find_end(_BidirectionalIterator1 __first1,
 307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	       _BidirectionalIterator1 __last1,
 308:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	       _BidirectionalIterator2 __first2,
 309:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	       _BidirectionalIterator2 __last2,
 310:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	       bidirectional_iterator_tag, bidirectional_iterator_tag,
 311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	       _BinaryPredicate __comp)
 312:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     {
 313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       // concept requirements
 314:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_function_requires(_BidirectionalIteratorConcept<
 315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 				  _BidirectionalIterator1>)
 316:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_function_requires(_BidirectionalIteratorConcept<
 317:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 				  _BidirectionalIterator2>)
 318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
 319:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       typedef reverse_iterator<_BidirectionalIterator1> _RevIterator1;
 320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       typedef reverse_iterator<_BidirectionalIterator2> _RevIterator2;
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       _RevIterator1 __rlast1(__first1);
 323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       _RevIterator2 __rlast2(__first2);
 324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       _RevIterator1 __rresult = std::__search(_RevIterator1(__last1), __rlast1,
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccaSMceU.s 			page 12


 325:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 					      _RevIterator2(__last2), __rlast2,
 326:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 					      __comp);
 327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
 328:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       if (__rresult == __rlast1)
 329:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	return __last1;
 330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       else
 331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	{
 332:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  _BidirectionalIterator1 __result = __rresult.base();
 333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  std::advance(__result, -std::distance(__first2, __last2));
 334:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  return __result;
 335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	}
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     }
 337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
 338:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   /**
 339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @brief  Find last matching subsequence in a sequence.
 340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @ingroup non_mutating_algorithms
 341:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __first1  Start of range to search.
 342:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __last1   End of range to search.
 343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __first2  Start of sequence to match.
 344:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __last2   End of sequence to match.
 345:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @return   The last iterator @c i in the range
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @p [__first1,__last1-(__last2-__first2)) such that @c *(i+N) ==
 347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @p *(__first2+N) for each @c N in the range @p
 348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  [0,__last2-__first2), or @p __last1 if no such iterator exists.
 349:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  Searches the range @p [__first1,__last1) for a sub-sequence that
 351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  compares equal value-by-value with the sequence given by @p
 352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  [__first2,__last2) and returns an iterator to the __first
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  element of the sub-sequence, or @p __last1 if the sub-sequence
 354:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  is not found.  The sub-sequence will be the last such
 355:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  subsequence contained in [__first1,__last1).
 356:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *
 357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  Because the sub-sequence must lie completely within the range @p
 358:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  [__first1,__last1) it must start at a position less than @p
 359:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  __last1-(__last2-__first2) where @p __last2-__first2 is the
 360:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  length of the sub-sequence.  This means that the returned
 361:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  iterator @c i will be in the range @p
 362:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  [__first1,__last1-(__last2-__first2))
 363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   */
 364:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2>
 365:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _GLIBCXX20_CONSTEXPR
 366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     inline _ForwardIterator1
 367:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     find_end(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
 368:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	     _ForwardIterator2 __first2, _ForwardIterator2 __last2)
 369:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     {
 370:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       // concept requirements
 371:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator1>)
 372:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator2>)
 373:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_function_requires(_EqualOpConcept<
 374:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    typename iterator_traits<_ForwardIterator1>::value_type,
 375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    typename iterator_traits<_ForwardIterator2>::value_type>)
 376:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_requires_valid_range(__first1, __last1);
 377:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_requires_valid_range(__first2, __last2);
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
 379:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       return std::__find_end(__first1, __last1, __first2, __last2,
 380:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 			     std::__iterator_category(__first1),
 381:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 			     std::__iterator_category(__first2),
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccaSMceU.s 			page 13


 382:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 			     __gnu_cxx::__ops::__iter_equal_to_iter());
 383:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     }
 384:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
 385:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   /**
 386:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @brief  Find last matching subsequence in a sequence using a predicate.
 387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @ingroup non_mutating_algorithms
 388:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __first1  Start of range to search.
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __last1   End of range to search.
 390:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __first2  Start of sequence to match.
 391:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __last2   End of sequence to match.
 392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __comp    The predicate to use.
 393:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @return The last iterator @c i in the range @p
 394:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  [__first1,__last1-(__last2-__first2)) such that @c
 395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  predicate(*(i+N), @p (__first2+N)) is true for each @c N in the
 396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  range @p [0,__last2-__first2), or @p __last1 if no such iterator
 397:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  exists.
 398:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *
 399:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  Searches the range @p [__first1,__last1) for a sub-sequence that
 400:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  compares equal value-by-value with the sequence given by @p
 401:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  [__first2,__last2) using comp as a predicate and returns an
 402:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  iterator to the first element of the sub-sequence, or @p __last1
 403:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  if the sub-sequence is not found.  The sub-sequence will be the
 404:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  last such subsequence contained in [__first,__last1).
 405:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *
 406:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  Because the sub-sequence must lie completely within the range @p
 407:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  [__first1,__last1) it must start at a position less than @p
 408:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  __last1-(__last2-__first2) where @p __last2-__first2 is the
 409:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  length of the sub-sequence.  This means that the returned
 410:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  iterator @c i will be in the range @p
 411:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  [__first1,__last1-(__last2-__first2))
 412:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   */
 413:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2,
 414:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	   typename _BinaryPredicate>
 415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _GLIBCXX20_CONSTEXPR
 416:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     inline _ForwardIterator1
 417:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     find_end(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
 418:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	     _ForwardIterator2 __first2, _ForwardIterator2 __last2,
 419:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	     _BinaryPredicate __comp)
 420:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     {
 421:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       // concept requirements
 422:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator1>)
 423:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator2>)
 424:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_function_requires(_BinaryPredicateConcept<_BinaryPredicate,
 425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    typename iterator_traits<_ForwardIterator1>::value_type,
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    typename iterator_traits<_ForwardIterator2>::value_type>)
 427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_requires_valid_range(__first1, __last1);
 428:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_requires_valid_range(__first2, __last2);
 429:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
 430:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       return std::__find_end(__first1, __last1, __first2, __last2,
 431:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 			     std::__iterator_category(__first1),
 432:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 			     std::__iterator_category(__first2),
 433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 			     __gnu_cxx::__ops::__iter_comp_iter(__comp));
 434:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     }
 435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
 436:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** #if __cplusplus >= 201103L
 437:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   /**
 438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @brief  Checks that a predicate is true for all the elements
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccaSMceU.s 			page 14


 439:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *          of a sequence.
 440:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @ingroup non_mutating_algorithms
 441:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __first   An input iterator.
 442:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __last    An input iterator.
 443:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __pred    A predicate.
 444:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @return  True if the check is true, false otherwise.
 445:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *
 446:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  Returns true if @p __pred is true for each element in the range
 447:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @p [__first,__last), and false otherwise.
 448:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   */
 449:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   template<typename _InputIterator, typename _Predicate>
 450:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _GLIBCXX20_CONSTEXPR
 451:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     inline bool
 452:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     all_of(_InputIterator __first, _InputIterator __last, _Predicate __pred)
 453:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     { return __last == std::find_if_not(__first, __last, __pred); }
 454:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
 455:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   /**
 456:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @brief  Checks that a predicate is false for all the elements
 457:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *          of a sequence.
 458:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @ingroup non_mutating_algorithms
 459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __first   An input iterator.
 460:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __last    An input iterator.
 461:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __pred    A predicate.
 462:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @return  True if the check is true, false otherwise.
 463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *
 464:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  Returns true if @p __pred is false for each element in the range
 465:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @p [__first,__last), and false otherwise.
 466:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   */
 467:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   template<typename _InputIterator, typename _Predicate>
 468:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _GLIBCXX20_CONSTEXPR
 469:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     inline bool
 470:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     none_of(_InputIterator __first, _InputIterator __last, _Predicate __pred)
 471:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     { return __last == _GLIBCXX_STD_A::find_if(__first, __last, __pred); }
 472:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
 473:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   /**
 474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @brief  Checks that a predicate is true for at least one element
 475:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *          of a sequence.
 476:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @ingroup non_mutating_algorithms
 477:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __first   An input iterator.
 478:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __last    An input iterator.
 479:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __pred    A predicate.
 480:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @return  True if the check is true, false otherwise.
 481:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *
 482:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  Returns true if an element exists in the range @p
 483:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  [__first,__last) such that @p __pred is true, and false
 484:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  otherwise.
 485:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   */
 486:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   template<typename _InputIterator, typename _Predicate>
 487:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _GLIBCXX20_CONSTEXPR
 488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     inline bool
 489:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     any_of(_InputIterator __first, _InputIterator __last, _Predicate __pred)
 490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     { return !std::none_of(__first, __last, __pred); }
 491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
 492:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   /**
 493:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @brief  Find the first element in a sequence for which a
 494:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *          predicate is false.
 495:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @ingroup non_mutating_algorithms
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccaSMceU.s 			page 15


 496:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __first  An input iterator.
 497:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __last   An input iterator.
 498:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __pred   A predicate.
 499:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @return   The first iterator @c i in the range @p [__first,__last)
 500:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  such that @p __pred(*i) is false, or @p __last if no such iterator exists.
 501:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   */
 502:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   template<typename _InputIterator, typename _Predicate>
 503:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _GLIBCXX20_CONSTEXPR
 504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     inline _InputIterator
 505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     find_if_not(_InputIterator __first, _InputIterator __last,
 506:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		_Predicate __pred)
 507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     {
 508:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       // concept requirements
 509:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_function_requires(_InputIteratorConcept<_InputIterator>)
 510:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_function_requires(_UnaryPredicateConcept<_Predicate,
 511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	      typename iterator_traits<_InputIterator>::value_type>)
 512:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
 513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       return std::__find_if_not(__first, __last,
 514:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 				__gnu_cxx::__ops::__pred_iter(__pred));
 515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     }
 516:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
 517:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   /**
 518:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @brief  Checks whether the sequence is partitioned.
 519:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @ingroup mutating_algorithms
 520:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __first  An input iterator.
 521:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __last   An input iterator.
 522:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __pred   A predicate.
 523:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @return  True if the range @p [__first,__last) is partioned by @p __pred,
 524:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  i.e. if all elements that satisfy @p __pred appear before those that
 525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  do not.
 526:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   */
 527:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   template<typename _InputIterator, typename _Predicate>
 528:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _GLIBCXX20_CONSTEXPR
 529:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     inline bool
 530:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     is_partitioned(_InputIterator __first, _InputIterator __last,
 531:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		   _Predicate __pred)
 532:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     {
 533:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __first = std::find_if_not(__first, __last, __pred);
 534:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       if (__first == __last)
 535:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	return true;
 536:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       ++__first;
 537:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       return std::none_of(__first, __last, __pred);
 538:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     }
 539:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
 540:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   /**
 541:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @brief  Find the partition point of a partitioned range.
 542:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @ingroup mutating_algorithms
 543:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __first   An iterator.
 544:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __last    Another iterator.
 545:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __pred    A predicate.
 546:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @return  An iterator @p mid such that @p all_of(__first, mid, __pred)
 547:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *           and @p none_of(mid, __last, __pred) are both true.
 548:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   */
 549:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   template<typename _ForwardIterator, typename _Predicate>
 550:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _GLIBCXX20_CONSTEXPR
 551:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _ForwardIterator
 552:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     partition_point(_ForwardIterator __first, _ForwardIterator __last,
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccaSMceU.s 			page 16


 553:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		    _Predicate __pred)
 554:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     {
 555:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       // concept requirements
 556:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
 557:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_function_requires(_UnaryPredicateConcept<_Predicate,
 558:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	      typename iterator_traits<_ForwardIterator>::value_type>)
 559:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
 560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       // A specific debug-mode test will be necessary...
 561:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
 562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
 563:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       typedef typename iterator_traits<_ForwardIterator>::difference_type
 564:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	_DistanceType;
 565:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
 566:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       _DistanceType __len = std::distance(__first, __last);
 567:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
 568:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       while (__len > 0)
 569:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	{
 570:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  _DistanceType __half = __len >> 1;
 571:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  _ForwardIterator __middle = __first;
 572:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  std::advance(__middle, __half);
 573:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  if (__pred(*__middle))
 574:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    {
 575:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	      __first = __middle;
 576:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	      ++__first;
 577:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	      __len = __len - __half - 1;
 578:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    }
 579:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  else
 580:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    __len = __half;
 581:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	}
 582:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       return __first;
 583:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     }
 584:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** #endif
 585:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
 586:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   template<typename _InputIterator, typename _OutputIterator,
 587:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	   typename _Predicate>
 588:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _GLIBCXX20_CONSTEXPR
 589:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _OutputIterator
 590:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     __remove_copy_if(_InputIterator __first, _InputIterator __last,
 591:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		     _OutputIterator __result, _Predicate __pred)
 592:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     {
 593:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       for (; __first != __last; ++__first)
 594:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	if (!__pred(__first))
 595:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  {
 596:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    *__result = *__first;
 597:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    ++__result;
 598:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  }
 599:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       return __result;
 600:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     }
 601:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
 602:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   /**
 603:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @brief Copy a sequence, removing elements of a given value.
 604:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @ingroup mutating_algorithms
 605:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __first   An input iterator.
 606:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __last    An input iterator.
 607:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __result  An output iterator.
 608:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __value   The value to be removed.
 609:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @return   An iterator designating the end of the resulting sequence.
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccaSMceU.s 			page 17


 610:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *
 611:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  Copies each element in the range @p [__first,__last) not equal
 612:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  to @p __value to the range beginning at @p __result.
 613:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  remove_copy() is stable, so the relative order of elements that
 614:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  are copied is unchanged.
 615:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   */
 616:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   template<typename _InputIterator, typename _OutputIterator, typename _Tp>
 617:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _GLIBCXX20_CONSTEXPR
 618:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     inline _OutputIterator
 619:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     remove_copy(_InputIterator __first, _InputIterator __last,
 620:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		_OutputIterator __result, const _Tp& __value)
 621:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     {
 622:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       // concept requirements
 623:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_function_requires(_InputIteratorConcept<_InputIterator>)
 624:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_OutputIterator,
 625:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    typename iterator_traits<_InputIterator>::value_type>)
 626:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_function_requires(_EqualOpConcept<
 627:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    typename iterator_traits<_InputIterator>::value_type, _Tp>)
 628:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
 629:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
 630:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       return std::__remove_copy_if(__first, __last, __result,
 631:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	__gnu_cxx::__ops::__iter_equals_val(__value));
 632:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     }
 633:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
 634:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   /**
 635:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @brief Copy a sequence, removing elements for which a predicate is true.
 636:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @ingroup mutating_algorithms
 637:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __first   An input iterator.
 638:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __last    An input iterator.
 639:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __result  An output iterator.
 640:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __pred    A predicate.
 641:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @return   An iterator designating the end of the resulting sequence.
 642:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *
 643:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  Copies each element in the range @p [__first,__last) for which
 644:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @p __pred returns false to the range beginning at @p __result.
 645:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *
 646:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  remove_copy_if() is stable, so the relative order of elements that are
 647:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  copied is unchanged.
 648:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   */
 649:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   template<typename _InputIterator, typename _OutputIterator,
 650:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	   typename _Predicate>
 651:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _GLIBCXX20_CONSTEXPR
 652:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     inline _OutputIterator
 653:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     remove_copy_if(_InputIterator __first, _InputIterator __last,
 654:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		   _OutputIterator __result, _Predicate __pred)
 655:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     {
 656:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       // concept requirements
 657:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_function_requires(_InputIteratorConcept<_InputIterator>)
 658:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_OutputIterator,
 659:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    typename iterator_traits<_InputIterator>::value_type>)
 660:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_function_requires(_UnaryPredicateConcept<_Predicate,
 661:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    typename iterator_traits<_InputIterator>::value_type>)
 662:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
 663:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
 664:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       return std::__remove_copy_if(__first, __last, __result,
 665:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 				   __gnu_cxx::__ops::__pred_iter(__pred));
 666:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     }
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccaSMceU.s 			page 18


 667:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
 668:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** #if __cplusplus >= 201103L
 669:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   /**
 670:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @brief Copy the elements of a sequence for which a predicate is true.
 671:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @ingroup mutating_algorithms
 672:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __first   An input iterator.
 673:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __last    An input iterator.
 674:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __result  An output iterator.
 675:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __pred    A predicate.
 676:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @return   An iterator designating the end of the resulting sequence.
 677:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *
 678:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  Copies each element in the range @p [__first,__last) for which
 679:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @p __pred returns true to the range beginning at @p __result.
 680:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *
 681:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  copy_if() is stable, so the relative order of elements that are
 682:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  copied is unchanged.
 683:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   */
 684:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   template<typename _InputIterator, typename _OutputIterator,
 685:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	   typename _Predicate>
 686:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _GLIBCXX20_CONSTEXPR
 687:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _OutputIterator
 688:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     copy_if(_InputIterator __first, _InputIterator __last,
 689:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    _OutputIterator __result, _Predicate __pred)
 690:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     {
 691:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       // concept requirements
 692:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_function_requires(_InputIteratorConcept<_InputIterator>)
 693:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_OutputIterator,
 694:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    typename iterator_traits<_InputIterator>::value_type>)
 695:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_function_requires(_UnaryPredicateConcept<_Predicate,
 696:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    typename iterator_traits<_InputIterator>::value_type>)
 697:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
 698:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
 699:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       for (; __first != __last; ++__first)
 700:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	if (__pred(*__first))
 701:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  {
 702:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    *__result = *__first;
 703:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    ++__result;
 704:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  }
 705:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       return __result;
 706:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     }
 707:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
 708:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   template<typename _InputIterator, typename _Size, typename _OutputIterator>
 709:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _GLIBCXX20_CONSTEXPR
 710:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _OutputIterator
 711:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     __copy_n_a(_InputIterator __first, _Size __n, _OutputIterator __result)
 712:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     {
 713:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       if (__n > 0)
 714:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	{
 715:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  while (true)
 716:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    {
 717:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	      *__result = *__first;
 718:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	      ++__result;
 719:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	      if (--__n > 0)
 720:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		++__first;
 721:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	      else
 722:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		break;
 723:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    }
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccaSMceU.s 			page 19


 724:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	}
 725:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       return __result;
 726:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     }
 727:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****  
 728:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   template<typename _CharT, typename _Size>
 729:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     __enable_if_t<__is_char<_CharT>::__value, _CharT*>
 730:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     __copy_n_a(istreambuf_iterator<_CharT, char_traits<_CharT>>,
 731:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	       _Size, _CharT*);
 732:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
 733:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   template<typename _InputIterator, typename _Size, typename _OutputIterator>
 734:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _GLIBCXX20_CONSTEXPR
 735:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _OutputIterator
 736:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     __copy_n(_InputIterator __first, _Size __n,
 737:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	     _OutputIterator __result, input_iterator_tag)
 738:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     {
 739:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       return std::__niter_wrap(__result,
 740:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 			       __copy_n_a(__first, __n,
 741:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 					  std::__niter_base(__result)));
 742:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     }
 743:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
 744:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   template<typename _RandomAccessIterator, typename _Size,
 745:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	   typename _OutputIterator>
 746:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _GLIBCXX20_CONSTEXPR
 747:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     inline _OutputIterator
 748:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     __copy_n(_RandomAccessIterator __first, _Size __n,
 749:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	     _OutputIterator __result, random_access_iterator_tag)
 750:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     { return std::copy(__first, __first + __n, __result); }
 751:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
 752:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   /**
 753:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @brief Copies the range [first,first+n) into [result,result+n).
 754:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @ingroup mutating_algorithms
 755:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __first  An input iterator.
 756:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __n      The number of elements to copy.
 757:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __result An output iterator.
 758:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @return  result+n.
 759:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *
 760:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  This inline function will boil down to a call to @c memmove whenever
 761:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  possible.  Failing that, if random access iterators are passed, then the
 762:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  loop count will be known (and therefore a candidate for compiler
 763:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  optimizations such as unrolling).
 764:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   */
 765:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   template<typename _InputIterator, typename _Size, typename _OutputIterator>
 766:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _GLIBCXX20_CONSTEXPR
 767:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     inline _OutputIterator
 768:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     copy_n(_InputIterator __first, _Size __n, _OutputIterator __result)
 769:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     {
 770:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       // concept requirements
 771:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_function_requires(_InputIteratorConcept<_InputIterator>)
 772:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_OutputIterator,
 773:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    typename iterator_traits<_InputIterator>::value_type>)
 774:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_requires_can_increment(__first, __n);
 775:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_requires_can_increment(__result, __n);
 776:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
 777:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       return std::__copy_n(__first, __n, __result,
 778:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 			   std::__iterator_category(__first));
 779:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     }
 780:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccaSMceU.s 			page 20


 781:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   /**
 782:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @brief Copy the elements of a sequence to separate output sequences
 783:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *         depending on the truth value of a predicate.
 784:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @ingroup mutating_algorithms
 785:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __first   An input iterator.
 786:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __last    An input iterator.
 787:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __out_true   An output iterator.
 788:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __out_false  An output iterator.
 789:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __pred    A predicate.
 790:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @return   A pair designating the ends of the resulting sequences.
 791:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *
 792:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  Copies each element in the range @p [__first,__last) for which
 793:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @p __pred returns true to the range beginning at @p out_true
 794:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  and each element for which @p __pred returns false to @p __out_false.
 795:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   */
 796:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   template<typename _InputIterator, typename _OutputIterator1,
 797:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	   typename _OutputIterator2, typename _Predicate>
 798:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _GLIBCXX20_CONSTEXPR
 799:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     pair<_OutputIterator1, _OutputIterator2>
 800:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     partition_copy(_InputIterator __first, _InputIterator __last,
 801:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		   _OutputIterator1 __out_true, _OutputIterator2 __out_false,
 802:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		   _Predicate __pred)
 803:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     {
 804:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       // concept requirements
 805:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_function_requires(_InputIteratorConcept<_InputIterator>)
 806:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_OutputIterator1,
 807:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    typename iterator_traits<_InputIterator>::value_type>)
 808:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_OutputIterator2,
 809:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    typename iterator_traits<_InputIterator>::value_type>)
 810:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_function_requires(_UnaryPredicateConcept<_Predicate,
 811:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    typename iterator_traits<_InputIterator>::value_type>)
 812:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
 813:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       
 814:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       for (; __first != __last; ++__first)
 815:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	if (__pred(*__first))
 816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  {
 817:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    *__out_true = *__first;
 818:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    ++__out_true;
 819:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  }
 820:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	else
 821:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  {
 822:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    *__out_false = *__first;
 823:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    ++__out_false;
 824:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  }
 825:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
 826:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       return pair<_OutputIterator1, _OutputIterator2>(__out_true, __out_false);
 827:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     }
 828:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** #endif // C++11
 829:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
 830:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   template<typename _ForwardIterator, typename _Predicate>
 831:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _GLIBCXX20_CONSTEXPR
 832:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _ForwardIterator
 833:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     __remove_if(_ForwardIterator __first, _ForwardIterator __last,
 834:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		_Predicate __pred)
 835:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     {
 836:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __first = std::__find_if(__first, __last, __pred);
 837:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       if (__first == __last)
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccaSMceU.s 			page 21


 838:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	return __first;
 839:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       _ForwardIterator __result = __first;
 840:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       ++__first;
 841:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       for (; __first != __last; ++__first)
 842:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	if (!__pred(__first))
 843:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  {
 844:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    *__result = _GLIBCXX_MOVE(*__first);
 845:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    ++__result;
 846:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  }
 847:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       return __result;
 848:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     }
 849:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
 850:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   /**
 851:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @brief Remove elements from a sequence.
 852:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @ingroup mutating_algorithms
 853:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __first  An input iterator.
 854:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __last   An input iterator.
 855:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __value  The value to be removed.
 856:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @return   An iterator designating the end of the resulting sequence.
 857:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *
 858:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  All elements equal to @p __value are removed from the range
 859:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @p [__first,__last).
 860:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *
 861:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  remove() is stable, so the relative order of elements that are
 862:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  not removed is unchanged.
 863:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *
 864:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  Elements between the end of the resulting sequence and @p __last
 865:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  are still present, but their value is unspecified.
 866:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   */
 867:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   template<typename _ForwardIterator, typename _Tp>
 868:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _GLIBCXX20_CONSTEXPR
 869:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     inline _ForwardIterator
 870:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     remove(_ForwardIterator __first, _ForwardIterator __last,
 871:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	   const _Tp& __value)
 872:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     {
 873:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       // concept requirements
 874:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 875:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 				  _ForwardIterator>)
 876:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_function_requires(_EqualOpConcept<
 877:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    typename iterator_traits<_ForwardIterator>::value_type, _Tp>)
 878:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
 879:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
 880:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       return std::__remove_if(__first, __last,
 881:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		__gnu_cxx::__ops::__iter_equals_val(__value));
 882:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     }
 883:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
 884:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   /**
 885:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @brief Remove elements from a sequence using a predicate.
 886:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @ingroup mutating_algorithms
 887:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __first  A forward iterator.
 888:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __last   A forward iterator.
 889:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __pred   A predicate.
 890:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @return   An iterator designating the end of the resulting sequence.
 891:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *
 892:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  All elements for which @p __pred returns true are removed from the range
 893:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @p [__first,__last).
 894:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccaSMceU.s 			page 22


 895:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  remove_if() is stable, so the relative order of elements that are
 896:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  not removed is unchanged.
 897:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *
 898:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  Elements between the end of the resulting sequence and @p __last
 899:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  are still present, but their value is unspecified.
 900:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   */
 901:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   template<typename _ForwardIterator, typename _Predicate>
 902:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _GLIBCXX20_CONSTEXPR
 903:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     inline _ForwardIterator
 904:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     remove_if(_ForwardIterator __first, _ForwardIterator __last,
 905:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	      _Predicate __pred)
 906:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     {
 907:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       // concept requirements
 908:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 909:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 				  _ForwardIterator>)
 910:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_function_requires(_UnaryPredicateConcept<_Predicate,
 911:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    typename iterator_traits<_ForwardIterator>::value_type>)
 912:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
 913:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
 914:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       return std::__remove_if(__first, __last,
 915:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 			      __gnu_cxx::__ops::__pred_iter(__pred));
 916:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     }
 917:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
 918:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   template<typename _ForwardIterator, typename _BinaryPredicate>
 919:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _GLIBCXX20_CONSTEXPR
 920:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _ForwardIterator
 921:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     __adjacent_find(_ForwardIterator __first, _ForwardIterator __last,
 922:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		    _BinaryPredicate __binary_pred)
 923:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     {
 924:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       if (__first == __last)
 925:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	return __last;
 926:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       _ForwardIterator __next = __first;
 927:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       while (++__next != __last)
 928:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	{
 929:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  if (__binary_pred(__first, __next))
 930:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    return __first;
 931:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  __first = __next;
 932:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	}
 933:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       return __last;
 934:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     }
 935:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
 936:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   template<typename _ForwardIterator, typename _BinaryPredicate>
 937:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _GLIBCXX20_CONSTEXPR
 938:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _ForwardIterator
 939:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     __unique(_ForwardIterator __first, _ForwardIterator __last,
 940:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	     _BinaryPredicate __binary_pred)
 941:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     {
 942:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       // Skip the beginning, if already unique.
 943:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __first = std::__adjacent_find(__first, __last, __binary_pred);
 944:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       if (__first == __last)
 945:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	return __last;
 946:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
 947:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       // Do the real copy work.
 948:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       _ForwardIterator __dest = __first;
 949:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       ++__first;
 950:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       while (++__first != __last)
 951:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	if (!__binary_pred(__dest, __first))
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccaSMceU.s 			page 23


 952:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  *++__dest = _GLIBCXX_MOVE(*__first);
 953:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       return ++__dest;
 954:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     }
 955:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
 956:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   /**
 957:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @brief Remove consecutive duplicate values from a sequence.
 958:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @ingroup mutating_algorithms
 959:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __first  A forward iterator.
 960:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __last   A forward iterator.
 961:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @return  An iterator designating the end of the resulting sequence.
 962:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *
 963:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  Removes all but the first element from each group of consecutive
 964:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  values that compare equal.
 965:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  unique() is stable, so the relative order of elements that are
 966:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  not removed is unchanged.
 967:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  Elements between the end of the resulting sequence and @p __last
 968:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  are still present, but their value is unspecified.
 969:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   */
 970:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   template<typename _ForwardIterator>
 971:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _GLIBCXX20_CONSTEXPR
 972:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     inline _ForwardIterator
 973:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     unique(_ForwardIterator __first, _ForwardIterator __last)
 974:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     {
 975:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       // concept requirements
 976:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 977:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 				  _ForwardIterator>)
 978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_function_requires(_EqualityComparableConcept<
 979:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		     typename iterator_traits<_ForwardIterator>::value_type>)
 980:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
 981:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
 982:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       return std::__unique(__first, __last,
 983:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 			   __gnu_cxx::__ops::__iter_equal_to_iter());
 984:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     }
 985:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
 986:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   /**
 987:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @brief Remove consecutive values from a sequence using a predicate.
 988:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @ingroup mutating_algorithms
 989:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __first        A forward iterator.
 990:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __last         A forward iterator.
 991:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __binary_pred  A binary predicate.
 992:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @return  An iterator designating the end of the resulting sequence.
 993:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *
 994:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  Removes all but the first element from each group of consecutive
 995:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  values for which @p __binary_pred returns true.
 996:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  unique() is stable, so the relative order of elements that are
 997:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  not removed is unchanged.
 998:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  Elements between the end of the resulting sequence and @p __last
 999:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  are still present, but their value is unspecified.
1000:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   */
1001:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   template<typename _ForwardIterator, typename _BinaryPredicate>
1002:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _GLIBCXX20_CONSTEXPR
1003:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     inline _ForwardIterator
1004:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     unique(_ForwardIterator __first, _ForwardIterator __last,
1005:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	   _BinaryPredicate __binary_pred)
1006:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     {
1007:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       // concept requirements
1008:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccaSMceU.s 			page 24


1009:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 				  _ForwardIterator>)
1010:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_function_requires(_BinaryPredicateConcept<_BinaryPredicate,
1011:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		typename iterator_traits<_ForwardIterator>::value_type,
1012:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		typename iterator_traits<_ForwardIterator>::value_type>)
1013:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
1014:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
1015:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       return std::__unique(__first, __last,
1016:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 			   __gnu_cxx::__ops::__iter_comp_iter(__binary_pred));
1017:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     }
1018:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
1019:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   /**
1020:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  This is an uglified
1021:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  unique_copy(_InputIterator, _InputIterator, _OutputIterator,
1022:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *              _BinaryPredicate)
1023:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  overloaded for forward iterators and output iterator as result.
1024:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   */
1025:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   template<typename _ForwardIterator, typename _OutputIterator,
1026:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	   typename _BinaryPredicate>
1027:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _GLIBCXX20_CONSTEXPR
1028:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _OutputIterator
1029:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     __unique_copy(_ForwardIterator __first, _ForwardIterator __last,
1030:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		  _OutputIterator __result, _BinaryPredicate __binary_pred,
1031:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		  forward_iterator_tag, output_iterator_tag)
1032:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     {
1033:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       // concept requirements -- iterators already checked
1034:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_function_requires(_BinaryPredicateConcept<_BinaryPredicate,
1035:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  typename iterator_traits<_ForwardIterator>::value_type,
1036:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  typename iterator_traits<_ForwardIterator>::value_type>)
1037:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
1038:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       _ForwardIterator __next = __first;
1039:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       *__result = *__first;
1040:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       while (++__next != __last)
1041:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	if (!__binary_pred(__first, __next))
1042:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  {
1043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    __first = __next;
1044:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    *++__result = *__first;
1045:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  }
1046:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       return ++__result;
1047:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     }
1048:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
1049:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   /**
1050:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  This is an uglified
1051:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  unique_copy(_InputIterator, _InputIterator, _OutputIterator,
1052:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *              _BinaryPredicate)
1053:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  overloaded for input iterators and output iterator as result.
1054:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   */
1055:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   template<typename _InputIterator, typename _OutputIterator,
1056:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	   typename _BinaryPredicate>
1057:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _GLIBCXX20_CONSTEXPR
1058:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _OutputIterator
1059:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     __unique_copy(_InputIterator __first, _InputIterator __last,
1060:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		  _OutputIterator __result, _BinaryPredicate __binary_pred,
1061:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		  input_iterator_tag, output_iterator_tag)
1062:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     {
1063:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       // concept requirements -- iterators already checked
1064:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_function_requires(_BinaryPredicateConcept<_BinaryPredicate,
1065:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  typename iterator_traits<_InputIterator>::value_type,
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccaSMceU.s 			page 25


1066:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  typename iterator_traits<_InputIterator>::value_type>)
1067:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
1068:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       typename iterator_traits<_InputIterator>::value_type __value = *__first;
1069:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __decltype(__gnu_cxx::__ops::__iter_comp_val(__binary_pred))
1070:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	__rebound_pred
1071:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	= __gnu_cxx::__ops::__iter_comp_val(__binary_pred);
1072:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       *__result = __value;
1073:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       while (++__first != __last)
1074:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	if (!__rebound_pred(__first, __value))
1075:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  {
1076:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    __value = *__first;
1077:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    *++__result = __value;
1078:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  }
1079:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       return ++__result;
1080:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     }
1081:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
1082:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   /**
1083:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  This is an uglified
1084:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  unique_copy(_InputIterator, _InputIterator, _OutputIterator,
1085:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *              _BinaryPredicate)
1086:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  overloaded for input iterators and forward iterator as result.
1087:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   */
1088:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   template<typename _InputIterator, typename _ForwardIterator,
1089:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	   typename _BinaryPredicate>
1090:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _GLIBCXX20_CONSTEXPR
1091:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _ForwardIterator
1092:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     __unique_copy(_InputIterator __first, _InputIterator __last,
1093:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		  _ForwardIterator __result, _BinaryPredicate __binary_pred,
1094:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		  input_iterator_tag, forward_iterator_tag)
1095:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     {
1096:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       // concept requirements -- iterators already checked
1097:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_function_requires(_BinaryPredicateConcept<_BinaryPredicate,
1098:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  typename iterator_traits<_ForwardIterator>::value_type,
1099:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  typename iterator_traits<_InputIterator>::value_type>)
1100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       *__result = *__first;
1101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       while (++__first != __last)
1102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	if (!__binary_pred(__result, __first))
1103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  *++__result = *__first;
1104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       return ++__result;
1105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     }
1106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
1107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   /**
1108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  This is an uglified reverse(_BidirectionalIterator,
1109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *                              _BidirectionalIterator)
1110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  overloaded for bidirectional iterators.
1111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   */
1112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   template<typename _BidirectionalIterator>
1113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _GLIBCXX20_CONSTEXPR
1114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     void
1115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     __reverse(_BidirectionalIterator __first, _BidirectionalIterator __last,
1116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	      bidirectional_iterator_tag)
1117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     {
1118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       while (true)
1119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	if (__first == __last || __first == --__last)
1120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  return;
1121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	else
1122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  {
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccaSMceU.s 			page 26


1123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    std::iter_swap(__first, __last);
1124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    ++__first;
1125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  }
1126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     }
1127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
1128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   /**
1129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  This is an uglified reverse(_BidirectionalIterator,
1130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *                              _BidirectionalIterator)
1131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  overloaded for random access iterators.
1132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   */
1133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   template<typename _RandomAccessIterator>
1134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _GLIBCXX20_CONSTEXPR
1135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     void
1136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     __reverse(_RandomAccessIterator __first, _RandomAccessIterator __last,
1137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	      random_access_iterator_tag)
1138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     {
1139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       if (__first == __last)
1140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	return;
1141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       --__last;
1142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       while (__first < __last)
1143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	{
1144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  std::iter_swap(__first, __last);
1145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  ++__first;
1146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  --__last;
1147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	}
1148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     }
1149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
1150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   /**
1151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @brief Reverse a sequence.
1152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @ingroup mutating_algorithms
1153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __first  A bidirectional iterator.
1154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __last   A bidirectional iterator.
1155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @return   reverse() returns no value.
1156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *
1157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  Reverses the order of the elements in the range @p [__first,__last),
1158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  so that the first element becomes the last etc.
1159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  For every @c i such that @p 0<=i<=(__last-__first)/2), @p reverse()
1160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  swaps @p *(__first+i) and @p *(__last-(i+1))
1161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   */
1162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   template<typename _BidirectionalIterator>
1163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _GLIBCXX20_CONSTEXPR
1164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     inline void
1165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     reverse(_BidirectionalIterator __first, _BidirectionalIterator __last)
1166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     {
1167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       // concept requirements
1168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_function_requires(_Mutable_BidirectionalIteratorConcept<
1169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 				  _BidirectionalIterator>)
1170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
1171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       std::__reverse(__first, __last, std::__iterator_category(__first));
1172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     }
1173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
1174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   /**
1175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @brief Copy a sequence, reversing its elements.
1176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @ingroup mutating_algorithms
1177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __first   A bidirectional iterator.
1178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __last    A bidirectional iterator.
1179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __result  An output iterator.
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccaSMceU.s 			page 27


1180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @return  An iterator designating the end of the resulting sequence.
1181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *
1182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  Copies the elements in the range @p [__first,__last) to the
1183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  range @p [__result,__result+(__last-__first)) such that the
1184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  order of the elements is reversed.  For every @c i such that @p
1185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  0<=i<=(__last-__first), @p reverse_copy() performs the
1186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  assignment @p *(__result+(__last-__first)-1-i) = *(__first+i).
1187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  The ranges @p [__first,__last) and @p
1188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  [__result,__result+(__last-__first)) must not overlap.
1189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   */
1190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   template<typename _BidirectionalIterator, typename _OutputIterator>
1191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _GLIBCXX20_CONSTEXPR
1192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _OutputIterator
1193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     reverse_copy(_BidirectionalIterator __first, _BidirectionalIterator __last,
1194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		 _OutputIterator __result)
1195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     {
1196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       // concept requirements
1197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_function_requires(_BidirectionalIteratorConcept<
1198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 				  _BidirectionalIterator>)
1199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_OutputIterator,
1200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		typename iterator_traits<_BidirectionalIterator>::value_type>)
1201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
1202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
1203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       while (__first != __last)
1204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	{
1205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  --__last;
1206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  *__result = *__last;
1207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  ++__result;
1208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	}
1209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       return __result;
1210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     }
1211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
1212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   /**
1213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  This is a helper function for the rotate algorithm specialized on RAIs.
1214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  It returns the greatest common divisor of two integer values.
1215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   */
1216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   template<typename _EuclideanRingElement>
1217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _GLIBCXX20_CONSTEXPR
1218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _EuclideanRingElement
1219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     __gcd(_EuclideanRingElement __m, _EuclideanRingElement __n)
1220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     {
1221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       while (__n != 0)
1222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	{
1223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  _EuclideanRingElement __t = __m % __n;
1224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  __m = __n;
1225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  __n = __t;
1226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	}
1227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       return __m;
1228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     }
1229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
1230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   inline namespace _V2
1231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   {
1232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
1233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   /// This is a helper function for the rotate algorithm.
1234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   template<typename _ForwardIterator>
1235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _GLIBCXX20_CONSTEXPR
1236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _ForwardIterator
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccaSMceU.s 			page 28


1237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     __rotate(_ForwardIterator __first,
1238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	     _ForwardIterator __middle,
1239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	     _ForwardIterator __last,
1240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	     forward_iterator_tag)
1241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     {
1242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       if (__first == __middle)
1243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	return __last;
1244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       else if (__last == __middle)
1245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	return __first;
1246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
1247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       _ForwardIterator __first2 = __middle;
1248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       do
1249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	{
1250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  std::iter_swap(__first, __first2);
1251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  ++__first;
1252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  ++__first2;
1253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  if (__first == __middle)
1254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    __middle = __first2;
1255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	}
1256:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       while (__first2 != __last);
1257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
1258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       _ForwardIterator __ret = __first;
1259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
1260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __first2 = __middle;
1261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
1262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       while (__first2 != __last)
1263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	{
1264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  std::iter_swap(__first, __first2);
1265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  ++__first;
1266:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  ++__first2;
1267:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  if (__first == __middle)
1268:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    __middle = __first2;
1269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  else if (__first2 == __last)
1270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    __first2 = __middle;
1271:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	}
1272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       return __ret;
1273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     }
1274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
1275:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    /// This is a helper function for the rotate algorithm.
1276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   template<typename _BidirectionalIterator>
1277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _GLIBCXX20_CONSTEXPR
1278:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _BidirectionalIterator
1279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     __rotate(_BidirectionalIterator __first,
1280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	     _BidirectionalIterator __middle,
1281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	     _BidirectionalIterator __last,
1282:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	      bidirectional_iterator_tag)
1283:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     {
1284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       // concept requirements
1285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_function_requires(_Mutable_BidirectionalIteratorConcept<
1286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 				  _BidirectionalIterator>)
1287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
1288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       if (__first == __middle)
1289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	return __last;
1290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       else if (__last == __middle)
1291:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	return __first;
1292:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
1293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       std::__reverse(__first,  __middle, bidirectional_iterator_tag());
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccaSMceU.s 			page 29


1294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       std::__reverse(__middle, __last,   bidirectional_iterator_tag());
1295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
1296:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       while (__first != __middle && __middle != __last)
1297:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	{
1298:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  std::iter_swap(__first, --__last);
1299:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  ++__first;
1300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	}
1301:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
1302:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       if (__first == __middle)
1303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	{
1304:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  std::__reverse(__middle, __last,   bidirectional_iterator_tag());
1305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  return __last;
1306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	}
1307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       else
1308:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	{
1309:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  std::__reverse(__first,  __middle, bidirectional_iterator_tag());
1310:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  return __first;
1311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	}
1312:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     }
1313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
1314:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   /// This is a helper function for the rotate algorithm.
1315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   template<typename _RandomAccessIterator>
1316:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _GLIBCXX20_CONSTEXPR
1317:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _RandomAccessIterator
1318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     __rotate(_RandomAccessIterator __first,
1319:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	     _RandomAccessIterator __middle,
1320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	     _RandomAccessIterator __last,
1321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	     random_access_iterator_tag)
1322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     {
1323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       // concept requirements
1324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_function_requires(_Mutable_RandomAccessIteratorConcept<
1325:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 				  _RandomAccessIterator>)
1326:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
1327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       if (__first == __middle)
1328:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	return __last;
1329:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       else if (__last == __middle)
1330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	return __first;
1331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
1332:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       typedef typename iterator_traits<_RandomAccessIterator>::difference_type
1333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	_Distance;
1334:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       typedef typename iterator_traits<_RandomAccessIterator>::value_type
1335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	_ValueType;
1336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
1337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       _Distance __n = __last   - __first;
1338:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       _Distance __k = __middle - __first;
1339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
1340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       if (__k == __n - __k)
1341:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	{
1342:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  std::swap_ranges(__first, __middle, __middle);
1343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  return __middle;
1344:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	}
1345:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
1346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       _RandomAccessIterator __p = __first;
1347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       _RandomAccessIterator __ret = __first + (__last - __middle);
1348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
1349:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       for (;;)
1350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	{
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccaSMceU.s 			page 30


1351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  if (__k < __n - __k)
1352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    {
1353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	      if (__is_pod(_ValueType) && __k == 1)
1354:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		{
1355:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		  _ValueType __t = _GLIBCXX_MOVE(*__p);
1356:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		  _GLIBCXX_MOVE3(__p + 1, __p + __n, __p);
1357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		  *(__p + __n - 1) = _GLIBCXX_MOVE(__t);
1358:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		  return __ret;
1359:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		}
1360:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	      _RandomAccessIterator __q = __p + __k;
1361:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	      for (_Distance __i = 0; __i < __n - __k; ++ __i)
1362:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		{
1363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		  std::iter_swap(__p, __q);
1364:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		  ++__p;
1365:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		  ++__q;
1366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		}
1367:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	      __n %= __k;
1368:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	      if (__n == 0)
1369:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		return __ret;
1370:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	      std::swap(__n, __k);
1371:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	      __k = __n - __k;
1372:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    }
1373:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  else
1374:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    {
1375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	      __k = __n - __k;
1376:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	      if (__is_pod(_ValueType) && __k == 1)
1377:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		{
1378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		  _ValueType __t = _GLIBCXX_MOVE(*(__p + __n - 1));
1379:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		  _GLIBCXX_MOVE_BACKWARD3(__p, __p + __n - 1, __p + __n);
1380:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		  *__p = _GLIBCXX_MOVE(__t);
1381:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		  return __ret;
1382:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		}
1383:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	      _RandomAccessIterator __q = __p + __n;
1384:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	      __p = __q - __k;
1385:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	      for (_Distance __i = 0; __i < __n - __k; ++ __i)
1386:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		{
1387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		  --__p;
1388:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		  --__q;
1389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		  std::iter_swap(__p, __q);
1390:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		}
1391:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	      __n %= __k;
1392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	      if (__n == 0)
1393:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		return __ret;
1394:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	      std::swap(__n, __k);
1395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    }
1396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	}
1397:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     }
1398:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
1399:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    // _GLIBCXX_RESOLVE_LIB_DEFECTS
1400:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    // DR 488. rotate throws away useful information
1401:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   /**
1402:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @brief Rotate the elements of a sequence.
1403:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @ingroup mutating_algorithms
1404:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __first   A forward iterator.
1405:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __middle  A forward iterator.
1406:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __last    A forward iterator.
1407:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @return  first + (last - middle).
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccaSMceU.s 			page 31


1408:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *
1409:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  Rotates the elements of the range @p [__first,__last) by 
1410:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @p (__middle - __first) positions so that the element at @p __middle
1411:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  is moved to @p __first, the element at @p __middle+1 is moved to
1412:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @p __first+1 and so on for each element in the range
1413:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @p [__first,__last).
1414:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *
1415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  This effectively swaps the ranges @p [__first,__middle) and
1416:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @p [__middle,__last).
1417:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *
1418:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  Performs
1419:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *   @p *(__first+(n+(__last-__middle))%(__last-__first))=*(__first+n)
1420:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  for each @p n in the range @p [0,__last-__first).
1421:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   */
1422:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   template<typename _ForwardIterator>
1423:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _GLIBCXX20_CONSTEXPR
1424:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     inline _ForwardIterator
1425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     rotate(_ForwardIterator __first, _ForwardIterator __middle,
1426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	   _ForwardIterator __last)
1427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     {
1428:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       // concept requirements
1429:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
1430:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 				  _ForwardIterator>)
1431:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_requires_valid_range(__first, __middle);
1432:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_requires_valid_range(__middle, __last);
1433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
1434:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       return std::__rotate(__first, __middle, __last,
1435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 			   std::__iterator_category(__first));
1436:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     }
1437:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
1438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   } // namespace _V2
1439:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
1440:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   /**
1441:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @brief Copy a sequence, rotating its elements.
1442:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @ingroup mutating_algorithms
1443:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __first   A forward iterator.
1444:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __middle  A forward iterator.
1445:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __last    A forward iterator.
1446:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __result  An output iterator.
1447:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @return   An iterator designating the end of the resulting sequence.
1448:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *
1449:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  Copies the elements of the range @p [__first,__last) to the
1450:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  range beginning at @result, rotating the copied elements by 
1451:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @p (__middle-__first) positions so that the element at @p __middle
1452:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  is moved to @p __result, the element at @p __middle+1 is moved
1453:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  to @p __result+1 and so on for each element in the range @p
1454:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  [__first,__last).
1455:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *
1456:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  Performs 
1457:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @p *(__result+(n+(__last-__middle))%(__last-__first))=*(__first+n)
1458:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  for each @p n in the range @p [0,__last-__first).
1459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   */
1460:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   template<typename _ForwardIterator, typename _OutputIterator>
1461:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _GLIBCXX20_CONSTEXPR
1462:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     inline _OutputIterator
1463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     rotate_copy(_ForwardIterator __first, _ForwardIterator __middle,
1464:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		_ForwardIterator __last, _OutputIterator __result)
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccaSMceU.s 			page 32


1465:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     {
1466:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       // concept requirements
1467:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
1468:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_OutputIterator,
1469:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		typename iterator_traits<_ForwardIterator>::value_type>)
1470:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_requires_valid_range(__first, __middle);
1471:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_requires_valid_range(__middle, __last);
1472:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
1473:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       return std::copy(__first, __middle,
1474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		       std::copy(__middle, __last, __result));
1475:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     }
1476:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
1477:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   /// This is a helper function...
1478:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   template<typename _ForwardIterator, typename _Predicate>
1479:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _GLIBCXX20_CONSTEXPR
1480:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _ForwardIterator
1481:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     __partition(_ForwardIterator __first, _ForwardIterator __last,
1482:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		_Predicate __pred, forward_iterator_tag)
1483:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     {
1484:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       if (__first == __last)
1485:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	return __first;
1486:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
1487:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       while (__pred(*__first))
1488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	if (++__first == __last)
1489:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  return __first;
1490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
1491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       _ForwardIterator __next = __first;
1492:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
1493:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       while (++__next != __last)
1494:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	if (__pred(*__next))
1495:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  {
1496:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    std::iter_swap(__first, __next);
1497:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    ++__first;
1498:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  }
1499:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
1500:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       return __first;
1501:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     }
1502:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
1503:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   /// This is a helper function...
1504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   template<typename _BidirectionalIterator, typename _Predicate>
1505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _GLIBCXX20_CONSTEXPR
1506:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _BidirectionalIterator
1507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     __partition(_BidirectionalIterator __first, _BidirectionalIterator __last,
1508:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		_Predicate __pred, bidirectional_iterator_tag)
1509:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     {
1510:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       while (true)
1511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	{
1512:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  while (true)
1513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    if (__first == __last)
1514:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	      return __first;
1515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    else if (__pred(*__first))
1516:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	      ++__first;
1517:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    else
1518:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	      break;
1519:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  --__last;
1520:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  while (true)
1521:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    if (__first == __last)
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccaSMceU.s 			page 33


1522:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	      return __first;
1523:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    else if (!bool(__pred(*__last)))
1524:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	      --__last;
1525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    else
1526:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	      break;
1527:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  std::iter_swap(__first, __last);
1528:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  ++__first;
1529:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	}
1530:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     }
1531:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
1532:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   // partition
1533:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
1534:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   /// This is a helper function...
1535:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   /// Requires __first != __last and !__pred(__first)
1536:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   /// and __len == distance(__first, __last).
1537:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   ///
1538:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   /// !__pred(__first) allows us to guarantee that we don't
1539:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   /// move-assign an element onto itself.
1540:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   template<typename _ForwardIterator, typename _Pointer, typename _Predicate,
1541:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	   typename _Distance>
1542:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _ForwardIterator
1543:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     __stable_partition_adaptive(_ForwardIterator __first,
1544:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 				_ForwardIterator __last,
1545:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 				_Predicate __pred, _Distance __len,
1546:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 				_Pointer __buffer,
1547:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 				_Distance __buffer_size)
1548:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     {
1549:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       if (__len == 1)
1550:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	return __first;
1551:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
1552:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       if (__len <= __buffer_size)
1553:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	{
1554:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  _ForwardIterator __result1 = __first;
1555:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  _Pointer __result2 = __buffer;
1556:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
1557:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  // The precondition guarantees that !__pred(__first), so
1558:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  // move that element to the buffer before starting the loop.
1559:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  // This ensures that we only call __pred once per element.
1560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  *__result2 = _GLIBCXX_MOVE(*__first);
1561:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  ++__result2;
1562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  ++__first;
1563:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  for (; __first != __last; ++__first)
1564:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    if (__pred(__first))
1565:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	      {
1566:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		*__result1 = _GLIBCXX_MOVE(*__first);
1567:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		++__result1;
1568:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	      }
1569:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    else
1570:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	      {
1571:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		*__result2 = _GLIBCXX_MOVE(*__first);
1572:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		++__result2;
1573:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	      }
1574:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
1575:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  _GLIBCXX_MOVE3(__buffer, __result2, __result1);
1576:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  return __result1;
1577:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	}
1578:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccaSMceU.s 			page 34


1579:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       _ForwardIterator __middle = __first;
1580:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       std::advance(__middle, __len / 2);
1581:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       _ForwardIterator __left_split =
1582:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	std::__stable_partition_adaptive(__first, __middle, __pred,
1583:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 					 __len / 2, __buffer,
1584:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 					 __buffer_size);
1585:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
1586:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       // Advance past true-predicate values to satisfy this
1587:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       // function's preconditions.
1588:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       _Distance __right_len = __len - __len / 2;
1589:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       _ForwardIterator __right_split =
1590:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	std::__find_if_not_n(__middle, __right_len, __pred);
1591:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
1592:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       if (__right_len)
1593:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	__right_split =
1594:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  std::__stable_partition_adaptive(__right_split, __last, __pred,
1595:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 					   __right_len,
1596:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 					   __buffer, __buffer_size);
1597:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
1598:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       return std::rotate(__left_split, __middle, __right_split);
1599:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     }
1600:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
1601:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   template<typename _ForwardIterator, typename _Predicate>
1602:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _ForwardIterator
1603:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     __stable_partition(_ForwardIterator __first, _ForwardIterator __last,
1604:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		       _Predicate __pred)
1605:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     {
1606:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __first = std::__find_if_not(__first, __last, __pred);
1607:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
1608:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       if (__first == __last)
1609:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	return __first;
1610:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
1611:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
1612:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	_ValueType;
1613:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       typedef typename iterator_traits<_ForwardIterator>::difference_type
1614:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	_DistanceType;
1615:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
1616:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       _Temporary_buffer<_ForwardIterator, _ValueType>
1617:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	__buf(__first, std::distance(__first, __last));
1618:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       return
1619:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	std::__stable_partition_adaptive(__first, __last, __pred,
1620:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 					 _DistanceType(__buf.requested_size()),
1621:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 					 __buf.begin(),
1622:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 					 _DistanceType(__buf.size()));
1623:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     }
1624:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
1625:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   /**
1626:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @brief Move elements for which a predicate is true to the beginning
1627:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *         of a sequence, preserving relative ordering.
1628:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @ingroup mutating_algorithms
1629:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __first   A forward iterator.
1630:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __last    A forward iterator.
1631:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __pred    A predicate functor.
1632:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @return  An iterator @p middle such that @p __pred(i) is true for each
1633:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  iterator @p i in the range @p [first,middle) and false for each @p i
1634:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  in the range @p [middle,last).
1635:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccaSMceU.s 			page 35


1636:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  Performs the same function as @p partition() with the additional
1637:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  guarantee that the relative ordering of elements in each group is
1638:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  preserved, so any two elements @p x and @p y in the range
1639:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @p [__first,__last) such that @p __pred(x)==__pred(y) will have the same
1640:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  relative ordering after calling @p stable_partition().
1641:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   */
1642:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   template<typename _ForwardIterator, typename _Predicate>
1643:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     inline _ForwardIterator
1644:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     stable_partition(_ForwardIterator __first, _ForwardIterator __last,
1645:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		     _Predicate __pred)
1646:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     {
1647:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       // concept requirements
1648:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
1649:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 				  _ForwardIterator>)
1650:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_function_requires(_UnaryPredicateConcept<_Predicate,
1651:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    typename iterator_traits<_ForwardIterator>::value_type>)
1652:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
1653:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
1654:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       return std::__stable_partition(__first, __last,
1655:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 				     __gnu_cxx::__ops::__pred_iter(__pred));
1656:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     }
1657:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
1658:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   /// This is a helper function for the sort routines.
1659:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   template<typename _RandomAccessIterator, typename _Compare>
1660:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _GLIBCXX20_CONSTEXPR
1661:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     void
1662:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     __heap_select(_RandomAccessIterator __first,
1663:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		  _RandomAccessIterator __middle,
1664:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		  _RandomAccessIterator __last, _Compare __comp)
1665:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     {
1666:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       std::__make_heap(__first, __middle, __comp);
1667:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       for (_RandomAccessIterator __i = __middle; __i < __last; ++__i)
1668:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	if (__comp(__i, __first))
1669:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  std::__pop_heap(__first, __middle, __i, __comp);
1670:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     }
1671:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
1672:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   // partial_sort
1673:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
1674:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   template<typename _InputIterator, typename _RandomAccessIterator,
1675:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	   typename _Compare>
1676:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _GLIBCXX20_CONSTEXPR
1677:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _RandomAccessIterator
1678:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     __partial_sort_copy(_InputIterator __first, _InputIterator __last,
1679:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 			_RandomAccessIterator __result_first,
1680:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 			_RandomAccessIterator __result_last,
1681:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 			_Compare __comp)
1682:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     {
1683:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       typedef typename iterator_traits<_InputIterator>::value_type
1684:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	_InputValueType;
1685:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       typedef iterator_traits<_RandomAccessIterator> _RItTraits;
1686:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       typedef typename _RItTraits::difference_type _DistanceType;
1687:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
1688:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       if (__result_first == __result_last)
1689:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	return __result_last;
1690:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       _RandomAccessIterator __result_real_last = __result_first;
1691:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       while (__first != __last && __result_real_last != __result_last)
1692:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	{
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccaSMceU.s 			page 36


1693:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  *__result_real_last = *__first;
1694:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  ++__result_real_last;
1695:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  ++__first;
1696:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	}
1697:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       
1698:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       std::__make_heap(__result_first, __result_real_last, __comp);
1699:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       while (__first != __last)
1700:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	{
1701:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  if (__comp(__first, __result_first))
1702:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    std::__adjust_heap(__result_first, _DistanceType(0),
1703:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 			       _DistanceType(__result_real_last
1704:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 					     - __result_first),
1705:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 			       _InputValueType(*__first), __comp);
1706:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  ++__first;
1707:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	}
1708:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       std::__sort_heap(__result_first, __result_real_last, __comp);
1709:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       return __result_real_last;
1710:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     }
1711:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
1712:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   /**
1713:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @brief Copy the smallest elements of a sequence.
1714:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @ingroup sorting_algorithms
1715:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __first   An iterator.
1716:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __last    Another iterator.
1717:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __result_first   A random-access iterator.
1718:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __result_last    Another random-access iterator.
1719:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @return   An iterator indicating the end of the resulting sequence.
1720:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *
1721:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  Copies and sorts the smallest N values from the range @p [__first,__last)
1722:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  to the range beginning at @p __result_first, where the number of
1723:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  elements to be copied, @p N, is the smaller of @p (__last-__first) and
1724:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @p (__result_last-__result_first).
1725:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  After the sort if @e i and @e j are iterators in the range
1726:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @p [__result_first,__result_first+N) such that i precedes j then
1727:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  *j<*i is false.
1728:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  The value returned is @p __result_first+N.
1729:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   */
1730:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   template<typename _InputIterator, typename _RandomAccessIterator>
1731:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _GLIBCXX20_CONSTEXPR
1732:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     inline _RandomAccessIterator
1733:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     partial_sort_copy(_InputIterator __first, _InputIterator __last,
1734:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		      _RandomAccessIterator __result_first,
1735:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		      _RandomAccessIterator __result_last)
1736:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     {
1737:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** #ifdef _GLIBCXX_CONCEPT_CHECKS
1738:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       typedef typename iterator_traits<_InputIterator>::value_type
1739:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	_InputValueType;
1740:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       typedef typename iterator_traits<_RandomAccessIterator>::value_type
1741:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	_OutputValueType;
1742:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** #endif
1743:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
1744:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       // concept requirements
1745:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_function_requires(_InputIteratorConcept<_InputIterator>)
1746:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_function_requires(_ConvertibleConcept<_InputValueType,
1747:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 				  _OutputValueType>)
1748:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_function_requires(_LessThanOpConcept<_InputValueType,
1749:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 						     _OutputValueType>)
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccaSMceU.s 			page 37


1750:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_function_requires(_LessThanComparableConcept<_OutputValueType>)
1751:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
1752:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_requires_irreflexive(__first, __last);
1753:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_requires_valid_range(__result_first, __result_last);
1754:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
1755:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       return std::__partial_sort_copy(__first, __last,
1756:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 				      __result_first, __result_last,
1757:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 				      __gnu_cxx::__ops::__iter_less_iter());
1758:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     }
1759:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
1760:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   /**
1761:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @brief Copy the smallest elements of a sequence using a predicate for
1762:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *         comparison.
1763:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @ingroup sorting_algorithms
1764:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __first   An input iterator.
1765:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __last    Another input iterator.
1766:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __result_first   A random-access iterator.
1767:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __result_last    Another random-access iterator.
1768:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __comp    A comparison functor.
1769:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @return   An iterator indicating the end of the resulting sequence.
1770:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *
1771:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  Copies and sorts the smallest N values from the range @p [__first,__last)
1772:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  to the range beginning at @p result_first, where the number of
1773:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  elements to be copied, @p N, is the smaller of @p (__last-__first) and
1774:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @p (__result_last-__result_first).
1775:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  After the sort if @e i and @e j are iterators in the range
1776:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @p [__result_first,__result_first+N) such that i precedes j then
1777:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @p __comp(*j,*i) is false.
1778:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  The value returned is @p __result_first+N.
1779:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   */
1780:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   template<typename _InputIterator, typename _RandomAccessIterator,
1781:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	   typename _Compare>
1782:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _GLIBCXX20_CONSTEXPR
1783:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     inline _RandomAccessIterator
1784:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     partial_sort_copy(_InputIterator __first, _InputIterator __last,
1785:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		      _RandomAccessIterator __result_first,
1786:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		      _RandomAccessIterator __result_last,
1787:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		      _Compare __comp)
1788:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     {
1789:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** #ifdef _GLIBCXX_CONCEPT_CHECKS
1790:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       typedef typename iterator_traits<_InputIterator>::value_type
1791:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	_InputValueType;
1792:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       typedef typename iterator_traits<_RandomAccessIterator>::value_type
1793:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	_OutputValueType;
1794:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** #endif
1795:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
1796:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       // concept requirements
1797:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_function_requires(_InputIteratorConcept<_InputIterator>)
1798:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_function_requires(_Mutable_RandomAccessIteratorConcept<
1799:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 				  _RandomAccessIterator>)
1800:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_function_requires(_ConvertibleConcept<_InputValueType,
1801:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 				  _OutputValueType>)
1802:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_function_requires(_BinaryPredicateConcept<_Compare,
1803:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 				  _InputValueType, _OutputValueType>)
1804:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_function_requires(_BinaryPredicateConcept<_Compare,
1805:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 				  _OutputValueType, _OutputValueType>)
1806:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccaSMceU.s 			page 38


1807:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_requires_irreflexive_pred(__first, __last, __comp);
1808:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_requires_valid_range(__result_first, __result_last);
1809:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
1810:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       return std::__partial_sort_copy(__first, __last,
1811:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 				      __result_first, __result_last,
1812:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 				__gnu_cxx::__ops::__iter_comp_iter(__comp));
1813:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     }
1814:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
1815:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   /// This is a helper function for the sort routine.
1816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   template<typename _RandomAccessIterator, typename _Compare>
1817:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _GLIBCXX20_CONSTEXPR
1818:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     void
1819:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     __unguarded_linear_insert(_RandomAccessIterator __last,
1820:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 			      _Compare __comp)
1821:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     {
1822:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       typename iterator_traits<_RandomAccessIterator>::value_type
1823:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	__val = _GLIBCXX_MOVE(*__last);
1824:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       _RandomAccessIterator __next = __last;
1825:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       --__next;
1826:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       while (__comp(__val, __next))
1827:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	{
1828:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  *__last = _GLIBCXX_MOVE(*__next);
1829:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  __last = __next;
1830:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  --__next;
1831:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	}
1832:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       *__last = _GLIBCXX_MOVE(__val);
1833:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     }
1834:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
1835:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   /// This is a helper function for the sort routine.
1836:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   template<typename _RandomAccessIterator, typename _Compare>
1837:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _GLIBCXX20_CONSTEXPR
1838:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     void
1839:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     __insertion_sort(_RandomAccessIterator __first,
1840:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		     _RandomAccessIterator __last, _Compare __comp)
1841:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     {
1842:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       if (__first == __last) return;
1843:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
1844:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       for (_RandomAccessIterator __i = __first + 1; __i != __last; ++__i)
1845:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	{
1846:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  if (__comp(__i, __first))
1847:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    {
1848:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	      typename iterator_traits<_RandomAccessIterator>::value_type
1849:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		__val = _GLIBCXX_MOVE(*__i);
1850:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	      _GLIBCXX_MOVE_BACKWARD3(__first, __i, __i + 1);
1851:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	      *__first = _GLIBCXX_MOVE(__val);
1852:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    }
1853:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  else
1854:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    std::__unguarded_linear_insert(__i,
1855:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 				__gnu_cxx::__ops::__val_comp_iter(__comp));
1856:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	}
1857:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     }
1858:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
1859:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   /// This is a helper function for the sort routine.
1860:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   template<typename _RandomAccessIterator, typename _Compare>
1861:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _GLIBCXX20_CONSTEXPR
1862:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     inline void
1863:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     __unguarded_insertion_sort(_RandomAccessIterator __first,
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccaSMceU.s 			page 39


1864:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 			       _RandomAccessIterator __last, _Compare __comp)
1865:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     {
1866:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       for (_RandomAccessIterator __i = __first; __i != __last; ++__i)
1867:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	std::__unguarded_linear_insert(__i,
1868:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 				__gnu_cxx::__ops::__val_comp_iter(__comp));
1869:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     }
1870:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
1871:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   /**
1872:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @doctodo
1873:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  This controls some aspect of the sort routines.
1874:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   */
1875:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   enum { _S_threshold = 16 };
1876:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
1877:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   /// This is a helper function for the sort routine.
1878:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   template<typename _RandomAccessIterator, typename _Compare>
1879:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _GLIBCXX20_CONSTEXPR
1880:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     void
1881:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     __final_insertion_sort(_RandomAccessIterator __first,
1882:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 			   _RandomAccessIterator __last, _Compare __comp)
1883:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     {
1884:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       if (__last - __first > int(_S_threshold))
1885:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	{
1886:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  std::__insertion_sort(__first, __first + int(_S_threshold), __comp);
1887:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  std::__unguarded_insertion_sort(__first + int(_S_threshold), __last,
1888:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 					  __comp);
1889:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	}
1890:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       else
1891:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	std::__insertion_sort(__first, __last, __comp);
1892:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     }
1893:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
1894:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   /// This is a helper function...
1895:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   template<typename _RandomAccessIterator, typename _Compare>
1896:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _GLIBCXX20_CONSTEXPR
1897:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _RandomAccessIterator
1898:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     __unguarded_partition(_RandomAccessIterator __first,
1899:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 			  _RandomAccessIterator __last,
1900:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 			  _RandomAccessIterator __pivot, _Compare __comp)
1901:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     {
1902:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       while (true)
1903:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	{
1904:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  while (__comp(__first, __pivot))
1905:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    ++__first;
1906:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  --__last;
1907:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  while (__comp(__pivot, __last))
1908:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    --__last;
1909:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  if (!(__first < __last))
1910:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    return __first;
1911:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  std::iter_swap(__first, __last);
1912:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  ++__first;
1913:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	}
1914:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     }
1915:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
1916:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   /// This is a helper function...
1917:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   template<typename _RandomAccessIterator, typename _Compare>
1918:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _GLIBCXX20_CONSTEXPR
1919:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     inline _RandomAccessIterator
1920:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     __unguarded_partition_pivot(_RandomAccessIterator __first,
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccaSMceU.s 			page 40


1921:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 				_RandomAccessIterator __last, _Compare __comp)
1922:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     {
1923:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       _RandomAccessIterator __mid = __first + (__last - __first) / 2;
1924:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       std::__move_median_to_first(__first, __first + 1, __mid, __last - 1,
1925:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 				  __comp);
1926:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       return std::__unguarded_partition(__first + 1, __last, __first, __comp);
1927:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     }
1928:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
1929:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   template<typename _RandomAccessIterator, typename _Compare>
1930:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _GLIBCXX20_CONSTEXPR
1931:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     inline void
1932:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     __partial_sort(_RandomAccessIterator __first,
1933:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		   _RandomAccessIterator __middle,
1934:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		   _RandomAccessIterator __last,
1935:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		   _Compare __comp)
1936:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     {
1937:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       std::__heap_select(__first, __middle, __last, __comp);
1938:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       std::__sort_heap(__first, __middle, __comp);
1939:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     }
1940:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
1941:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   /// This is a helper function for the sort routine.
1942:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   template<typename _RandomAccessIterator, typename _Size, typename _Compare>
1943:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _GLIBCXX20_CONSTEXPR
1944:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     void
1945:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     __introsort_loop(_RandomAccessIterator __first,
1946:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		     _RandomAccessIterator __last,
1947:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		     _Size __depth_limit, _Compare __comp)
1948:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     {
1949:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       while (__last - __first > int(_S_threshold))
1950:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	{
1951:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  if (__depth_limit == 0)
1952:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    {
1953:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	      std::__partial_sort(__first, __last, __last, __comp);
1954:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	      return;
1955:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    }
1956:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  --__depth_limit;
1957:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  _RandomAccessIterator __cut =
1958:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    std::__unguarded_partition_pivot(__first, __last, __comp);
1959:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  std::__introsort_loop(__cut, __last, __depth_limit, __comp);
1960:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  __last = __cut;
1961:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	}
1962:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     }
1963:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
1964:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   // sort
1965:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
1966:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   template<typename _RandomAccessIterator, typename _Compare>
1967:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _GLIBCXX20_CONSTEXPR
1968:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     inline void
1969:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     __sort(_RandomAccessIterator __first, _RandomAccessIterator __last,
1970:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	   _Compare __comp)
1971:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     {
1972:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       if (__first != __last)
1973:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	{
1974:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  std::__introsort_loop(__first, __last,
1975:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 				std::__lg(__last - __first) * 2,
1976:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 				__comp);
1977:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  std::__final_insertion_sort(__first, __last, __comp);
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccaSMceU.s 			page 41


1978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	}
1979:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     }
1980:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
1981:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   template<typename _RandomAccessIterator, typename _Size, typename _Compare>
1982:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _GLIBCXX20_CONSTEXPR
1983:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     void
1984:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     __introselect(_RandomAccessIterator __first, _RandomAccessIterator __nth,
1985:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		  _RandomAccessIterator __last, _Size __depth_limit,
1986:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		  _Compare __comp)
1987:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     {
1988:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       while (__last - __first > 3)
1989:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	{
1990:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  if (__depth_limit == 0)
1991:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    {
1992:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	      std::__heap_select(__first, __nth + 1, __last, __comp);
1993:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	      // Place the nth largest element in its final position.
1994:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	      std::iter_swap(__first, __nth);
1995:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	      return;
1996:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    }
1997:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  --__depth_limit;
1998:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  _RandomAccessIterator __cut =
1999:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    std::__unguarded_partition_pivot(__first, __last, __comp);
2000:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  if (__cut <= __nth)
2001:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    __first = __cut;
2002:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  else
2003:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    __last = __cut;
2004:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	}
2005:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       std::__insertion_sort(__first, __last, __comp);
2006:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     }
2007:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
2008:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   // nth_element
2009:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
2010:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   // lower_bound moved to stl_algobase.h
2011:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
2012:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   /**
2013:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @brief Finds the first position in which @p __val could be inserted
2014:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *         without changing the ordering.
2015:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @ingroup binary_search_algorithms
2016:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __first   An iterator.
2017:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __last    Another iterator.
2018:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __val     The search term.
2019:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __comp    A functor to use for comparisons.
2020:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @return An iterator pointing to the first element <em>not less
2021:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *           than</em> @p __val, or end() if every element is less
2022:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *           than @p __val.
2023:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @ingroup binary_search_algorithms
2024:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *
2025:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  The comparison function should have the same effects on ordering as
2026:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  the function used for the initial sort.
2027:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   */
2028:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   template<typename _ForwardIterator, typename _Tp, typename _Compare>
2029:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _GLIBCXX20_CONSTEXPR
2030:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     inline _ForwardIterator
2031:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     lower_bound(_ForwardIterator __first, _ForwardIterator __last,
2032:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		const _Tp& __val, _Compare __comp)
2033:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     {
2034:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       // concept requirements
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccaSMceU.s 			page 42


2035:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
2036:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_function_requires(_BinaryPredicateConcept<_Compare,
2037:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	typename iterator_traits<_ForwardIterator>::value_type, _Tp>)
2038:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_requires_partitioned_lower_pred(__first, __last,
2039:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 						__val, __comp);
2040:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
2041:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       return std::__lower_bound(__first, __last, __val,
2042:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 				__gnu_cxx::__ops::__iter_comp_val(__comp));
2043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     }
2044:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
2045:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   template<typename _ForwardIterator, typename _Tp, typename _Compare>
2046:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _GLIBCXX20_CONSTEXPR
2047:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _ForwardIterator
2048:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     __upper_bound(_ForwardIterator __first, _ForwardIterator __last,
2049:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		  const _Tp& __val, _Compare __comp)
2050:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     {
2051:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       typedef typename iterator_traits<_ForwardIterator>::difference_type
2052:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	_DistanceType;
2053:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
2054:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       _DistanceType __len = std::distance(__first, __last);
2055:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
2056:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       while (__len > 0)
2057:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	{
2058:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  _DistanceType __half = __len >> 1;
2059:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  _ForwardIterator __middle = __first;
2060:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  std::advance(__middle, __half);
2061:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  if (__comp(__val, __middle))
2062:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    __len = __half;
2063:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  else
2064:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    {
2065:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	      __first = __middle;
2066:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	      ++__first;
2067:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	      __len = __len - __half - 1;
2068:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    }
2069:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	}
2070:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       return __first;
2071:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     }
2072:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
2073:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   /**
2074:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @brief Finds the last position in which @p __val could be inserted
2075:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *         without changing the ordering.
2076:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @ingroup binary_search_algorithms
2077:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __first   An iterator.
2078:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __last    Another iterator.
2079:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __val     The search term.
2080:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @return  An iterator pointing to the first element greater than @p __val,
2081:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *           or end() if no elements are greater than @p __val.
2082:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @ingroup binary_search_algorithms
2083:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   */
2084:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   template<typename _ForwardIterator, typename _Tp>
2085:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _GLIBCXX20_CONSTEXPR
2086:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     inline _ForwardIterator
2087:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     upper_bound(_ForwardIterator __first, _ForwardIterator __last,
2088:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		const _Tp& __val)
2089:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     {
2090:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       // concept requirements
2091:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccaSMceU.s 			page 43


2092:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_function_requires(_LessThanOpConcept<
2093:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	_Tp, typename iterator_traits<_ForwardIterator>::value_type>)
2094:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_requires_partitioned_upper(__first, __last, __val);
2095:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
2096:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       return std::__upper_bound(__first, __last, __val,
2097:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 				__gnu_cxx::__ops::__val_less_iter());
2098:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     }
2099:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
2100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   /**
2101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @brief Finds the last position in which @p __val could be inserted
2102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *         without changing the ordering.
2103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @ingroup binary_search_algorithms
2104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __first   An iterator.
2105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __last    Another iterator.
2106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __val     The search term.
2107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __comp    A functor to use for comparisons.
2108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @return  An iterator pointing to the first element greater than @p __val,
2109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *           or end() if no elements are greater than @p __val.
2110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @ingroup binary_search_algorithms
2111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *
2112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  The comparison function should have the same effects on ordering as
2113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  the function used for the initial sort.
2114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   */
2115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   template<typename _ForwardIterator, typename _Tp, typename _Compare>
2116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _GLIBCXX20_CONSTEXPR
2117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     inline _ForwardIterator
2118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     upper_bound(_ForwardIterator __first, _ForwardIterator __last,
2119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		const _Tp& __val, _Compare __comp)
2120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     {
2121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       // concept requirements
2122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
2123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_function_requires(_BinaryPredicateConcept<_Compare,
2124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	_Tp, typename iterator_traits<_ForwardIterator>::value_type>)
2125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_requires_partitioned_upper_pred(__first, __last,
2126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 						__val, __comp);
2127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
2128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       return std::__upper_bound(__first, __last, __val,
2129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 				__gnu_cxx::__ops::__val_comp_iter(__comp));
2130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     }
2131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
2132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   template<typename _ForwardIterator, typename _Tp,
2133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	   typename _CompareItTp, typename _CompareTpIt>
2134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _GLIBCXX20_CONSTEXPR
2135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     pair<_ForwardIterator, _ForwardIterator>
2136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     __equal_range(_ForwardIterator __first, _ForwardIterator __last,
2137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		  const _Tp& __val,
2138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		  _CompareItTp __comp_it_val, _CompareTpIt __comp_val_it)
2139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     {
2140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       typedef typename iterator_traits<_ForwardIterator>::difference_type
2141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	_DistanceType;
2142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
2143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       _DistanceType __len = std::distance(__first, __last);
2144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
2145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       while (__len > 0)
2146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	{
2147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  _DistanceType __half = __len >> 1;
2148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  _ForwardIterator __middle = __first;
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccaSMceU.s 			page 44


2149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  std::advance(__middle, __half);
2150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  if (__comp_it_val(__middle, __val))
2151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    {
2152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	      __first = __middle;
2153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	      ++__first;
2154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	      __len = __len - __half - 1;
2155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    }
2156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  else if (__comp_val_it(__val, __middle))
2157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    __len = __half;
2158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  else
2159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    {
2160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	      _ForwardIterator __left
2161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		= std::__lower_bound(__first, __middle, __val, __comp_it_val);
2162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	      std::advance(__first, __len);
2163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	      _ForwardIterator __right
2164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		= std::__upper_bound(++__middle, __first, __val, __comp_val_it);
2165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	      return pair<_ForwardIterator, _ForwardIterator>(__left, __right);
2166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    }
2167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	}
2168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       return pair<_ForwardIterator, _ForwardIterator>(__first, __first);
2169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     }
2170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
2171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   /**
2172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @brief Finds the largest subrange in which @p __val could be inserted
2173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *         at any place in it without changing the ordering.
2174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @ingroup binary_search_algorithms
2175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __first   An iterator.
2176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __last    Another iterator.
2177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __val     The search term.
2178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @return  An pair of iterators defining the subrange.
2179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @ingroup binary_search_algorithms
2180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *
2181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  This is equivalent to
2182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @code
2183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *    std::make_pair(lower_bound(__first, __last, __val),
2184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *                   upper_bound(__first, __last, __val))
2185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @endcode
2186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  but does not actually call those functions.
2187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   */
2188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   template<typename _ForwardIterator, typename _Tp>
2189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _GLIBCXX20_CONSTEXPR
2190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     inline pair<_ForwardIterator, _ForwardIterator>
2191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     equal_range(_ForwardIterator __first, _ForwardIterator __last,
2192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		const _Tp& __val)
2193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     {
2194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       // concept requirements
2195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
2196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_function_requires(_LessThanOpConcept<
2197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	typename iterator_traits<_ForwardIterator>::value_type, _Tp>)
2198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_function_requires(_LessThanOpConcept<
2199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	_Tp, typename iterator_traits<_ForwardIterator>::value_type>)
2200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_requires_partitioned_lower(__first, __last, __val);
2201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_requires_partitioned_upper(__first, __last, __val);
2202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
2203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       return std::__equal_range(__first, __last, __val,
2204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 				__gnu_cxx::__ops::__iter_less_val(),
2205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 				__gnu_cxx::__ops::__val_less_iter());
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccaSMceU.s 			page 45


2206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     }
2207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
2208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   /**
2209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @brief Finds the largest subrange in which @p __val could be inserted
2210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *         at any place in it without changing the ordering.
2211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __first   An iterator.
2212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __last    Another iterator.
2213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __val     The search term.
2214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __comp    A functor to use for comparisons.
2215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @return  An pair of iterators defining the subrange.
2216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @ingroup binary_search_algorithms
2217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *
2218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  This is equivalent to
2219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @code
2220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *    std::make_pair(lower_bound(__first, __last, __val, __comp),
2221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *                   upper_bound(__first, __last, __val, __comp))
2222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @endcode
2223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  but does not actually call those functions.
2224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   */
2225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   template<typename _ForwardIterator, typename _Tp, typename _Compare>
2226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _GLIBCXX20_CONSTEXPR
2227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     inline pair<_ForwardIterator, _ForwardIterator>
2228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     equal_range(_ForwardIterator __first, _ForwardIterator __last,
2229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		const _Tp& __val, _Compare __comp)
2230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     {
2231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       // concept requirements
2232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
2233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_function_requires(_BinaryPredicateConcept<_Compare,
2234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	typename iterator_traits<_ForwardIterator>::value_type, _Tp>)
2235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_function_requires(_BinaryPredicateConcept<_Compare,
2236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	_Tp, typename iterator_traits<_ForwardIterator>::value_type>)
2237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_requires_partitioned_lower_pred(__first, __last,
2238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 						__val, __comp);
2239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_requires_partitioned_upper_pred(__first, __last,
2240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 						__val, __comp);
2241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
2242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       return std::__equal_range(__first, __last, __val,
2243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 				__gnu_cxx::__ops::__iter_comp_val(__comp),
2244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 				__gnu_cxx::__ops::__val_comp_iter(__comp));
2245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     }
2246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
2247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   /**
2248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @brief Determines whether an element exists in a range.
2249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @ingroup binary_search_algorithms
2250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __first   An iterator.
2251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __last    Another iterator.
2252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __val     The search term.
2253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @return True if @p __val (or its equivalent) is in [@p
2254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  __first,@p __last ].
2255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *
2256:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  Note that this does not actually return an iterator to @p __val.  For
2257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  that, use std::find or a container's specialized find member functions.
2258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   */
2259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   template<typename _ForwardIterator, typename _Tp>
2260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _GLIBCXX20_CONSTEXPR
2261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     bool
2262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     binary_search(_ForwardIterator __first, _ForwardIterator __last,
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccaSMceU.s 			page 46


2263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		  const _Tp& __val)
2264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     {
2265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       // concept requirements
2266:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
2267:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_function_requires(_LessThanOpConcept<
2268:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	_Tp, typename iterator_traits<_ForwardIterator>::value_type>)
2269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_requires_partitioned_lower(__first, __last, __val);
2270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_requires_partitioned_upper(__first, __last, __val);
2271:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
2272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       _ForwardIterator __i
2273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	= std::__lower_bound(__first, __last, __val,
2274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 			     __gnu_cxx::__ops::__iter_less_val());
2275:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       return __i != __last && !(__val < *__i);
2276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     }
2277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
2278:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   /**
2279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @brief Determines whether an element exists in a range.
2280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @ingroup binary_search_algorithms
2281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __first   An iterator.
2282:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __last    Another iterator.
2283:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __val     The search term.
2284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __comp    A functor to use for comparisons.
2285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @return  True if @p __val (or its equivalent) is in @p [__first,__last].
2286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *
2287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  Note that this does not actually return an iterator to @p __val.  For
2288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  that, use std::find or a container's specialized find member functions.
2289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *
2290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  The comparison function should have the same effects on ordering as
2291:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  the function used for the initial sort.
2292:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   */
2293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   template<typename _ForwardIterator, typename _Tp, typename _Compare>
2294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _GLIBCXX20_CONSTEXPR
2295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     bool
2296:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     binary_search(_ForwardIterator __first, _ForwardIterator __last,
2297:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		  const _Tp& __val, _Compare __comp)
2298:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     {
2299:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       // concept requirements
2300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
2301:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_function_requires(_BinaryPredicateConcept<_Compare,
2302:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	_Tp, typename iterator_traits<_ForwardIterator>::value_type>)
2303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_requires_partitioned_lower_pred(__first, __last,
2304:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 						__val, __comp);
2305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_requires_partitioned_upper_pred(__first, __last,
2306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 						__val, __comp);
2307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
2308:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       _ForwardIterator __i
2309:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	= std::__lower_bound(__first, __last, __val,
2310:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 			     __gnu_cxx::__ops::__iter_comp_val(__comp));
2311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       return __i != __last && !bool(__comp(__val, *__i));
2312:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     }
2313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
2314:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   // merge
2315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
2316:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   /// This is a helper function for the __merge_adaptive routines.
2317:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   template<typename _InputIterator1, typename _InputIterator2,
2318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	   typename _OutputIterator, typename _Compare>
2319:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     void
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccaSMceU.s 			page 47


2320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     __move_merge_adaptive(_InputIterator1 __first1, _InputIterator1 __last1,
2321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 			  _InputIterator2 __first2, _InputIterator2 __last2,
2322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 			  _OutputIterator __result, _Compare __comp)
2323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     {
2324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       while (__first1 != __last1 && __first2 != __last2)
2325:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	{
2326:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  if (__comp(__first2, __first1))
2327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    {
2328:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	      *__result = _GLIBCXX_MOVE(*__first2);
2329:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	      ++__first2;
2330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    }
2331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  else
2332:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    {
2333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	      *__result = _GLIBCXX_MOVE(*__first1);
2334:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	      ++__first1;
2335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    }
2336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  ++__result;
2337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	}
2338:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       if (__first1 != __last1)
2339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	_GLIBCXX_MOVE3(__first1, __last1, __result);
2340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     }
2341:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
2342:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   /// This is a helper function for the __merge_adaptive routines.
2343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   template<typename _BidirectionalIterator1, typename _BidirectionalIterator2,
2344:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	   typename _BidirectionalIterator3, typename _Compare>
2345:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     void
2346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     __move_merge_adaptive_backward(_BidirectionalIterator1 __first1,
2347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 				   _BidirectionalIterator1 __last1,
2348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 				   _BidirectionalIterator2 __first2,
2349:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 				   _BidirectionalIterator2 __last2,
2350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 				   _BidirectionalIterator3 __result,
2351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 				   _Compare __comp)
2352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     {
2353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       if (__first1 == __last1)
2354:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	{
2355:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  _GLIBCXX_MOVE_BACKWARD3(__first2, __last2, __result);
2356:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  return;
2357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	}
2358:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       else if (__first2 == __last2)
2359:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	return;
2360:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
2361:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       --__last1;
2362:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       --__last2;
2363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       while (true)
2364:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	{
2365:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  if (__comp(__last2, __last1))
2366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    {
2367:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	      *--__result = _GLIBCXX_MOVE(*__last1);
2368:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	      if (__first1 == __last1)
2369:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		{
2370:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		  _GLIBCXX_MOVE_BACKWARD3(__first2, ++__last2, __result);
2371:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		  return;
2372:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		}
2373:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	      --__last1;
2374:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    }
2375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  else
2376:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    {
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccaSMceU.s 			page 48


2377:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	      *--__result = _GLIBCXX_MOVE(*__last2);
2378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	      if (__first2 == __last2)
2379:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		return;
2380:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	      --__last2;
2381:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    }
2382:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	}
2383:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     }
2384:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
2385:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   /// This is a helper function for the merge routines.
2386:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   template<typename _BidirectionalIterator1, typename _BidirectionalIterator2,
2387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	   typename _Distance>
2388:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _BidirectionalIterator1
2389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     __rotate_adaptive(_BidirectionalIterator1 __first,
2390:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		      _BidirectionalIterator1 __middle,
2391:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		      _BidirectionalIterator1 __last,
2392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		      _Distance __len1, _Distance __len2,
2393:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		      _BidirectionalIterator2 __buffer,
2394:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		      _Distance __buffer_size)
2395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     {
2396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       _BidirectionalIterator2 __buffer_end;
2397:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       if (__len1 > __len2 && __len2 <= __buffer_size)
2398:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	{
2399:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  if (__len2)
2400:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    {
2401:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	      __buffer_end = _GLIBCXX_MOVE3(__middle, __last, __buffer);
2402:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	      _GLIBCXX_MOVE_BACKWARD3(__first, __middle, __last);
2403:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	      return _GLIBCXX_MOVE3(__buffer, __buffer_end, __first);
2404:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    }
2405:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  else
2406:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    return __first;
2407:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	}
2408:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       else if (__len1 <= __buffer_size)
2409:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	{
2410:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  if (__len1)
2411:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    {
2412:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	      __buffer_end = _GLIBCXX_MOVE3(__first, __middle, __buffer);
2413:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	      _GLIBCXX_MOVE3(__middle, __last, __first);
2414:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	      return _GLIBCXX_MOVE_BACKWARD3(__buffer, __buffer_end, __last);
2415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    }
2416:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  else
2417:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    return __last;
2418:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	}
2419:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       else
2420:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	return std::rotate(__first, __middle, __last);
2421:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     }
2422:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
2423:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   /// This is a helper function for the merge routines.
2424:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   template<typename _BidirectionalIterator, typename _Distance, 
2425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	   typename _Pointer, typename _Compare>
2426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     void
2427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     __merge_adaptive(_BidirectionalIterator __first,
2428:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		     _BidirectionalIterator __middle,
2429:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		     _BidirectionalIterator __last,
2430:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		     _Distance __len1, _Distance __len2,
2431:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		     _Pointer __buffer, _Distance __buffer_size,
2432:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		     _Compare __comp)
2433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     {
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccaSMceU.s 			page 49


2434:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       if (__len1 <= __len2 && __len1 <= __buffer_size)
2435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	{
2436:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  _Pointer __buffer_end = _GLIBCXX_MOVE3(__first, __middle, __buffer);
2437:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  std::__move_merge_adaptive(__buffer, __buffer_end, __middle, __last,
2438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 				     __first, __comp);
2439:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	}
2440:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       else if (__len2 <= __buffer_size)
2441:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	{
2442:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  _Pointer __buffer_end = _GLIBCXX_MOVE3(__middle, __last, __buffer);
2443:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  std::__move_merge_adaptive_backward(__first, __middle, __buffer,
2444:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 					      __buffer_end, __last, __comp);
2445:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	}
2446:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       else
2447:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	{
2448:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  _BidirectionalIterator __first_cut = __first;
2449:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  _BidirectionalIterator __second_cut = __middle;
2450:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  _Distance __len11 = 0;
2451:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  _Distance __len22 = 0;
2452:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  if (__len1 > __len2)
2453:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    {
2454:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	      __len11 = __len1 / 2;
2455:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	      std::advance(__first_cut, __len11);
2456:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	      __second_cut
2457:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		= std::__lower_bound(__middle, __last, *__first_cut,
2458:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 				     __gnu_cxx::__ops::__iter_comp_val(__comp));
2459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	      __len22 = std::distance(__middle, __second_cut);
2460:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    }
2461:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  else
2462:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    {
2463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	      __len22 = __len2 / 2;
2464:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	      std::advance(__second_cut, __len22);
2465:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	      __first_cut
2466:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		= std::__upper_bound(__first, __middle, *__second_cut,
2467:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 				     __gnu_cxx::__ops::__val_comp_iter(__comp));
2468:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	      __len11 = std::distance(__first, __first_cut);
2469:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    }
2470:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
2471:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  _BidirectionalIterator __new_middle
2472:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    = std::__rotate_adaptive(__first_cut, __middle, __second_cut,
2473:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 				     __len1 - __len11, __len22, __buffer,
2474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 				     __buffer_size);
2475:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  std::__merge_adaptive(__first, __first_cut, __new_middle, __len11,
2476:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 				__len22, __buffer, __buffer_size, __comp);
2477:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  std::__merge_adaptive(__new_middle, __second_cut, __last,
2478:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 				__len1 - __len11,
2479:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 				__len2 - __len22, __buffer,
2480:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 				__buffer_size, __comp);
2481:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	}
2482:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     }
2483:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
2484:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   /// This is a helper function for the merge routines.
2485:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   template<typename _BidirectionalIterator, typename _Distance,
2486:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	   typename _Compare>
2487:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     void
2488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     __merge_without_buffer(_BidirectionalIterator __first,
2489:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 			   _BidirectionalIterator __middle,
2490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 			   _BidirectionalIterator __last,
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccaSMceU.s 			page 50


2491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 			   _Distance __len1, _Distance __len2,
2492:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 			   _Compare __comp)
2493:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     {
2494:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       if (__len1 == 0 || __len2 == 0)
2495:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	return;
2496:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
2497:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       if (__len1 + __len2 == 2)
2498:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	{
2499:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  if (__comp(__middle, __first))
2500:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    std::iter_swap(__first, __middle);
2501:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  return;
2502:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	}
2503:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
2504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       _BidirectionalIterator __first_cut = __first;
2505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       _BidirectionalIterator __second_cut = __middle;
2506:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       _Distance __len11 = 0;
2507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       _Distance __len22 = 0;
2508:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       if (__len1 > __len2)
2509:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	{
2510:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  __len11 = __len1 / 2;
2511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  std::advance(__first_cut, __len11);
2512:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  __second_cut
2513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    = std::__lower_bound(__middle, __last, *__first_cut,
2514:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 				 __gnu_cxx::__ops::__iter_comp_val(__comp));
2515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  __len22 = std::distance(__middle, __second_cut);
2516:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	}
2517:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       else
2518:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	{
2519:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  __len22 = __len2 / 2;
2520:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  std::advance(__second_cut, __len22);
2521:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  __first_cut
2522:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    = std::__upper_bound(__first, __middle, *__second_cut,
2523:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 				 __gnu_cxx::__ops::__val_comp_iter(__comp));
2524:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  __len11 = std::distance(__first, __first_cut);
2525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	}
2526:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
2527:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       _BidirectionalIterator __new_middle
2528:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	= std::rotate(__first_cut, __middle, __second_cut);
2529:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       std::__merge_without_buffer(__first, __first_cut, __new_middle,
2530:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 				  __len11, __len22, __comp);
2531:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       std::__merge_without_buffer(__new_middle, __second_cut, __last,
2532:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 				  __len1 - __len11, __len2 - __len22, __comp);
2533:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     }
2534:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
2535:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   template<typename _BidirectionalIterator, typename _Compare>
2536:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     void
2537:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     __inplace_merge(_BidirectionalIterator __first,
2538:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		    _BidirectionalIterator __middle,
2539:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		    _BidirectionalIterator __last,
2540:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		    _Compare __comp)
2541:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     {
2542:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       typedef typename iterator_traits<_BidirectionalIterator>::value_type
2543:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  _ValueType;
2544:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       typedef typename iterator_traits<_BidirectionalIterator>::difference_type
2545:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  _DistanceType;
2546:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
2547:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       if (__first == __middle || __middle == __last)
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccaSMceU.s 			page 51


2548:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	return;
2549:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
2550:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       const _DistanceType __len1 = std::distance(__first, __middle);
2551:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       const _DistanceType __len2 = std::distance(__middle, __last);
2552:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
2553:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       typedef _Temporary_buffer<_BidirectionalIterator, _ValueType> _TmpBuf;
2554:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       _TmpBuf __buf(__first, __len1 + __len2);
2555:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
2556:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       if (__buf.begin() == 0)
2557:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	std::__merge_without_buffer
2558:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  (__first, __middle, __last, __len1, __len2, __comp);
2559:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       else
2560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	std::__merge_adaptive
2561:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  (__first, __middle, __last, __len1, __len2, __buf.begin(),
2562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	   _DistanceType(__buf.size()), __comp);
2563:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     }
2564:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
2565:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   /**
2566:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @brief Merges two sorted ranges in place.
2567:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @ingroup sorting_algorithms
2568:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __first   An iterator.
2569:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __middle  Another iterator.
2570:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __last    Another iterator.
2571:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @return  Nothing.
2572:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *
2573:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  Merges two sorted and consecutive ranges, [__first,__middle) and
2574:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  [__middle,__last), and puts the result in [__first,__last).  The
2575:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  output will be sorted.  The sort is @e stable, that is, for
2576:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  equivalent elements in the two ranges, elements from the first
2577:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  range will always come before elements from the second.
2578:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *
2579:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  If enough additional memory is available, this takes (__last-__first)-1
2580:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  comparisons.  Otherwise an NlogN algorithm is used, where N is
2581:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  distance(__first,__last).
2582:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   */
2583:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   template<typename _BidirectionalIterator>
2584:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     inline void
2585:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     inplace_merge(_BidirectionalIterator __first,
2586:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		  _BidirectionalIterator __middle,
2587:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		  _BidirectionalIterator __last)
2588:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     {
2589:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       // concept requirements
2590:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_function_requires(_Mutable_BidirectionalIteratorConcept<
2591:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    _BidirectionalIterator>)
2592:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_function_requires(_LessThanComparableConcept<
2593:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    typename iterator_traits<_BidirectionalIterator>::value_type>)
2594:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_requires_sorted(__first, __middle);
2595:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_requires_sorted(__middle, __last);
2596:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_requires_irreflexive(__first, __last);
2597:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
2598:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       std::__inplace_merge(__first, __middle, __last,
2599:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 			   __gnu_cxx::__ops::__iter_less_iter());
2600:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     }
2601:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
2602:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   /**
2603:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @brief Merges two sorted ranges in place.
2604:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @ingroup sorting_algorithms
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccaSMceU.s 			page 52


2605:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __first   An iterator.
2606:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __middle  Another iterator.
2607:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __last    Another iterator.
2608:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __comp    A functor to use for comparisons.
2609:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @return  Nothing.
2610:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *
2611:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  Merges two sorted and consecutive ranges, [__first,__middle) and
2612:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  [middle,last), and puts the result in [__first,__last).  The output will
2613:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  be sorted.  The sort is @e stable, that is, for equivalent
2614:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  elements in the two ranges, elements from the first range will always
2615:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  come before elements from the second.
2616:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *
2617:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  If enough additional memory is available, this takes (__last-__first)-1
2618:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  comparisons.  Otherwise an NlogN algorithm is used, where N is
2619:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  distance(__first,__last).
2620:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *
2621:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  The comparison function should have the same effects on ordering as
2622:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  the function used for the initial sort.
2623:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   */
2624:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   template<typename _BidirectionalIterator, typename _Compare>
2625:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     inline void
2626:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     inplace_merge(_BidirectionalIterator __first,
2627:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		  _BidirectionalIterator __middle,
2628:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		  _BidirectionalIterator __last,
2629:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		  _Compare __comp)
2630:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     {
2631:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       // concept requirements
2632:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_function_requires(_Mutable_BidirectionalIteratorConcept<
2633:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    _BidirectionalIterator>)
2634:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_function_requires(_BinaryPredicateConcept<_Compare,
2635:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    typename iterator_traits<_BidirectionalIterator>::value_type,
2636:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    typename iterator_traits<_BidirectionalIterator>::value_type>)
2637:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_requires_sorted_pred(__first, __middle, __comp);
2638:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_requires_sorted_pred(__middle, __last, __comp);
2639:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_requires_irreflexive_pred(__first, __last, __comp);
2640:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
2641:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       std::__inplace_merge(__first, __middle, __last,
2642:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 			   __gnu_cxx::__ops::__iter_comp_iter(__comp));
2643:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     }
2644:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
2645:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
2646:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   /// This is a helper function for the __merge_sort_loop routines.
2647:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   template<typename _InputIterator, typename _OutputIterator,
2648:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	   typename _Compare>
2649:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _OutputIterator
2650:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     __move_merge(_InputIterator __first1, _InputIterator __last1,
2651:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		 _InputIterator __first2, _InputIterator __last2,
2652:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		 _OutputIterator __result, _Compare __comp)
2653:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     {
2654:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       while (__first1 != __last1 && __first2 != __last2)
2655:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	{
2656:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  if (__comp(__first2, __first1))
2657:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    {
2658:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	      *__result = _GLIBCXX_MOVE(*__first2);
2659:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	      ++__first2;
2660:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    }
2661:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  else
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccaSMceU.s 			page 53


2662:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    {
2663:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	      *__result = _GLIBCXX_MOVE(*__first1);
2664:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	      ++__first1;
2665:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    }
2666:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  ++__result;
2667:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	}
2668:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       return _GLIBCXX_MOVE3(__first2, __last2,
2669:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 			    _GLIBCXX_MOVE3(__first1, __last1,
2670:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 					   __result));
2671:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     }
2672:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
2673:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   template<typename _RandomAccessIterator1, typename _RandomAccessIterator2,
2674:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	   typename _Distance, typename _Compare>
2675:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     void
2676:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     __merge_sort_loop(_RandomAccessIterator1 __first,
2677:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		      _RandomAccessIterator1 __last,
2678:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		      _RandomAccessIterator2 __result, _Distance __step_size,
2679:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		      _Compare __comp)
2680:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     {
2681:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       const _Distance __two_step = 2 * __step_size;
2682:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
2683:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       while (__last - __first >= __two_step)
2684:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	{
2685:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  __result = std::__move_merge(__first, __first + __step_size,
2686:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 				       __first + __step_size,
2687:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 				       __first + __two_step,
2688:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 				       __result, __comp);
2689:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  __first += __two_step;
2690:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	}
2691:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __step_size = std::min(_Distance(__last - __first), __step_size);
2692:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
2693:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       std::__move_merge(__first, __first + __step_size,
2694:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 			__first + __step_size, __last, __result, __comp);
2695:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     }
2696:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
2697:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   template<typename _RandomAccessIterator, typename _Distance,
2698:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	   typename _Compare>
2699:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _GLIBCXX20_CONSTEXPR
2700:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     void
2701:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     __chunk_insertion_sort(_RandomAccessIterator __first,
2702:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 			   _RandomAccessIterator __last,
2703:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 			   _Distance __chunk_size, _Compare __comp)
2704:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     {
2705:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       while (__last - __first >= __chunk_size)
2706:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	{
2707:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  std::__insertion_sort(__first, __first + __chunk_size, __comp);
2708:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  __first += __chunk_size;
2709:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	}
2710:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       std::__insertion_sort(__first, __last, __comp);
2711:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     }
2712:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
2713:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   enum { _S_chunk_size = 7 };
2714:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
2715:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   template<typename _RandomAccessIterator, typename _Pointer, typename _Compare>
2716:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     void
2717:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     __merge_sort_with_buffer(_RandomAccessIterator __first,
2718:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 			     _RandomAccessIterator __last,
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccaSMceU.s 			page 54


2719:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 			     _Pointer __buffer, _Compare __comp)
2720:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     {
2721:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       typedef typename iterator_traits<_RandomAccessIterator>::difference_type
2722:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	_Distance;
2723:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
2724:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       const _Distance __len = __last - __first;
2725:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       const _Pointer __buffer_last = __buffer + __len;
2726:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
2727:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       _Distance __step_size = _S_chunk_size;
2728:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       std::__chunk_insertion_sort(__first, __last, __step_size, __comp);
2729:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
2730:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       while (__step_size < __len)
2731:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	{
2732:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  std::__merge_sort_loop(__first, __last, __buffer,
2733:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 				 __step_size, __comp);
2734:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  __step_size *= 2;
2735:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  std::__merge_sort_loop(__buffer, __buffer_last, __first,
2736:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 				 __step_size, __comp);
2737:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  __step_size *= 2;
2738:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	}
2739:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     }
2740:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
2741:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   template<typename _RandomAccessIterator, typename _Pointer,
2742:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	   typename _Distance, typename _Compare>
2743:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     void
2744:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     __stable_sort_adaptive(_RandomAccessIterator __first,
2745:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 			   _RandomAccessIterator __last,
2746:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 			   _Pointer __buffer, _Distance __buffer_size,
2747:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 			   _Compare __comp)
2748:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     {
2749:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       const _Distance __len = (__last - __first + 1) / 2;
2750:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       const _RandomAccessIterator __middle = __first + __len;
2751:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       if (__len > __buffer_size)
2752:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	{
2753:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  std::__stable_sort_adaptive(__first, __middle, __buffer,
2754:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 				      __buffer_size, __comp);
2755:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  std::__stable_sort_adaptive(__middle, __last, __buffer,
2756:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 				      __buffer_size, __comp);
2757:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	}
2758:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       else
2759:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	{
2760:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  std::__merge_sort_with_buffer(__first, __middle, __buffer, __comp);
2761:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  std::__merge_sort_with_buffer(__middle, __last, __buffer, __comp);
2762:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	}
2763:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       std::__merge_adaptive(__first, __middle, __last,
2764:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 			    _Distance(__middle - __first),
2765:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 			    _Distance(__last - __middle),
2766:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 			    __buffer, __buffer_size,
2767:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 			    __comp);
2768:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     }
2769:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
2770:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   /// This is a helper function for the stable sorting routines.
2771:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   template<typename _RandomAccessIterator, typename _Compare>
2772:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     void
2773:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     __inplace_stable_sort(_RandomAccessIterator __first,
2774:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 			  _RandomAccessIterator __last, _Compare __comp)
2775:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     {
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccaSMceU.s 			page 55


2776:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       if (__last - __first < 15)
2777:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	{
2778:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  std::__insertion_sort(__first, __last, __comp);
2779:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  return;
2780:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	}
2781:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       _RandomAccessIterator __middle = __first + (__last - __first) / 2;
2782:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       std::__inplace_stable_sort(__first, __middle, __comp);
2783:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       std::__inplace_stable_sort(__middle, __last, __comp);
2784:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       std::__merge_without_buffer(__first, __middle, __last,
2785:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 				  __middle - __first,
2786:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 				  __last - __middle,
2787:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 				  __comp);
2788:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     }
2789:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
2790:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   // stable_sort
2791:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
2792:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   // Set algorithms: includes, set_union, set_intersection, set_difference,
2793:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   // set_symmetric_difference.  All of these algorithms have the precondition
2794:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   // that their input ranges are sorted and the postcondition that their output
2795:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   // ranges are sorted.
2796:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
2797:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   template<typename _InputIterator1, typename _InputIterator2,
2798:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	   typename _Compare>
2799:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _GLIBCXX20_CONSTEXPR
2800:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     bool
2801:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     __includes(_InputIterator1 __first1, _InputIterator1 __last1,
2802:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	       _InputIterator2 __first2, _InputIterator2 __last2,
2803:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	       _Compare __comp)
2804:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     {
2805:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       while (__first1 != __last1 && __first2 != __last2)
2806:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	if (__comp(__first2, __first1))
2807:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  return false;
2808:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	else if (__comp(__first1, __first2))
2809:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  ++__first1;
2810:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	else
2811:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  {
2812:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    ++__first1;
2813:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    ++__first2;
2814:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  }
2815:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
2816:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       return __first2 == __last2;
2817:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     }
2818:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
2819:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   /**
2820:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @brief Determines whether all elements of a sequence exists in a range.
2821:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __first1  Start of search range.
2822:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __last1   End of search range.
2823:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __first2  Start of sequence
2824:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __last2   End of sequence.
2825:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @return  True if each element in [__first2,__last2) is contained in order
2826:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  within [__first1,__last1).  False otherwise.
2827:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @ingroup set_algorithms
2828:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *
2829:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  This operation expects both [__first1,__last1) and
2830:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  [__first2,__last2) to be sorted.  Searches for the presence of
2831:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  each element in [__first2,__last2) within [__first1,__last1).
2832:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  The iterators over each range only move forward, so this is a
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccaSMceU.s 			page 56


2833:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  linear algorithm.  If an element in [__first2,__last2) is not
2834:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  found before the search iterator reaches @p __last2, false is
2835:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  returned.
2836:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   */
2837:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   template<typename _InputIterator1, typename _InputIterator2>
2838:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _GLIBCXX20_CONSTEXPR
2839:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     inline bool
2840:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     includes(_InputIterator1 __first1, _InputIterator1 __last1,
2841:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	     _InputIterator2 __first2, _InputIterator2 __last2)
2842:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     {
2843:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       // concept requirements
2844:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_function_requires(_InputIteratorConcept<_InputIterator1>)
2845:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_function_requires(_InputIteratorConcept<_InputIterator2>)
2846:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_function_requires(_LessThanOpConcept<
2847:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    typename iterator_traits<_InputIterator1>::value_type,
2848:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    typename iterator_traits<_InputIterator2>::value_type>)
2849:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_function_requires(_LessThanOpConcept<
2850:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    typename iterator_traits<_InputIterator2>::value_type,
2851:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    typename iterator_traits<_InputIterator1>::value_type>)
2852:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_requires_sorted_set(__first1, __last1, __first2);
2853:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_requires_sorted_set(__first2, __last2, __first1);
2854:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_requires_irreflexive2(__first1, __last1);
2855:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_requires_irreflexive2(__first2, __last2);
2856:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
2857:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       return std::__includes(__first1, __last1, __first2, __last2,
2858:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 			     __gnu_cxx::__ops::__iter_less_iter());
2859:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     }
2860:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
2861:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   /**
2862:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @brief Determines whether all elements of a sequence exists in a range
2863:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  using comparison.
2864:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @ingroup set_algorithms
2865:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __first1  Start of search range.
2866:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __last1   End of search range.
2867:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __first2  Start of sequence
2868:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __last2   End of sequence.
2869:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __comp    Comparison function to use.
2870:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @return True if each element in [__first2,__last2) is contained
2871:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  in order within [__first1,__last1) according to comp.  False
2872:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  otherwise.  @ingroup set_algorithms
2873:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *
2874:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  This operation expects both [__first1,__last1) and
2875:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  [__first2,__last2) to be sorted.  Searches for the presence of
2876:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  each element in [__first2,__last2) within [__first1,__last1),
2877:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  using comp to decide.  The iterators over each range only move
2878:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  forward, so this is a linear algorithm.  If an element in
2879:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  [__first2,__last2) is not found before the search iterator
2880:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  reaches @p __last2, false is returned.
2881:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   */
2882:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   template<typename _InputIterator1, typename _InputIterator2,
2883:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	   typename _Compare>
2884:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _GLIBCXX20_CONSTEXPR
2885:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     inline bool
2886:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     includes(_InputIterator1 __first1, _InputIterator1 __last1,
2887:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	     _InputIterator2 __first2, _InputIterator2 __last2,
2888:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	     _Compare __comp)
2889:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     {
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccaSMceU.s 			page 57


2890:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       // concept requirements
2891:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_function_requires(_InputIteratorConcept<_InputIterator1>)
2892:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_function_requires(_InputIteratorConcept<_InputIterator2>)
2893:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_function_requires(_BinaryPredicateConcept<_Compare,
2894:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    typename iterator_traits<_InputIterator1>::value_type,
2895:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    typename iterator_traits<_InputIterator2>::value_type>)
2896:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_function_requires(_BinaryPredicateConcept<_Compare,
2897:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    typename iterator_traits<_InputIterator2>::value_type,
2898:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    typename iterator_traits<_InputIterator1>::value_type>)
2899:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_requires_sorted_set_pred(__first1, __last1, __first2, __comp);
2900:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_requires_sorted_set_pred(__first2, __last2, __first1, __comp);
2901:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_requires_irreflexive_pred2(__first1, __last1, __comp);
2902:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_requires_irreflexive_pred2(__first2, __last2, __comp);
2903:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
2904:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       return std::__includes(__first1, __last1, __first2, __last2,
2905:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 			     __gnu_cxx::__ops::__iter_comp_iter(__comp));
2906:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     }
2907:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
2908:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   // nth_element
2909:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   // merge
2910:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   // set_difference
2911:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   // set_intersection
2912:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   // set_union
2913:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   // stable_sort
2914:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   // set_symmetric_difference
2915:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   // min_element
2916:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   // max_element
2917:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
2918:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   template<typename _BidirectionalIterator, typename _Compare>
2919:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _GLIBCXX20_CONSTEXPR
2920:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     bool
2921:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     __next_permutation(_BidirectionalIterator __first,
2922:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		       _BidirectionalIterator __last, _Compare __comp)
2923:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     {
2924:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       if (__first == __last)
2925:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	return false;
2926:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       _BidirectionalIterator __i = __first;
2927:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       ++__i;
2928:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       if (__i == __last)
2929:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	return false;
2930:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __i = __last;
2931:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       --__i;
2932:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
2933:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       for(;;)
2934:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	{
2935:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  _BidirectionalIterator __ii = __i;
2936:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  --__i;
2937:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  if (__comp(__i, __ii))
2938:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    {
2939:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	      _BidirectionalIterator __j = __last;
2940:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	      while (!__comp(__i, --__j))
2941:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		{}
2942:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	      std::iter_swap(__i, __j);
2943:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	      std::__reverse(__ii, __last,
2944:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 			     std::__iterator_category(__first));
2945:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	      return true;
2946:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    }
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccaSMceU.s 			page 58


2947:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  if (__i == __first)
2948:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    {
2949:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	      std::__reverse(__first, __last,
2950:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 			     std::__iterator_category(__first));
2951:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	      return false;
2952:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    }
2953:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	}
2954:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     }
2955:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
2956:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   /**
2957:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @brief  Permute range into the next @e dictionary ordering.
2958:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @ingroup sorting_algorithms
2959:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __first  Start of range.
2960:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __last   End of range.
2961:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @return  False if wrapped to first permutation, true otherwise.
2962:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *
2963:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  Treats all permutations of the range as a set of @e dictionary sorted
2964:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  sequences.  Permutes the current sequence into the next one of this set.
2965:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  Returns true if there are more sequences to generate.  If the sequence
2966:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  is the largest of the set, the smallest is generated and false returned.
2967:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   */
2968:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   template<typename _BidirectionalIterator>
2969:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _GLIBCXX20_CONSTEXPR
2970:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     inline bool
2971:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     next_permutation(_BidirectionalIterator __first,
2972:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		     _BidirectionalIterator __last)
2973:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     {
2974:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       // concept requirements
2975:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_function_requires(_BidirectionalIteratorConcept<
2976:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 				  _BidirectionalIterator>)
2977:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_function_requires(_LessThanComparableConcept<
2978:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    typename iterator_traits<_BidirectionalIterator>::value_type>)
2979:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
2980:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_requires_irreflexive(__first, __last);
2981:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
2982:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       return std::__next_permutation
2983:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	(__first, __last, __gnu_cxx::__ops::__iter_less_iter());
2984:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     }
2985:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
2986:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   /**
2987:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @brief  Permute range into the next @e dictionary ordering using
2988:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *          comparison functor.
2989:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @ingroup sorting_algorithms
2990:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __first  Start of range.
2991:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __last   End of range.
2992:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __comp   A comparison functor.
2993:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @return  False if wrapped to first permutation, true otherwise.
2994:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *
2995:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  Treats all permutations of the range [__first,__last) as a set of
2996:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @e dictionary sorted sequences ordered by @p __comp.  Permutes the current
2997:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  sequence into the next one of this set.  Returns true if there are more
2998:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  sequences to generate.  If the sequence is the largest of the set, the
2999:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  smallest is generated and false returned.
3000:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   */
3001:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   template<typename _BidirectionalIterator, typename _Compare>
3002:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _GLIBCXX20_CONSTEXPR
3003:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     inline bool
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccaSMceU.s 			page 59


3004:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     next_permutation(_BidirectionalIterator __first,
3005:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		     _BidirectionalIterator __last, _Compare __comp)
3006:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     {
3007:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       // concept requirements
3008:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_function_requires(_BidirectionalIteratorConcept<
3009:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 				  _BidirectionalIterator>)
3010:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_function_requires(_BinaryPredicateConcept<_Compare,
3011:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    typename iterator_traits<_BidirectionalIterator>::value_type,
3012:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    typename iterator_traits<_BidirectionalIterator>::value_type>)
3013:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
3014:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_requires_irreflexive_pred(__first, __last, __comp);
3015:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
3016:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       return std::__next_permutation
3017:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	(__first, __last, __gnu_cxx::__ops::__iter_comp_iter(__comp));
3018:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     }
3019:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
3020:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   template<typename _BidirectionalIterator, typename _Compare>
3021:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _GLIBCXX20_CONSTEXPR
3022:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     bool
3023:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     __prev_permutation(_BidirectionalIterator __first,
3024:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		       _BidirectionalIterator __last, _Compare __comp)
3025:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     {
3026:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       if (__first == __last)
3027:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	return false;
3028:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       _BidirectionalIterator __i = __first;
3029:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       ++__i;
3030:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       if (__i == __last)
3031:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	return false;
3032:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __i = __last;
3033:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       --__i;
3034:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
3035:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       for(;;)
3036:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	{
3037:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  _BidirectionalIterator __ii = __i;
3038:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  --__i;
3039:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  if (__comp(__ii, __i))
3040:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    {
3041:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	      _BidirectionalIterator __j = __last;
3042:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	      while (!__comp(--__j, __i))
3043:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		{}
3044:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	      std::iter_swap(__i, __j);
3045:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	      std::__reverse(__ii, __last,
3046:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 			     std::__iterator_category(__first));
3047:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	      return true;
3048:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    }
3049:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  if (__i == __first)
3050:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    {
3051:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	      std::__reverse(__first, __last,
3052:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 			     std::__iterator_category(__first));
3053:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	      return false;
3054:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    }
3055:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	}
3056:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     }
3057:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
3058:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   /**
3059:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @brief  Permute range into the previous @e dictionary ordering.
3060:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @ingroup sorting_algorithms
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccaSMceU.s 			page 60


3061:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __first  Start of range.
3062:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __last   End of range.
3063:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @return  False if wrapped to last permutation, true otherwise.
3064:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *
3065:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  Treats all permutations of the range as a set of @e dictionary sorted
3066:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  sequences.  Permutes the current sequence into the previous one of this
3067:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  set.  Returns true if there are more sequences to generate.  If the
3068:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  sequence is the smallest of the set, the largest is generated and false
3069:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  returned.
3070:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   */
3071:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   template<typename _BidirectionalIterator>
3072:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _GLIBCXX20_CONSTEXPR
3073:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     inline bool
3074:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     prev_permutation(_BidirectionalIterator __first,
3075:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		     _BidirectionalIterator __last)
3076:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     {
3077:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       // concept requirements
3078:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_function_requires(_BidirectionalIteratorConcept<
3079:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 				  _BidirectionalIterator>)
3080:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_function_requires(_LessThanComparableConcept<
3081:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    typename iterator_traits<_BidirectionalIterator>::value_type>)
3082:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
3083:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_requires_irreflexive(__first, __last);
3084:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
3085:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       return std::__prev_permutation(__first, __last,
3086:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 				     __gnu_cxx::__ops::__iter_less_iter());
3087:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     }
3088:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
3089:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   /**
3090:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @brief  Permute range into the previous @e dictionary ordering using
3091:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *          comparison functor.
3092:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @ingroup sorting_algorithms
3093:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __first  Start of range.
3094:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __last   End of range.
3095:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __comp   A comparison functor.
3096:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @return  False if wrapped to last permutation, true otherwise.
3097:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *
3098:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  Treats all permutations of the range [__first,__last) as a set of
3099:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @e dictionary sorted sequences ordered by @p __comp.  Permutes the current
3100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  sequence into the previous one of this set.  Returns true if there are
3101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  more sequences to generate.  If the sequence is the smallest of the set,
3102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  the largest is generated and false returned.
3103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   */
3104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   template<typename _BidirectionalIterator, typename _Compare>
3105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _GLIBCXX20_CONSTEXPR
3106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     inline bool
3107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     prev_permutation(_BidirectionalIterator __first,
3108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		     _BidirectionalIterator __last, _Compare __comp)
3109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     {
3110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       // concept requirements
3111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_function_requires(_BidirectionalIteratorConcept<
3112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 				  _BidirectionalIterator>)
3113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_function_requires(_BinaryPredicateConcept<_Compare,
3114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    typename iterator_traits<_BidirectionalIterator>::value_type,
3115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    typename iterator_traits<_BidirectionalIterator>::value_type>)
3116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
3117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_requires_irreflexive_pred(__first, __last, __comp);
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccaSMceU.s 			page 61


3118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
3119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       return std::__prev_permutation(__first, __last,
3120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 				__gnu_cxx::__ops::__iter_comp_iter(__comp));
3121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     }
3122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
3123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   // replace
3124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   // replace_if
3125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
3126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   template<typename _InputIterator, typename _OutputIterator,
3127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	   typename _Predicate, typename _Tp>
3128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _GLIBCXX20_CONSTEXPR
3129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _OutputIterator
3130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     __replace_copy_if(_InputIterator __first, _InputIterator __last,
3131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		      _OutputIterator __result,
3132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		      _Predicate __pred, const _Tp& __new_value)
3133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     {
3134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       for (; __first != __last; ++__first, (void)++__result)
3135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	if (__pred(__first))
3136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  *__result = __new_value;
3137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	else
3138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  *__result = *__first;
3139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       return __result;
3140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     }
3141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
3142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   /**
3143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @brief Copy a sequence, replacing each element of one value with another
3144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *         value.
3145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __first      An input iterator.
3146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __last       An input iterator.
3147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __result     An output iterator.
3148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __old_value  The value to be replaced.
3149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __new_value  The replacement value.
3150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @return   The end of the output sequence, @p result+(last-first).
3151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *
3152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  Copies each element in the input range @p [__first,__last) to the
3153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  output range @p [__result,__result+(__last-__first)) replacing elements
3154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  equal to @p __old_value with @p __new_value.
3155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   */
3156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   template<typename _InputIterator, typename _OutputIterator, typename _Tp>
3157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _GLIBCXX20_CONSTEXPR
3158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     inline _OutputIterator
3159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     replace_copy(_InputIterator __first, _InputIterator __last,
3160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		 _OutputIterator __result,
3161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		 const _Tp& __old_value, const _Tp& __new_value)
3162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     {
3163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       // concept requirements
3164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_function_requires(_InputIteratorConcept<_InputIterator>)
3165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_OutputIterator,
3166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    typename iterator_traits<_InputIterator>::value_type>)
3167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_function_requires(_EqualOpConcept<
3168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    typename iterator_traits<_InputIterator>::value_type, _Tp>)
3169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
3170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
3171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       return std::__replace_copy_if(__first, __last, __result,
3172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 			__gnu_cxx::__ops::__iter_equals_val(__old_value),
3173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 					      __new_value);
3174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     }
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccaSMceU.s 			page 62


3175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
3176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   /**
3177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @brief Copy a sequence, replacing each value for which a predicate
3178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *         returns true with another value.
3179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @ingroup mutating_algorithms
3180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __first      An input iterator.
3181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __last       An input iterator.
3182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __result     An output iterator.
3183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __pred       A predicate.
3184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __new_value  The replacement value.
3185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @return   The end of the output sequence, @p __result+(__last-__first).
3186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *
3187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  Copies each element in the range @p [__first,__last) to the range
3188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @p [__result,__result+(__last-__first)) replacing elements for which
3189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @p __pred returns true with @p __new_value.
3190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   */
3191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   template<typename _InputIterator, typename _OutputIterator,
3192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	   typename _Predicate, typename _Tp>
3193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _GLIBCXX20_CONSTEXPR
3194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     inline _OutputIterator
3195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     replace_copy_if(_InputIterator __first, _InputIterator __last,
3196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		    _OutputIterator __result,
3197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		    _Predicate __pred, const _Tp& __new_value)
3198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     {
3199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       // concept requirements
3200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_function_requires(_InputIteratorConcept<_InputIterator>)
3201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_OutputIterator,
3202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    typename iterator_traits<_InputIterator>::value_type>)
3203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_function_requires(_UnaryPredicateConcept<_Predicate,
3204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    typename iterator_traits<_InputIterator>::value_type>)
3205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
3206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
3207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       return std::__replace_copy_if(__first, __last, __result,
3208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 				__gnu_cxx::__ops::__pred_iter(__pred),
3209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 					      __new_value);
3210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     }
3211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
3212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** #if __cplusplus >= 201103L
3213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   /**
3214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @brief  Determines whether the elements of a sequence are sorted.
3215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @ingroup sorting_algorithms
3216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __first   An iterator.
3217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __last    Another iterator.
3218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @return  True if the elements are sorted, false otherwise.
3219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   */
3220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   template<typename _ForwardIterator>
3221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _GLIBCXX20_CONSTEXPR
3222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     inline bool
3223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     is_sorted(_ForwardIterator __first, _ForwardIterator __last)
3224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     { return std::is_sorted_until(__first, __last) == __last; }
3225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
3226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   /**
3227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @brief  Determines whether the elements of a sequence are sorted
3228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *          according to a comparison functor.
3229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @ingroup sorting_algorithms
3230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __first   An iterator.
3231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __last    Another iterator.
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccaSMceU.s 			page 63


3232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __comp    A comparison functor.
3233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @return  True if the elements are sorted, false otherwise.
3234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   */
3235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   template<typename _ForwardIterator, typename _Compare>
3236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _GLIBCXX20_CONSTEXPR
3237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     inline bool
3238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     is_sorted(_ForwardIterator __first, _ForwardIterator __last,
3239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	      _Compare __comp)
3240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     { return std::is_sorted_until(__first, __last, __comp) == __last; }
3241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
3242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   template<typename _ForwardIterator, typename _Compare>
3243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _GLIBCXX20_CONSTEXPR
3244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _ForwardIterator
3245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     __is_sorted_until(_ForwardIterator __first, _ForwardIterator __last,
3246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		      _Compare __comp)
3247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     {
3248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       if (__first == __last)
3249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	return __last;
3250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
3251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       _ForwardIterator __next = __first;
3252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       for (++__next; __next != __last; __first = __next, (void)++__next)
3253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	if (__comp(__next, __first))
3254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  return __next;
3255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       return __next;
3256:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     }
3257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
3258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   /**
3259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @brief  Determines the end of a sorted sequence.
3260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @ingroup sorting_algorithms
3261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __first   An iterator.
3262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __last    Another iterator.
3263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @return  An iterator pointing to the last iterator i in [__first, __last)
3264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *           for which the range [__first, i) is sorted.
3265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   */
3266:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   template<typename _ForwardIterator>
3267:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _GLIBCXX20_CONSTEXPR
3268:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     inline _ForwardIterator
3269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     is_sorted_until(_ForwardIterator __first, _ForwardIterator __last)
3270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     {
3271:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       // concept requirements
3272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
3273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_function_requires(_LessThanComparableConcept<
3274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    typename iterator_traits<_ForwardIterator>::value_type>)
3275:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
3276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_requires_irreflexive(__first, __last);
3277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
3278:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       return std::__is_sorted_until(__first, __last,
3279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 				    __gnu_cxx::__ops::__iter_less_iter());
3280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     }
3281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
3282:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   /**
3283:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @brief  Determines the end of a sorted sequence using comparison functor.
3284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @ingroup sorting_algorithms
3285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __first   An iterator.
3286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __last    Another iterator.
3287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __comp    A comparison functor.
3288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @return  An iterator pointing to the last iterator i in [__first, __last)
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccaSMceU.s 			page 64


3289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *           for which the range [__first, i) is sorted.
3290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   */
3291:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   template<typename _ForwardIterator, typename _Compare>
3292:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _GLIBCXX20_CONSTEXPR
3293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     inline _ForwardIterator
3294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     is_sorted_until(_ForwardIterator __first, _ForwardIterator __last,
3295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		    _Compare __comp)
3296:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     {
3297:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       // concept requirements
3298:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
3299:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_function_requires(_BinaryPredicateConcept<_Compare,
3300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    typename iterator_traits<_ForwardIterator>::value_type,
3301:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    typename iterator_traits<_ForwardIterator>::value_type>)
3302:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
3303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_requires_irreflexive_pred(__first, __last, __comp);
3304:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
3305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       return std::__is_sorted_until(__first, __last,
3306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 				    __gnu_cxx::__ops::__iter_comp_iter(__comp));
3307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     }
3308:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
3309:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   /**
3310:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @brief  Determines min and max at once as an ordered pair.
3311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @ingroup sorting_algorithms
3312:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __a  A thing of arbitrary type.
3313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __b  Another thing of arbitrary type.
3314:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @return A pair(__b, __a) if __b is smaller than __a, pair(__a,
3315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  __b) otherwise.
3316:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   */
3317:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   template<typename _Tp>
3318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _GLIBCXX14_CONSTEXPR
3319:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     inline pair<const _Tp&, const _Tp&>
3320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     minmax(const _Tp& __a, const _Tp& __b)
3321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     {
3322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       // concept requirements
3323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
3324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
3325:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       return __b < __a ? pair<const _Tp&, const _Tp&>(__b, __a)
3326:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		       : pair<const _Tp&, const _Tp&>(__a, __b);
3327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     }
3328:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
3329:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   /**
3330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @brief  Determines min and max at once as an ordered pair.
3331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @ingroup sorting_algorithms
3332:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __a  A thing of arbitrary type.
3333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __b  Another thing of arbitrary type.
3334:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __comp  A @link comparison_functors comparison functor @endlink.
3335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @return A pair(__b, __a) if __b is smaller than __a, pair(__a,
3336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  __b) otherwise.
3337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   */
3338:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   template<typename _Tp, typename _Compare>
3339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _GLIBCXX14_CONSTEXPR
3340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     inline pair<const _Tp&, const _Tp&>
3341:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     minmax(const _Tp& __a, const _Tp& __b, _Compare __comp)
3342:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     {
3343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       return __comp(__b, __a) ? pair<const _Tp&, const _Tp&>(__b, __a)
3344:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 			      : pair<const _Tp&, const _Tp&>(__a, __b);
3345:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     }
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccaSMceU.s 			page 65


3346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
3347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   template<typename _ForwardIterator, typename _Compare>
3348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _GLIBCXX14_CONSTEXPR
3349:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     pair<_ForwardIterator, _ForwardIterator>
3350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     __minmax_element(_ForwardIterator __first, _ForwardIterator __last,
3351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		     _Compare __comp)
3352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     {
3353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       _ForwardIterator __next = __first;
3354:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       if (__first == __last
3355:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  || ++__next == __last)
3356:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	return std::make_pair(__first, __first);
3357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
3358:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       _ForwardIterator __min{}, __max{};
3359:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       if (__comp(__next, __first))
3360:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	{
3361:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  __min = __next;
3362:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  __max = __first;
3363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	}
3364:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       else
3365:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	{
3366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  __min = __first;
3367:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  __max = __next;
3368:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	}
3369:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
3370:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __first = __next;
3371:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       ++__first;
3372:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
3373:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       while (__first != __last)
3374:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	{
3375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  __next = __first;
3376:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  if (++__next == __last)
3377:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    {
3378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	      if (__comp(__first, __min))
3379:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		__min = __first;
3380:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	      else if (!__comp(__first, __max))
3381:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		__max = __first;
3382:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	      break;
3383:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    }
3384:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
3385:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  if (__comp(__next, __first))
3386:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    {
3387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	      if (__comp(__next, __min))
3388:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		__min = __next;
3389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	      if (!__comp(__first, __max))
3390:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		__max = __first;
3391:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    }
3392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  else
3393:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    {
3394:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	      if (__comp(__first, __min))
3395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		__min = __first;
3396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	      if (!__comp(__next, __max))
3397:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		__max = __next;
3398:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    }
3399:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
3400:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  __first = __next;
3401:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  ++__first;
3402:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	}
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccaSMceU.s 			page 66


3403:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
3404:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       return std::make_pair(__min, __max);
3405:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     }
3406:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
3407:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   /**
3408:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @brief  Return a pair of iterators pointing to the minimum and maximum
3409:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *          elements in a range.
3410:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @ingroup sorting_algorithms
3411:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __first  Start of range.
3412:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __last   End of range.
3413:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @return  make_pair(m, M), where m is the first iterator i in 
3414:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *           [__first, __last) such that no other element in the range is
3415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *           smaller, and where M is the last iterator i in [__first, __last)
3416:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *           such that no other element in the range is larger.
3417:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   */
3418:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   template<typename _ForwardIterator>
3419:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _GLIBCXX14_CONSTEXPR
3420:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     inline pair<_ForwardIterator, _ForwardIterator>
3421:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     minmax_element(_ForwardIterator __first, _ForwardIterator __last)
3422:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     {
3423:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       // concept requirements
3424:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
3425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_function_requires(_LessThanComparableConcept<
3426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    typename iterator_traits<_ForwardIterator>::value_type>)
3427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
3428:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_requires_irreflexive(__first, __last);
3429:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
3430:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       return std::__minmax_element(__first, __last,
3431:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 				   __gnu_cxx::__ops::__iter_less_iter());
3432:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     }
3433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
3434:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   /**
3435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @brief  Return a pair of iterators pointing to the minimum and maximum
3436:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *          elements in a range.
3437:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @ingroup sorting_algorithms
3438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __first  Start of range.
3439:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __last   End of range.
3440:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __comp   Comparison functor.
3441:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @return  make_pair(m, M), where m is the first iterator i in 
3442:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *           [__first, __last) such that no other element in the range is
3443:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *           smaller, and where M is the last iterator i in [__first, __last)
3444:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *           such that no other element in the range is larger.
3445:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   */
3446:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   template<typename _ForwardIterator, typename _Compare>
3447:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _GLIBCXX14_CONSTEXPR
3448:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     inline pair<_ForwardIterator, _ForwardIterator>
3449:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     minmax_element(_ForwardIterator __first, _ForwardIterator __last,
3450:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		   _Compare __comp)
3451:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     {
3452:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       // concept requirements
3453:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
3454:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_function_requires(_BinaryPredicateConcept<_Compare,
3455:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    typename iterator_traits<_ForwardIterator>::value_type,
3456:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    typename iterator_traits<_ForwardIterator>::value_type>)
3457:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
3458:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_requires_irreflexive_pred(__first, __last, __comp);
3459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccaSMceU.s 			page 67


3460:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       return std::__minmax_element(__first, __last,
3461:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 				   __gnu_cxx::__ops::__iter_comp_iter(__comp));
3462:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     }
3463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
3464:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   // N2722 + DR 915.
3465:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   template<typename _Tp>
3466:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _GLIBCXX14_CONSTEXPR
3467:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     inline _Tp
3468:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     min(initializer_list<_Tp> __l)
3469:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     { return *std::min_element(__l.begin(), __l.end()); }
3470:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
3471:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   template<typename _Tp, typename _Compare>
3472:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _GLIBCXX14_CONSTEXPR
3473:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     inline _Tp
3474:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     min(initializer_list<_Tp> __l, _Compare __comp)
3475:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     { return *std::min_element(__l.begin(), __l.end(), __comp); }
3476:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
3477:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   template<typename _Tp>
3478:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _GLIBCXX14_CONSTEXPR
3479:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     inline _Tp
3480:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     max(initializer_list<_Tp> __l)
3481:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     { return *std::max_element(__l.begin(), __l.end()); }
3482:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
3483:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   template<typename _Tp, typename _Compare>
3484:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _GLIBCXX14_CONSTEXPR
3485:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     inline _Tp
3486:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     max(initializer_list<_Tp> __l, _Compare __comp)
3487:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     { return *std::max_element(__l.begin(), __l.end(), __comp); }
3488:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
3489:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   template<typename _Tp>
3490:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _GLIBCXX14_CONSTEXPR
3491:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     inline pair<_Tp, _Tp>
3492:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     minmax(initializer_list<_Tp> __l)
3493:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     {
3494:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       pair<const _Tp*, const _Tp*> __p =
3495:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	std::minmax_element(__l.begin(), __l.end());
3496:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       return std::make_pair(*__p.first, *__p.second);
3497:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     }
3498:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
3499:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   template<typename _Tp, typename _Compare>
3500:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _GLIBCXX14_CONSTEXPR
3501:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     inline pair<_Tp, _Tp>
3502:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     minmax(initializer_list<_Tp> __l, _Compare __comp)
3503:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     {
3504:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       pair<const _Tp*, const _Tp*> __p =
3505:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	std::minmax_element(__l.begin(), __l.end(), __comp);
3506:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       return std::make_pair(*__p.first, *__p.second);
3507:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     }
3508:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
3509:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   /**
3510:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @brief  Checks whether a permutation of the second sequence is equal
3511:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *          to the first sequence.
3512:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @ingroup non_mutating_algorithms
3513:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __first1  Start of first range.
3514:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __last1   End of first range.
3515:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __first2  Start of second range.
3516:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __pred    A binary predicate.
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccaSMceU.s 			page 68


3517:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @return true if there exists a permutation of the elements in
3518:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *          the range [__first2, __first2 + (__last1 - __first1)),
3519:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *          beginning with ForwardIterator2 begin, such that
3520:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *          equal(__first1, __last1, __begin, __pred) returns true;
3521:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *          otherwise, returns false.
3522:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   */
3523:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2,
3524:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	   typename _BinaryPredicate>
3525:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _GLIBCXX20_CONSTEXPR
3526:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     inline bool
3527:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     is_permutation(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
3528:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		   _ForwardIterator2 __first2, _BinaryPredicate __pred)
3529:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     {
3530:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       // concept requirements
3531:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator1>)
3532:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator2>)
3533:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_function_requires(_BinaryPredicateConcept<_BinaryPredicate,
3534:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    typename iterator_traits<_ForwardIterator1>::value_type,
3535:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    typename iterator_traits<_ForwardIterator2>::value_type>)
3536:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_requires_valid_range(__first1, __last1);
3537:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
3538:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       return std::__is_permutation(__first1, __last1, __first2,
3539:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 				   __gnu_cxx::__ops::__iter_comp_iter(__pred));
3540:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     }
3541:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
3542:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** #if __cplusplus > 201103L
3543:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2,
3544:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	   typename _BinaryPredicate>
3545:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _GLIBCXX20_CONSTEXPR
3546:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     bool
3547:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     __is_permutation(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
3548:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		     _ForwardIterator2 __first2, _ForwardIterator2 __last2,
3549:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		     _BinaryPredicate __pred)
3550:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     {
3551:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       using _Cat1
3552:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	= typename iterator_traits<_ForwardIterator1>::iterator_category;
3553:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       using _Cat2
3554:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	= typename iterator_traits<_ForwardIterator2>::iterator_category;
3555:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       using _It1_is_RA = is_same<_Cat1, random_access_iterator_tag>;
3556:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       using _It2_is_RA = is_same<_Cat2, random_access_iterator_tag>;
3557:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       constexpr bool __ra_iters = _It1_is_RA() && _It2_is_RA();
3558:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       if (__ra_iters)
3559:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	{
3560:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  auto __d1 = std::distance(__first1, __last1);
3561:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  auto __d2 = std::distance(__first2, __last2);
3562:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  if (__d1 != __d2)
3563:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    return false;
3564:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	}
3565:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
3566:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       // Efficiently compare identical prefixes:  O(N) if sequences
3567:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       // have the same elements in the same order.
3568:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       for (; __first1 != __last1 && __first2 != __last2;
3569:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  ++__first1, (void)++__first2)
3570:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	if (!__pred(__first1, __first2))
3571:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  break;
3572:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
3573:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       if (__ra_iters)
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccaSMceU.s 			page 69


3574:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	{
3575:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  if (__first1 == __last1)
3576:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    return true;
3577:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	}
3578:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       else
3579:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	{
3580:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  auto __d1 = std::distance(__first1, __last1);
3581:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  auto __d2 = std::distance(__first2, __last2);
3582:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  if (__d1 == 0 && __d2 == 0)
3583:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    return true;
3584:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  if (__d1 != __d2)
3585:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    return false;
3586:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	}
3587:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
3588:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       for (_ForwardIterator1 __scan = __first1; __scan != __last1; ++__scan)
3589:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	{
3590:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  if (__scan != std::__find_if(__first1, __scan,
3591:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 			__gnu_cxx::__ops::__iter_comp_iter(__pred, __scan)))
3592:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    continue; // We've seen this one before.
3593:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
3594:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  auto __matches = std::__count_if(__first2, __last2,
3595:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		__gnu_cxx::__ops::__iter_comp_iter(__pred, __scan));
3596:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	  if (0 == __matches
3597:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	      || std::__count_if(__scan, __last1,
3598:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 			__gnu_cxx::__ops::__iter_comp_iter(__pred, __scan))
3599:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	      != __matches)
3600:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	    return false;
3601:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	}
3602:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       return true;
3603:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     }
3604:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
3605:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   /**
3606:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @brief  Checks whether a permutaion of the second sequence is equal
3607:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *          to the first sequence.
3608:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @ingroup non_mutating_algorithms
3609:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __first1  Start of first range.
3610:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __last1   End of first range.
3611:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __first2  Start of second range.
3612:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __last2   End of first range.
3613:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @return true if there exists a permutation of the elements in the range
3614:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *          [__first2, __last2), beginning with ForwardIterator2 begin,
3615:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *          such that equal(__first1, __last1, begin) returns true;
3616:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *          otherwise, returns false.
3617:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   */
3618:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2>
3619:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _GLIBCXX20_CONSTEXPR
3620:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     inline bool
3621:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     is_permutation(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
3622:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		   _ForwardIterator2 __first2, _ForwardIterator2 __last2)
3623:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     {
3624:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_requires_valid_range(__first1, __last1);
3625:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_requires_valid_range(__first2, __last2);
3626:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
3627:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       return
3628:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	std::__is_permutation(__first1, __last1, __first2, __last2,
3629:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 			      __gnu_cxx::__ops::__iter_equal_to_iter());
3630:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     }
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccaSMceU.s 			page 70


3631:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
3632:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   /**
3633:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @brief  Checks whether a permutation of the second sequence is equal
3634:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *          to the first sequence.
3635:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @ingroup non_mutating_algorithms
3636:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __first1  Start of first range.
3637:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __last1   End of first range.
3638:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __first2  Start of second range.
3639:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __last2   End of first range.
3640:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __pred    A binary predicate.
3641:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @return true if there exists a permutation of the elements in the range
3642:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *          [__first2, __last2), beginning with ForwardIterator2 begin,
3643:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *          such that equal(__first1, __last1, __begin, __pred) returns true;
3644:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *          otherwise, returns false.
3645:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   */
3646:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2,
3647:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 	   typename _BinaryPredicate>
3648:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     _GLIBCXX20_CONSTEXPR
3649:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     inline bool
3650:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     is_permutation(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
3651:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		   _ForwardIterator2 __first2, _ForwardIterator2 __last2,
3652:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 		   _BinaryPredicate __pred)
3653:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     {
3654:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_requires_valid_range(__first1, __last1);
3655:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_requires_valid_range(__first2, __last2);
3656:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
3657:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       return std::__is_permutation(__first1, __last1, __first2, __last2,
3658:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 				   __gnu_cxx::__ops::__iter_comp_iter(__pred));
3659:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     }
3660:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
3661:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** #if __cplusplus > 201402L
3662:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
3663:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** #define __cpp_lib_clamp 201603
3664:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h **** 
3665:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   /**
3666:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @brief  Returns the value clamped between lo and hi.
3667:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @ingroup sorting_algorithms
3668:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __val  A value of arbitrary type.
3669:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __lo   A lower limit of arbitrary type.
3670:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @param  __hi   An upper limit of arbitrary type.
3671:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    *  @return max(__val, __lo) if __val < __hi or min(__val, __hi) otherwise.
3672:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****    */
3673:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****   template<typename _Tp>
3674:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     constexpr const _Tp&
3675:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     clamp(const _Tp& __val, const _Tp& __lo, const _Tp& __hi)
 258              		.loc 2 3675 5 view .LVU67
 259              	.LBB42:
3676:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****     {
3677:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       __glibcxx_assert(!(__hi < __lo));
3678:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\stl_algo.h ****       return (__val < __lo) ? __lo : (__hi < __val) ? __hi : __val;
 260              		.loc 2 3678 29 is_stmt 0 view .LVU68
 261 0000 DFED4D7A 		vldr.32	s15, .L36
 262 0004 B4EEE70A 		vcmpe.f32	s0, s15
 263              	.LBE42:
 264              	.LBE41:
  29:src/TalkBoxProcessor.cpp ****     // 1) Clamp sample rate
 265              		.loc 1 29 71 view .LVU69
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccaSMceU.s 			page 71


 266 0008 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 267              		.cfi_def_cfa_offset 24
 268              		.cfi_offset 3, -24
 269              		.cfi_offset 4, -20
 270              		.cfi_offset 5, -16
 271              		.cfi_offset 6, -12
 272              		.cfi_offset 7, -8
 273              		.cfi_offset 14, -4
 274              	.LBB47:
 275              	.LBB43:
 276              		.loc 2 3678 29 view .LVU70
 277 000a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 278              	.LBE43:
 279              	.LBE47:
  29:src/TalkBoxProcessor.cpp ****     // 1) Clamp sample rate
 280              		.loc 1 29 71 view .LVU71
 281 000e 0446     		mov	r4, r0
 282 0010 0F46     		mov	r7, r1
 283 0012 2DED028B 		vpush.64	{d8}
 284              		.cfi_def_cfa_offset 32
 285              		.cfi_offset 80, -32
 286              		.cfi_offset 81, -28
 287              	.LBB48:
 288              	.LBB44:
 289              		.loc 2 3678 29 view .LVU72
 290 0016 56D4     		bmi	.L31
 291 0018 DFED487A 		vldr.32	s15, .L36+4
 292 001c B4EEE70A 		vcmpe.f32	s0, s15
 293 0020 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 294 0024 00F38380 		bgt	.L32
 295              	.LVL19:
 296              		.loc 2 3678 29 view .LVU73
 297              	.LBE44:
 298              	.LBE48:
  32:src/TalkBoxProcessor.cpp **** 
  33:src/TalkBoxProcessor.cpp ****     // 2) Compute window length N (in samples)
  34:src/TalkBoxProcessor.cpp ****     int32_t newN = static_cast<int32_t>(0.01633f * fs);
 299              		.loc 1 34 5 is_stmt 1 view .LVU74
 300              		.loc 1 34 50 is_stmt 0 view .LVU75
 301 0028 9FED457A 		vldr.32	s14, .L36+8
  35:src/TalkBoxProcessor.cpp ****     newN = std::min(newN, BUF_MAX);
  36:src/TalkBoxProcessor.cpp **** 
  37:src/TalkBoxProcessor.cpp ****     // 3) Compute LPC order O from quality slider
  38:src/TalkBoxProcessor.cpp ****     //    O = (0.0001 + 0.0004 * quality) * fs
  39:src/TalkBoxProcessor.cpp ****     O = static_cast<int32_t>((0.0001f + 0.0004f * p.quality) * fs);
 302              		.loc 1 39 39 view .LVU76
 303 002c 91ED026A 		vldr.32	s12, [r1, #8]
  34:src/TalkBoxProcessor.cpp ****     newN = std::min(newN, BUF_MAX);
 304              		.loc 1 34 50 view .LVU77
 305 0030 20EE077A 		vmul.f32	s14, s0, s14
 306              		.loc 1 39 39 view .LVU78
 307 0034 DFED436A 		vldr.32	s13, .L36+12
 308 0038 DFED437A 		vldr.32	s15, .L36+16
 309              	.LBB49:
  40:src/TalkBoxProcessor.cpp **** 
  41:src/TalkBoxProcessor.cpp ****     // 4) Recompute Hanning window only if N changed
  42:src/TalkBoxProcessor.cpp ****     if (newN != N) {
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccaSMceU.s 			page 72


 310              		.loc 1 42 5 view .LVU79
 311 003c 4269     		ldr	r2, [r0, #20]
 312              	.LBE49:
  39:src/TalkBoxProcessor.cpp **** 
 313              		.loc 1 39 39 view .LVU80
 314 003e E6EE267A 		vfma.f32	s15, s12, s13
  34:src/TalkBoxProcessor.cpp ****     newN = std::min(newN, BUF_MAX);
 315              		.loc 1 34 20 view .LVU81
 316 0042 BDEEC77A 		vcvt.s32.f32	s14, s14
 317 0046 17EE103A 		vmov	r3, s14	@ int
 318              	.LVL20:
  35:src/TalkBoxProcessor.cpp **** 
 319              		.loc 1 35 5 is_stmt 1 view .LVU82
  35:src/TalkBoxProcessor.cpp **** 
 320              		.loc 1 35 5 is_stmt 0 view .LVU83
 321 004a 17EE106A 		vmov	r6, s14	@ int
 322 004e B3F5C86F 		cmp	r3, #1600
  39:src/TalkBoxProcessor.cpp **** 
 323              		.loc 1 39 62 view .LVU84
 324 0052 27EE800A 		vmul.f32	s0, s15, s0
 325              	.LVL21:
  39:src/TalkBoxProcessor.cpp **** 
 326              		.loc 1 39 62 view .LVU85
 327 0056 A8BF     		it	ge
 328 0058 4FF4C866 		movge	r6, #1600
 329              	.LVL22:
  39:src/TalkBoxProcessor.cpp **** 
 330              		.loc 1 39 5 is_stmt 1 view .LVU86
  39:src/TalkBoxProcessor.cpp **** 
 331              		.loc 1 39 9 is_stmt 0 view .LVU87
 332 005c BDEEC00A 		vcvt.s32.f32	s0, s0
 333              	.LBB62:
 334              		.loc 1 42 5 view .LVU88
 335 0060 B242     		cmp	r2, r6
 336              	.LBE62:
  39:src/TalkBoxProcessor.cpp **** 
 337              		.loc 1 39 9 view .LVU89
 338 0062 80ED060A 		vstr.32	s0, [r0, #24]	@ int
 339              		.loc 1 42 5 is_stmt 1 view .LVU90
 340              	.LBB63:
 341 0066 0AD0     		beq	.L28
 342              	.LBB50:
  43:src/TalkBoxProcessor.cpp ****         N = newN;
 343              		.loc 1 43 9 view .LVU91
  44:src/TalkBoxProcessor.cpp ****         float dp    = TWO_PI / static_cast<float>(N);
 344              		.loc 1 44 32 is_stmt 0 view .LVU92
 345 0068 07EE906A 		vmov	s15, r6	@ int
 346              		.loc 1 44 15 view .LVU93
 347 006c 9FED377A 		vldr.32	s14, .L36+20
 348              	.LBB51:
  45:src/TalkBoxProcessor.cpp ****         float phase = 0.0f;
  46:src/TalkBoxProcessor.cpp ****         for (int32_t i = 0; i < N; ++i) {
 349              		.loc 1 46 31 view .LVU94
 350 0070 002B     		cmp	r3, #0
 351              	.LBE51:
  43:src/TalkBoxProcessor.cpp ****         float dp    = TWO_PI / static_cast<float>(N);
 352              		.loc 1 43 11 view .LVU95
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccaSMceU.s 			page 73


 353 0072 4661     		str	r6, [r0, #20]
  44:src/TalkBoxProcessor.cpp ****         float dp    = TWO_PI / static_cast<float>(N);
 354              		.loc 1 44 9 is_stmt 1 view .LVU96
  44:src/TalkBoxProcessor.cpp ****         float dp    = TWO_PI / static_cast<float>(N);
 355              		.loc 1 44 32 is_stmt 0 view .LVU97
 356 0074 F8EEE77A 		vcvt.f32.s32	s15, s15
  44:src/TalkBoxProcessor.cpp ****         float dp    = TWO_PI / static_cast<float>(N);
 357              		.loc 1 44 15 view .LVU98
 358 0078 C7EE278A 		vdiv.f32	s17, s14, s15
 359              	.LVL23:
  45:src/TalkBoxProcessor.cpp ****         float phase = 0.0f;
 360              		.loc 1 45 9 is_stmt 1 view .LVU99
 361              		.loc 1 46 9 view .LVU100
 362              	.LBB58:
 363              		.loc 1 46 31 view .LVU101
 364 007c 40DC     		bgt	.L30
 365              	.LVL24:
 366              	.L28:
 367              		.loc 1 46 31 is_stmt 0 view .LVU102
 368              	.LBE58:
 369              	.LBE50:
 370              	.LBE63:
  47:src/TalkBoxProcessor.cpp ****             window[i] = 0.5f - 0.5f * std::cos(phase);
  48:src/TalkBoxProcessor.cpp ****             phase    += dp;
  49:src/TalkBoxProcessor.cpp ****         }
  50:src/TalkBoxProcessor.cpp ****     }
  51:src/TalkBoxProcessor.cpp **** 
  52:src/TalkBoxProcessor.cpp ****     // 5) Compute wet/dry gains exactly as in the plugin
  53:src/TalkBoxProcessor.cpp ****     wet = 0.5f * p.wet * p.wet;
 371              		.loc 1 53 5 is_stmt 1 view .LVU103
 372              		.loc 1 53 20 is_stmt 0 view .LVU104
 373 007e 97ED006A 		vldr.32	s12, [r7]
  54:src/TalkBoxProcessor.cpp ****     dry = 2.0f * p.dry * p.dry;
  55:src/TalkBoxProcessor.cpp **** 
  56:src/TalkBoxProcessor.cpp ****     // 6) Reset overlap-add indices & state
  57:src/TalkBoxProcessor.cpp ****     pos      = 0;
  58:src/TalkBoxProcessor.cpp ****     emphasis = 0.0f;
 374              		.loc 1 58 14 view .LVU105
 375 0082 0023     		movs	r3, #0
  54:src/TalkBoxProcessor.cpp ****     dry = 2.0f * p.dry * p.dry;
 376              		.loc 1 54 20 view .LVU106
 377 0084 D7ED016A 		vldr.32	s13, [r7, #4]
  57:src/TalkBoxProcessor.cpp ****     emphasis = 0.0f;
 378              		.loc 1 57 14 view .LVU107
 379 0088 0022     		movs	r2, #0
 380              		.loc 1 58 14 view .LVU108
 381 008a E362     		str	r3, [r4, #44]	@ float
  57:src/TalkBoxProcessor.cpp ****     emphasis = 0.0f;
 382              		.loc 1 57 14 view .LVU109
 383 008c E261     		str	r2, [r4, #28]
  53:src/TalkBoxProcessor.cpp ****     dry = 2.0f * p.dry * p.dry;
 384              		.loc 1 53 16 view .LVU110
 385 008e F6EE007A 		vmov.f32	s15, #5.0e-1
  59:src/TalkBoxProcessor.cpp ****     FX       = 0.0f;
 386              		.loc 1 59 14 view .LVU111
 387 0092 2363     		str	r3, [r4, #48]	@ float
  54:src/TalkBoxProcessor.cpp **** 
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccaSMceU.s 			page 74


 388              		.loc 1 54 16 view .LVU112
 389 0094 36EEA67A 		vadd.f32	s14, s13, s13
  60:src/TalkBoxProcessor.cpp **** 
  61:src/TalkBoxProcessor.cpp ****     // 7) Zero all pre-/de-emphasis filter states
  62:src/TalkBoxProcessor.cpp ****     d0 = d1 = d2 = d3 = d4 = 0.0f;
 390              		.loc 1 62 28 view .LVU113
 391 0098 6364     		str	r3, [r4, #68]	@ float
 392              		.loc 1 62 23 view .LVU114
 393 009a 2364     		str	r3, [r4, #64]	@ float
  53:src/TalkBoxProcessor.cpp ****     dry = 2.0f * p.dry * p.dry;
 394              		.loc 1 53 16 view .LVU115
 395 009c 66EE277A 		vmul.f32	s15, s12, s15
 396              		.loc 1 62 18 view .LVU116
 397 00a0 E363     		str	r3, [r4, #60]	@ float
  54:src/TalkBoxProcessor.cpp **** 
 398              		.loc 1 54 24 view .LVU117
 399 00a2 27EE267A 		vmul.f32	s14, s14, s13
 400              		.loc 1 62 13 view .LVU118
 401 00a6 A363     		str	r3, [r4, #56]	@ float
 402              		.loc 1 62 8 view .LVU119
 403 00a8 6363     		str	r3, [r4, #52]	@ float
  53:src/TalkBoxProcessor.cpp ****     dry = 2.0f * p.dry * p.dry;
 404              		.loc 1 53 24 view .LVU120
 405 00aa 67EE867A 		vmul.f32	s15, s15, s12
  63:src/TalkBoxProcessor.cpp ****     u0 = u1 = u2 = u3 = u4 = 0.0f;
 406              		.loc 1 63 28 view .LVU121
 407 00ae A365     		str	r3, [r4, #88]	@ float
  54:src/TalkBoxProcessor.cpp **** 
 408              		.loc 1 54 9 view .LVU122
 409 00b0 84ED0A7A 		vstr.32	s14, [r4, #40]
 410              		.loc 1 63 23 view .LVU123
 411 00b4 6365     		str	r3, [r4, #84]	@ float
  53:src/TalkBoxProcessor.cpp ****     dry = 2.0f * p.dry * p.dry;
 412              		.loc 1 53 9 view .LVU124
 413 00b6 C4ED097A 		vstr.32	s15, [r4, #36]
  54:src/TalkBoxProcessor.cpp **** 
 414              		.loc 1 54 5 is_stmt 1 view .LVU125
  57:src/TalkBoxProcessor.cpp ****     emphasis = 0.0f;
 415              		.loc 1 57 5 view .LVU126
  58:src/TalkBoxProcessor.cpp ****     FX       = 0.0f;
 416              		.loc 1 58 5 view .LVU127
  59:src/TalkBoxProcessor.cpp **** 
 417              		.loc 1 59 5 view .LVU128
  62:src/TalkBoxProcessor.cpp ****     u0 = u1 = u2 = u3 = u4 = 0.0f;
 418              		.loc 1 62 5 view .LVU129
 419              		.loc 1 63 5 view .LVU130
 420              		.loc 1 63 18 is_stmt 0 view .LVU131
 421 00ba 2365     		str	r3, [r4, #80]	@ float
 422              		.loc 1 63 13 view .LVU132
 423 00bc E364     		str	r3, [r4, #76]	@ float
 424              		.loc 1 63 8 view .LVU133
 425 00be A364     		str	r3, [r4, #72]	@ float
  64:src/TalkBoxProcessor.cpp **** }
 426              		.loc 1 64 1 view .LVU134
 427 00c0 BDEC028B 		vldm	sp!, {d8}
 428              		.cfi_remember_state
 429              		.cfi_restore 80
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccaSMceU.s 			page 75


 430              		.cfi_restore 81
 431              		.cfi_def_cfa_offset 24
 432 00c4 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 433              	.LVL25:
 434              	.L31:
 435              		.cfi_restore_state
 436              	.LBB64:
 437              	.LBB45:
 438              		.loc 2 3678 29 view .LVU135
 439 00c6 B0EE677A 		vmov.f32	s14, s15
 440 00ca 8226     		movs	r6, #130
 441              	.L27:
 442              	.LVL26:
 443              		.loc 2 3678 29 view .LVU136
 444              	.LBE45:
 445              	.LBE64:
  34:src/TalkBoxProcessor.cpp ****     newN = std::min(newN, BUF_MAX);
 446              		.loc 1 34 5 is_stmt 1 view .LVU137
  35:src/TalkBoxProcessor.cpp **** 
 447              		.loc 1 35 5 view .LVU138
  39:src/TalkBoxProcessor.cpp **** 
 448              		.loc 1 39 5 view .LVU139
  39:src/TalkBoxProcessor.cpp **** 
 449              		.loc 1 39 39 is_stmt 0 view .LVU140
 450 00cc 97ED026A 		vldr.32	s12, [r7, #8]
 451 00d0 DFED1C6A 		vldr.32	s13, .L36+12
 452 00d4 DFED1C7A 		vldr.32	s15, .L36+16
 453              	.LBB65:
  42:src/TalkBoxProcessor.cpp ****         N = newN;
 454              		.loc 1 42 5 view .LVU141
 455 00d8 6369     		ldr	r3, [r4, #20]
 456              	.LBE65:
  39:src/TalkBoxProcessor.cpp **** 
 457              		.loc 1 39 39 view .LVU142
 458 00da E6EE267A 		vfma.f32	s15, s12, s13
 459              	.LBB66:
  42:src/TalkBoxProcessor.cpp ****         N = newN;
 460              		.loc 1 42 5 view .LVU143
 461 00de B342     		cmp	r3, r6
 462              	.LBE66:
  39:src/TalkBoxProcessor.cpp **** 
 463              		.loc 1 39 62 view .LVU144
 464 00e0 67EE877A 		vmul.f32	s15, s15, s14
  39:src/TalkBoxProcessor.cpp **** 
 465              		.loc 1 39 9 view .LVU145
 466 00e4 FDEEE77A 		vcvt.s32.f32	s15, s15
 467 00e8 C4ED067A 		vstr.32	s15, [r4, #24]	@ int
  42:src/TalkBoxProcessor.cpp ****         N = newN;
 468              		.loc 1 42 5 is_stmt 1 view .LVU146
 469              	.LBB67:
 470 00ec C7D0     		beq	.L28
 471              	.LBB61:
  43:src/TalkBoxProcessor.cpp ****         float dp    = TWO_PI / static_cast<float>(N);
 472              		.loc 1 43 9 view .LVU147
  44:src/TalkBoxProcessor.cpp ****         float phase = 0.0f;
 473              		.loc 1 44 32 is_stmt 0 view .LVU148
 474 00ee 07EE906A 		vmov	s15, r6	@ int
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccaSMceU.s 			page 76


  44:src/TalkBoxProcessor.cpp ****         float phase = 0.0f;
 475              		.loc 1 44 15 view .LVU149
 476 00f2 9FED167A 		vldr.32	s14, .L36+20
  43:src/TalkBoxProcessor.cpp ****         float dp    = TWO_PI / static_cast<float>(N);
 477              		.loc 1 43 11 view .LVU150
 478 00f6 6661     		str	r6, [r4, #20]
  44:src/TalkBoxProcessor.cpp ****         float phase = 0.0f;
 479              		.loc 1 44 9 is_stmt 1 view .LVU151
  44:src/TalkBoxProcessor.cpp ****         float phase = 0.0f;
 480              		.loc 1 44 32 is_stmt 0 view .LVU152
 481 00f8 F8EEE77A 		vcvt.f32.s32	s15, s15
  44:src/TalkBoxProcessor.cpp ****         float phase = 0.0f;
 482              		.loc 1 44 15 view .LVU153
 483 00fc C7EE278A 		vdiv.f32	s17, s14, s15
 484              	.LVL27:
  45:src/TalkBoxProcessor.cpp ****         for (int32_t i = 0; i < N; ++i) {
 485              		.loc 1 45 9 is_stmt 1 view .LVU154
  46:src/TalkBoxProcessor.cpp ****             window[i] = 0.5f - 0.5f * std::cos(phase);
 486              		.loc 1 46 9 view .LVU155
 487              	.LBB59:
  46:src/TalkBoxProcessor.cpp ****             window[i] = 0.5f - 0.5f * std::cos(phase);
 488              		.loc 1 46 31 view .LVU156
 489              	.L30:
  46:src/TalkBoxProcessor.cpp ****             window[i] = 0.5f - 0.5f * std::cos(phase);
 490              		.loc 1 46 31 is_stmt 0 view .LVU157
 491 0100 2569     		ldr	r5, [r4, #16]
 492              	.LBE59:
  45:src/TalkBoxProcessor.cpp ****         for (int32_t i = 0; i < N; ++i) {
 493              		.loc 1 45 15 view .LVU158
 494 0102 9FED138A 		vldr.32	s16, .L36+24
 495 0106 05EB8606 		add	r6, r5, r6, lsl #2
 496              	.LVL28:
 497              	.LBB60:
  47:src/TalkBoxProcessor.cpp ****             phase    += dp;
 498              		.loc 1 47 13 view .LVU159
 499 010a B7EE000A 		vmov.f32	s0, #1.0e+0
 500 010e 01E0     		b	.L29
 501              	.LVL29:
 502              	.L35:
 503              	.LBB52:
 504              	.LBB53:
 505              		.file 3 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cmath"
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // -*- C++ -*- C forwarding header.
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // Copyright (C) 1997-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccaSMceU.s 			page 77


  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** /** @file include/cmath
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****  *  This is a Standard C++ Library file.  You should @c \#include this file
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****  *  in your programs, rather than any of the @a *.h implementation files.
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****  *
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****  *  This is the C++ version of the Standard C Library header @c math.h,
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****  *  and its contents are (mostly) the same as that header, but are all
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****  *  contained in the namespace @c std (except for names which are defined
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****  *  as macros in C).
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****  */
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** //
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // ISO C++ 14882: 26.5  C library
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** //
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #pragma GCC system_header
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #include <bits/c++config.h>
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #include <bits/cpp_type_traits.h>
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #include <ext/type_traits.h>
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #define _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #include_next <math.h>
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #include <bits/std_abs.h>
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef _GLIBCXX_CMATH
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #define _GLIBCXX_CMATH 1
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** // Get rid of those macros defined in <math.h> in lieu of real functions.
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef div
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef acos
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef asin
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef atan
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef atan2
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef ceil
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef cos
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef cosh
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef exp
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef fabs
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef floor
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef fmod
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef frexp
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef ldexp
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef log
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef log10
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef modf
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef pow
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef sin
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef sinh
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccaSMceU.s 			page 78


  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef sqrt
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef tan
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #undef tanh
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
  77:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** extern "C++"
  78:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** {
  79:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** namespace std _GLIBCXX_VISIBILITY(default)
  80:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** {
  81:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  82:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
  83:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::acos;
  84:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
  85:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  86:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
  87:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   acos(float __x)
  88:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_acosf(__x); }
  89:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
  90:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
  91:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   acos(long double __x)
  92:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_acosl(__x); }
  93:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
  94:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
  95:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
  96:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
  97:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
  98:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
  99:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     acos(_Tp __x)
 100:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_acos(__x); }
 101:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 102:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::asin;
 103:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 104:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 105:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 106:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   asin(float __x)
 107:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_asinf(__x); }
 108:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 109:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 110:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   asin(long double __x)
 111:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_asinl(__x); }
 112:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 113:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 114:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 115:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 116:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 117:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 118:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     asin(_Tp __x)
 119:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_asin(__x); }
 120:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 121:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::atan;
 122:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 123:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 124:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 125:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   atan(float __x)
 126:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_atanf(__x); }
 127:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 128:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 129:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   atan(long double __x)
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccaSMceU.s 			page 79


 130:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_atanl(__x); }
 131:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 132:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 133:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 134:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 135:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 136:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 137:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     atan(_Tp __x)
 138:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_atan(__x); }
 139:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 140:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::atan2;
 141:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 142:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 143:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 144:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   atan2(float __y, float __x)
 145:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_atan2f(__y, __x); }
 146:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 147:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 148:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   atan2(long double __y, long double __x)
 149:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_atan2l(__y, __x); }
 150:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 151:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 152:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp, typename _Up>
 153:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 154:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 155:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     atan2(_Tp __y, _Up __x)
 156:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     {
 157:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 158:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       return atan2(__type(__y), __type(__x));
 159:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     }
 160:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 161:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::ceil;
 162:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 163:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 164:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 165:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   ceil(float __x)
 166:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_ceilf(__x); }
 167:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 168:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 169:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   ceil(long double __x)
 170:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_ceill(__x); }
 171:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 172:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 173:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 174:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 175:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 176:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 177:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     ceil(_Tp __x)
 178:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_ceil(__x); }
 179:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 180:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::cos;
 181:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 182:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 183:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   cos(float __x)
 185:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_cosf(__x); }
 506              		.loc 3 185 26 view .LVU160
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccaSMceU.s 			page 80


 507 0110 FFF7FEFF 		bl	cosf
 508              	.LVL30:
 509              	.L29:
 510              		.loc 3 185 26 view .LVU161
 511              	.LBE53:
 512              	.LBE52:
  47:src/TalkBoxProcessor.cpp ****             phase    += dp;
 513              		.loc 1 47 13 is_stmt 1 view .LVU162
 514              	.LBB56:
 515              	.LBI52:
 184:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_cosf(__x); }
 516              		.loc 3 184 3 view .LVU163
 517              	.LBB54:
 518              		.loc 3 185 5 view .LVU164
 519              		.loc 3 185 5 is_stmt 0 view .LVU165
 520              	.LBE54:
 521              	.LBE56:
  47:src/TalkBoxProcessor.cpp ****             phase    += dp;
 522              		.loc 1 47 30 view .LVU166
 523 0114 F6EE007A 		vmov.f32	s15, #5.0e-1
  48:src/TalkBoxProcessor.cpp ****         }
 524              		.loc 1 48 22 view .LVU167
 525 0118 38EE288A 		vadd.f32	s16, s16, s17
 526              	.LVL31:
  47:src/TalkBoxProcessor.cpp ****             phase    += dp;
 527              		.loc 1 47 30 view .LVU168
 528 011c E0EE677A 		vfms.f32	s15, s0, s15
 529              	.LBB57:
 530              	.LBB55:
 531              		.loc 3 185 26 view .LVU169
 532 0120 B0EE480A 		vmov.f32	s0, s16
 533              	.LBE55:
 534              	.LBE57:
  47:src/TalkBoxProcessor.cpp ****             phase    += dp;
 535              		.loc 1 47 23 view .LVU170
 536 0124 E5EC017A 		vstmia.32	r5!, {s15}
  48:src/TalkBoxProcessor.cpp ****         }
 537              		.loc 1 48 13 is_stmt 1 view .LVU171
 538              	.LVL32:
  46:src/TalkBoxProcessor.cpp ****             window[i] = 0.5f - 0.5f * std::cos(phase);
 539              		.loc 1 46 9 view .LVU172
  46:src/TalkBoxProcessor.cpp ****             window[i] = 0.5f - 0.5f * std::cos(phase);
 540              		.loc 1 46 31 view .LVU173
 541 0128 AE42     		cmp	r6, r5
 542 012a F1D1     		bne	.L35
 543 012c A7E7     		b	.L28
 544              	.LVL33:
 545              	.L32:
  46:src/TalkBoxProcessor.cpp ****             window[i] = 0.5f - 0.5f * std::cos(phase);
 546              		.loc 1 46 31 is_stmt 0 view .LVU174
 547              	.LBE60:
 548              	.LBE61:
 549              	.LBE67:
 550              	.LBB68:
 551              	.LBB46:
 552              		.loc 2 3678 29 view .LVU175
 553 012e B0EE677A 		vmov.f32	s14, s15
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccaSMceU.s 			page 81


 554 0132 40F21F66 		movw	r6, #1567
 555 0136 C9E7     		b	.L27
 556              	.L37:
 557              		.align	2
 558              	.L36:
 559 0138 0000FA45 		.word	1174011904
 560 013c 0080BB47 		.word	1203470336
 561 0140 7EC6853C 		.word	1015400062
 562 0144 17B7D139 		.word	970045207
 563 0148 17B7D138 		.word	953267991
 564 014c DB0FC940 		.word	1086918619
 565 0150 00000000 		.word	0
 566              	.LBE46:
 567              	.LBE68:
 568              		.cfi_endproc
 569              	.LFE3101:
 571              		.section	.text._ZN16TalkBoxProcessor10lpc_durbinEPflS0_S0_,"ax",%progbits
 572              		.align	1
 573              		.p2align 2,,3
 574              		.global	_ZN16TalkBoxProcessor10lpc_durbinEPflS0_S0_
 575              		.syntax unified
 576              		.thumb
 577              		.thumb_func
 578              		.fpu fpv5-d16
 580              	_ZN16TalkBoxProcessor10lpc_durbinEPflS0_S0_:
 581              	.LVL34:
 582              	.LFB3106:
  65:src/TalkBoxProcessor.cpp **** 
  66:src/TalkBoxProcessor.cpp **** void TalkBoxProcessor::processBlock(const float* modIn,
  67:src/TalkBoxProcessor.cpp ****                                     const float* carIn,
  68:src/TalkBoxProcessor.cpp ****                                     float* outL,
  69:src/TalkBoxProcessor.cpp ****                                     float* outR,
  70:src/TalkBoxProcessor.cpp ****                                     int32_t frames)
  71:src/TalkBoxProcessor.cpp **** {
  72:src/TalkBoxProcessor.cpp ****     // local copies of state
  73:src/TalkBoxProcessor.cpp ****     int32_t   p0    = pos;
  74:src/TalkBoxProcessor.cpp ****     int32_t   p1    = (pos + N/2) % N;
  75:src/TalkBoxProcessor.cpp ****     float e     = emphasis;
  76:src/TalkBoxProcessor.cpp ****     float fx    = FX;
  77:src/TalkBoxProcessor.cpp ****     const float h0 = 0.3f;
  78:src/TalkBoxProcessor.cpp ****     const float h1 = 0.77f;
  79:src/TalkBoxProcessor.cpp **** 
  80:src/TalkBoxProcessor.cpp ****     for (int32_t n = 0; n < frames; ++n)
  81:src/TalkBoxProcessor.cpp ****     {
  82:src/TalkBoxProcessor.cpp ****         // 1) Read inputs
  83:src/TalkBoxProcessor.cpp ****         float o = modIn[n];   // modulator
  84:src/TalkBoxProcessor.cpp ****         float x = carIn[n];   // carrier
  85:src/TalkBoxProcessor.cpp ****         float dr = o;         // dry path copy
  86:src/TalkBoxProcessor.cpp **** 
  87:src/TalkBoxProcessor.cpp ****         // 2) Pre-filter the carrier via two all-pass sections
  88:src/TalkBoxProcessor.cpp ****         {
  89:src/TalkBoxProcessor.cpp ****             float p = d0 + h0 * x;
  90:src/TalkBoxProcessor.cpp ****             d0 = d1;  d1 = x - h0 * p;
  91:src/TalkBoxProcessor.cpp ****             float q = d2 + h1 * d4;
  92:src/TalkBoxProcessor.cpp ****             d2 = d3;  d3 = d4 - h1 * q;
  93:src/TalkBoxProcessor.cpp ****             d4 = x;
  94:src/TalkBoxProcessor.cpp ****             x = p + q;
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccaSMceU.s 			page 82


  95:src/TalkBoxProcessor.cpp ****         }
  96:src/TalkBoxProcessor.cpp **** 
  97:src/TalkBoxProcessor.cpp ****         // 3) Every other sample, push through the window & run LPC
  98:src/TalkBoxProcessor.cpp ****         if (K++)
  99:src/TalkBoxProcessor.cpp ****         {
 100:src/TalkBoxProcessor.cpp ****             K = 0;
 101:src/TalkBoxProcessor.cpp **** 
 102:src/TalkBoxProcessor.cpp ****             // a) capture the filtered carrier into both overlap buffers
 103:src/TalkBoxProcessor.cpp ****             car0[p0] = car1[p1] = x;
 104:src/TalkBoxProcessor.cpp **** 
 105:src/TalkBoxProcessor.cpp ****             // b) Pre-emphasis on modulator
 106:src/TalkBoxProcessor.cpp ****             x = o - e;
 107:src/TalkBoxProcessor.cpp ****             e = o;
 108:src/TalkBoxProcessor.cpp **** 
 109:src/TalkBoxProcessor.cpp ****             // c) Window & overlap-add from buf0
 110:src/TalkBoxProcessor.cpp ****             float w = window[p0];
 111:src/TalkBoxProcessor.cpp ****             fx = buf0[p0] * w;
 112:src/TalkBoxProcessor.cpp ****             buf0[p0] = x * w;
 113:src/TalkBoxProcessor.cpp ****             if (++p0 >= N)
 114:src/TalkBoxProcessor.cpp ****             {
 115:src/TalkBoxProcessor.cpp ****                 lpc(buf0, car0, N, O);
 116:src/TalkBoxProcessor.cpp ****                 p0 = 0;
 117:src/TalkBoxProcessor.cpp ****             }
 118:src/TalkBoxProcessor.cpp **** 
 119:src/TalkBoxProcessor.cpp ****             // d) Window & overlap-add from buf1
 120:src/TalkBoxProcessor.cpp ****             float w2 = 1.0f - w;
 121:src/TalkBoxProcessor.cpp ****             fx += buf1[p1] * w2;
 122:src/TalkBoxProcessor.cpp ****             buf1[p1] = x * w2;
 123:src/TalkBoxProcessor.cpp ****             if (++p1 >= N)
 124:src/TalkBoxProcessor.cpp ****             {
 125:src/TalkBoxProcessor.cpp ****                 lpc(buf1, car1, N, O);
 126:src/TalkBoxProcessor.cpp ****                 p1 = 0;
 127:src/TalkBoxProcessor.cpp ****             }
 128:src/TalkBoxProcessor.cpp ****         }
 129:src/TalkBoxProcessor.cpp **** 
 130:src/TalkBoxProcessor.cpp ****         // 4) Post-filter the combined LPC output via two all-pass sections
 131:src/TalkBoxProcessor.cpp ****         {
 132:src/TalkBoxProcessor.cpp ****             float p = u0 + h0 * fx;
 133:src/TalkBoxProcessor.cpp ****             u0 = u1;  u1 = fx - h0 * p;
 134:src/TalkBoxProcessor.cpp ****             float q = u2 + h1 * u4;
 135:src/TalkBoxProcessor.cpp ****             u2 = u3;  u3 = u4 - h1 * q;
 136:src/TalkBoxProcessor.cpp ****             u4 = fx;
 137:src/TalkBoxProcessor.cpp ****             x = p + q;
 138:src/TalkBoxProcessor.cpp ****         }
 139:src/TalkBoxProcessor.cpp **** 
 140:src/TalkBoxProcessor.cpp ****         // 5) Mix wet (vocoder) + dry (voice)
 141:src/TalkBoxProcessor.cpp ****         float out = wet * x + dry * dr;
 142:src/TalkBoxProcessor.cpp ****         outL[n] = out;
 143:src/TalkBoxProcessor.cpp ****         outR[n] = out;
 144:src/TalkBoxProcessor.cpp ****     }
 145:src/TalkBoxProcessor.cpp **** 
 146:src/TalkBoxProcessor.cpp ****     // store state back to members
 147:src/TalkBoxProcessor.cpp ****     pos       = p0;
 148:src/TalkBoxProcessor.cpp ****     emphasis  = e;
 149:src/TalkBoxProcessor.cpp ****     FX        = fx;
 150:src/TalkBoxProcessor.cpp **** 
 151:src/TalkBoxProcessor.cpp ****     // At the end of your processBlock
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccaSMceU.s 			page 83


 152:src/TalkBoxProcessor.cpp ****     float den = 1.0e-10f;
 153:src/TalkBoxProcessor.cpp ****     if (std::abs(d0) < den) d0 = 0.0f;
 154:src/TalkBoxProcessor.cpp ****     if (std::abs(d1) < den) d1 = 0.0f;
 155:src/TalkBoxProcessor.cpp ****     if (std::abs(d2) < den) d2 = 0.0f;
 156:src/TalkBoxProcessor.cpp ****     if (std::abs(d3) < den) d3 = 0.0f;
 157:src/TalkBoxProcessor.cpp ****     // d4 is an input snapshot, not a decaying state in the same way,
 158:src/TalkBoxProcessor.cpp ****     // but the original doesn't clear it.
 159:src/TalkBoxProcessor.cpp ****     // The original only clears d0,d1,d2,d3 and u0,u1,u2,u3.
 160:src/TalkBoxProcessor.cpp ****     if (std::abs(u0) < den) u0 = 0.0f;
 161:src/TalkBoxProcessor.cpp ****     if (std::abs(u1) < den) u1 = 0.0f;
 162:src/TalkBoxProcessor.cpp ****     if (std::abs(u2) < den) u2 = 0.0f;
 163:src/TalkBoxProcessor.cpp ****     if (std::abs(u3) < den) u3 = 0.0f;
 164:src/TalkBoxProcessor.cpp **** }
 165:src/TalkBoxProcessor.cpp **** 
 166:src/TalkBoxProcessor.cpp **** 
 167:src/TalkBoxProcessor.cpp **** void TalkBoxProcessor::lpc(float* buf, float* car, int32_t n, int32_t o)
 168:src/TalkBoxProcessor.cpp **** {
 169:src/TalkBoxProcessor.cpp ****     float z[ORD_MAX], r[ORD_MAX], k[ORD_MAX], G, x;
 170:src/TalkBoxProcessor.cpp ****     int32_t i, j, nn = n;
 171:src/TalkBoxProcessor.cpp **** 
 172:src/TalkBoxProcessor.cpp ****     r[0] = 0.0f;  // ensure it's initialized just to avoid the warning when compiling
 173:src/TalkBoxProcessor.cpp ****     for (j = 0; j <= o; j++, nn--)  //buf[] is already emphasized and windowed
 174:src/TalkBoxProcessor.cpp ****     {
 175:src/TalkBoxProcessor.cpp ****         z[j] = r[j] = 0.0f;
 176:src/TalkBoxProcessor.cpp ****         for (i = 0; i < nn; i++) r[j] += buf[i] * buf[i + j]; //autocorrelation
 177:src/TalkBoxProcessor.cpp ****     }
 178:src/TalkBoxProcessor.cpp ****     r[0] *= 1.001f;  //stability fix
 179:src/TalkBoxProcessor.cpp **** 
 180:src/TalkBoxProcessor.cpp ****     float min = 0.00001f;
 181:src/TalkBoxProcessor.cpp ****     if (r[0] < min) { for (i = 0; i < n; i++) buf[i] = 0.0f; return; }
 182:src/TalkBoxProcessor.cpp **** 
 183:src/TalkBoxProcessor.cpp ****     lpc_durbin(r, o, k, &G);  //calc reflection coeffs
 184:src/TalkBoxProcessor.cpp **** 
 185:src/TalkBoxProcessor.cpp ****     for (i = 0; i <= o; i++)
 186:src/TalkBoxProcessor.cpp ****     {
 187:src/TalkBoxProcessor.cpp ****         if (k[i] > 0.995f) k[i] = 0.995f; else if (k[i] < -0.995f) k[i] = -.995f;
 188:src/TalkBoxProcessor.cpp ****     }
 189:src/TalkBoxProcessor.cpp **** 
 190:src/TalkBoxProcessor.cpp ****     for (i = 0; i < n; i++)
 191:src/TalkBoxProcessor.cpp ****     {
 192:src/TalkBoxProcessor.cpp ****         x = G * car[i];
 193:src/TalkBoxProcessor.cpp ****         for (j = o; j > 0; j--)  //lattice filter
 194:src/TalkBoxProcessor.cpp ****         {
 195:src/TalkBoxProcessor.cpp ****             x -= k[j] * z[j - 1];
 196:src/TalkBoxProcessor.cpp ****             z[j] = z[j - 1] + k[j] * x;
 197:src/TalkBoxProcessor.cpp ****         }
 198:src/TalkBoxProcessor.cpp ****         buf[i] = z[0] = x;  //output buf[] will be windowed elsewhere
 199:src/TalkBoxProcessor.cpp ****     }
 200:src/TalkBoxProcessor.cpp **** }
 201:src/TalkBoxProcessor.cpp **** 
 202:src/TalkBoxProcessor.cpp **** 
 203:src/TalkBoxProcessor.cpp **** void TalkBoxProcessor::lpc_durbin(float* r, int32_t p, float* k, float* g)
 204:src/TalkBoxProcessor.cpp **** {
 583              		.loc 1 204 1 is_stmt 1 view -0
 584              		.cfi_startproc
 585              		@ args = 4, pretend = 0, frame = 408
 586              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccaSMceU.s 			page 84


 205:src/TalkBoxProcessor.cpp ****     int32_t i, j;
 587              		.loc 1 205 5 view .LVU177
 206:src/TalkBoxProcessor.cpp ****     float a[ORD_MAX], at[ORD_MAX], e = r[0];
 588              		.loc 1 206 5 view .LVU178
 204:src/TalkBoxProcessor.cpp ****     int32_t i, j;
 589              		.loc 1 204 1 is_stmt 0 view .LVU179
 590 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 591              		.cfi_def_cfa_offset 36
 592              		.cfi_offset 4, -36
 593              		.cfi_offset 5, -32
 594              		.cfi_offset 6, -28
 595              		.cfi_offset 7, -24
 596              		.cfi_offset 8, -20
 597              		.cfi_offset 9, -16
 598              		.cfi_offset 10, -12
 599              		.cfi_offset 11, -8
 600              		.cfi_offset 14, -4
 207:src/TalkBoxProcessor.cpp **** 
 208:src/TalkBoxProcessor.cpp ****     for (i = 0; i <= p; i++) a[i] = at[i] = 0.0f; //probably don't need to clear at[] or k[]
 601              		.loc 1 208 19 view .LVU180
 602 0004 B2F1000A 		subs	r10, r2, #0
 204:src/TalkBoxProcessor.cpp ****     int32_t i, j;
 603              		.loc 1 204 1 view .LVU181
 604 0008 2DED028B 		vpush.64	{d8}
 605              		.cfi_def_cfa_offset 44
 606              		.cfi_offset 80, -44
 607              		.cfi_offset 81, -40
 206:src/TalkBoxProcessor.cpp **** 
 608              		.loc 1 206 36 view .LVU182
 609 000c D1ED008A 		vldr.32	s17, [r1]
 610              	.LVL35:
 611              		.loc 1 208 5 is_stmt 1 view .LVU183
 612              		.loc 1 208 19 view .LVU184
 204:src/TalkBoxProcessor.cpp ****     int32_t i, j;
 613              		.loc 1 204 1 is_stmt 0 view .LVU185
 614 0010 E7B0     		sub	sp, sp, #412
 615              		.cfi_def_cfa_offset 456
 616              		.loc 1 208 19 view .LVU186
 617 0012 68DB     		blt	.L39
 618              		.loc 1 208 43 view .LVU187
 619 0014 0AF10102 		add	r2, r10, #1
 620              	.LVL36:
 621              		.loc 1 208 43 view .LVU188
 622 0018 8946     		mov	r9, r1
 623 001a 34A8     		add	r0, sp, #208
 624              	.LVL37:
 625              		.loc 1 208 43 view .LVU189
 626 001c 0021     		movs	r1, #0
 627              	.LVL38:
 628              		.loc 1 208 43 view .LVU190
 629 001e 9200     		lsls	r2, r2, #2
 630 0020 1D46     		mov	r5, r3
 631 0022 0192     		str	r2, [sp, #4]
 632 0024 FFF7FEFF 		bl	memset
 633              	.LVL39:
 634              		.loc 1 208 35 view .LVU191
 635 0028 019A     		ldr	r2, [sp, #4]
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccaSMceU.s 			page 85


 636 002a 0021     		movs	r1, #0
 637 002c 02A8     		add	r0, sp, #8
 638 002e FFF7FEFF 		bl	memset
 639              	.LVL40:
 209:src/TalkBoxProcessor.cpp **** 
 210:src/TalkBoxProcessor.cpp ****     for (i = 1; i <= p; i++)
 640              		.loc 1 210 19 is_stmt 1 view .LVU192
 641 0032 BAF1000F 		cmp	r10, #0
 642 0036 56D0     		beq	.L39
 211:src/TalkBoxProcessor.cpp ****     {
 212:src/TalkBoxProcessor.cpp ****         k[i] = -r[i];
 643              		.loc 1 212 9 view .LVU193
 644              		.loc 1 212 16 is_stmt 0 view .LVU194
 645 0038 D9ED017A 		vldr.32	s15, [r9, #4]
 646 003c 35AB     		add	r3, sp, #212
 647 003e 09F10804 		add	r4, r9, #8
 648 0042 0835     		adds	r5, r5, #8
 649              	.LVL41:
 650              		.loc 1 212 16 view .LVU195
 651 0044 F1EE677A 		vneg.f32	s15, s15
 210:src/TalkBoxProcessor.cpp ****     {
 652              		.loc 1 210 12 view .LVU196
 653 0048 0127     		movs	r7, #1
 654              		.loc 1 212 14 view .LVU197
 655 004a 9846     		mov	r8, r3
 656 004c 0DF10C0B 		add	fp, sp, #12
 657 0050 45ED017A 		vstr.32	s15, [r5, #-4]
 213:src/TalkBoxProcessor.cpp **** 
 214:src/TalkBoxProcessor.cpp ****         for (j = 1; j < i; j++)
 658              		.loc 1 214 9 is_stmt 1 view .LVU198
 659              	.LVL42:
 660              		.loc 1 214 23 view .LVU199
 661              	.L42:
 215:src/TalkBoxProcessor.cpp ****         {
 216:src/TalkBoxProcessor.cpp ****             at[j] = a[j];
 217:src/TalkBoxProcessor.cpp ****             k[i] -= a[j] * r[i - j];
 218:src/TalkBoxProcessor.cpp ****         }
 219:src/TalkBoxProcessor.cpp ****         if (fabs(e) < 1.0e-20f) { e = 0.0f;  break; }
 662              		.loc 1 219 9 view .LVU200
 663              	.LBB69:
 664              	.LBI69:
 186:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 187:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 188:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   cos(long double __x)
 189:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_cosl(__x); }
 190:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 191:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 192:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 193:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 194:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 195:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 196:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     cos(_Tp __x)
 197:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_cos(__x); }
 198:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 199:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::cosh;
 200:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 201:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccaSMceU.s 			page 86


 202:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 203:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   cosh(float __x)
 204:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_coshf(__x); }
 205:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 206:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 207:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   cosh(long double __x)
 208:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_coshl(__x); }
 209:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 210:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 211:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 212:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 213:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 214:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 215:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     cosh(_Tp __x)
 216:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_cosh(__x); }
 217:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 218:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::exp;
 219:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 220:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 221:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 222:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   exp(float __x)
 223:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_expf(__x); }
 224:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 225:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 226:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   exp(long double __x)
 227:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_expl(__x); }
 228:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 229:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 230:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 231:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 232:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 233:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 234:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     exp(_Tp __x)
 235:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_exp(__x); }
 236:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 237:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::fabs;
 238:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 239:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 240:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 241:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   fabs(float __x)
 665              		.loc 3 241 3 view .LVU201
 666              	.LBB70:
 242:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_fabsf(__x); }
 667              		.loc 3 242 5 view .LVU202
 668              		.loc 3 242 31 is_stmt 0 view .LVU203
 669 0054 F0EEE87A 		vabs.f32	s15, s17
 670              	.LBE70:
 671              	.LBE69:
 672              		.loc 1 219 9 view .LVU204
 673 0058 9FED327A 		vldr.32	s14, .L63
 674 005c F4EEC77A 		vcmpe.f32	s15, s14
 675 0060 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 676 0064 55D4     		bmi	.L44
 220:src/TalkBoxProcessor.cpp ****         k[i] /= e;
 677              		.loc 1 220 9 is_stmt 1 view .LVU205
 678              		.loc 1 220 14 is_stmt 0 view .LVU206
 679 0066 55ED017A 		vldr.32	s15, [r5, #-4]
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccaSMceU.s 			page 87


 221:src/TalkBoxProcessor.cpp **** 
 222:src/TalkBoxProcessor.cpp ****         a[i] = k[i];
 223:src/TalkBoxProcessor.cpp ****         for (j = 1; j < i; j++) a[j] = at[j] + k[i] * at[i - j];
 680              		.loc 1 223 23 view .LVU207
 681 006a 012F     		cmp	r7, #1
 220:src/TalkBoxProcessor.cpp ****         k[i] /= e;
 682              		.loc 1 220 14 view .LVU208
 683 006c C7EEA86A 		vdiv.f32	s13, s15, s17
 684 0070 45ED016A 		vstr.32	s13, [r5, #-4]
 222:src/TalkBoxProcessor.cpp ****         for (j = 1; j < i; j++) a[j] = at[j] + k[i] * at[i - j];
 685              		.loc 1 222 9 is_stmt 1 view .LVU209
 222:src/TalkBoxProcessor.cpp ****         for (j = 1; j < i; j++) a[j] = at[j] + k[i] * at[i - j];
 686              		.loc 1 222 14 is_stmt 0 view .LVU210
 687 0074 EBEC016A 		vstmia.32	fp!, {s13}
 688              		.loc 1 223 9 is_stmt 1 view .LVU211
 689              	.LVL43:
 690              		.loc 1 223 23 view .LVU212
 691 0078 0CD0     		beq	.L47
 692 007a 03A8     		add	r0, sp, #12
 693 007c 4246     		mov	r2, r8
 694 007e 1946     		mov	r1, r3
 695              	.LVL44:
 696              	.L48:
 697              		.loc 1 223 33 discriminator 2 view .LVU213
 698              		.loc 1 223 46 is_stmt 0 discriminator 2 view .LVU214
 699 0080 32ED017A 		vldmdb.32	r2!, {s14}
 700              		.loc 1 223 44 discriminator 2 view .LVU215
 701 0084 F1EC017A 		vldmia.32	r1!, {s15}
 702              		.loc 1 223 23 discriminator 2 view .LVU216
 703 0088 9A42     		cmp	r2, r3
 704              		.loc 1 223 46 discriminator 2 view .LVU217
 705 008a E6EE877A 		vfma.f32	s15, s13, s14
 706              		.loc 1 223 38 discriminator 2 view .LVU218
 707 008e E0EC017A 		vstmia.32	r0!, {s15}
 708              		.loc 1 223 9 is_stmt 1 discriminator 2 view .LVU219
 709              		.loc 1 223 23 discriminator 2 view .LVU220
 710 0092 F5D1     		bne	.L48
 711              	.L47:
 224:src/TalkBoxProcessor.cpp **** 
 225:src/TalkBoxProcessor.cpp ****         e *= 1.0f - k[i] * k[i];
 712              		.loc 1 225 9 view .LVU221
 713              		.loc 1 225 19 is_stmt 0 view .LVU222
 714 0094 F7EE007A 		vmov.f32	s15, #1.0e+0
 210:src/TalkBoxProcessor.cpp ****     {
 715              		.loc 1 210 5 view .LVU223
 716 0098 0137     		adds	r7, r7, #1
 210:src/TalkBoxProcessor.cpp ****     {
 717              		.loc 1 210 19 view .LVU224
 718 009a BA45     		cmp	r10, r7
 719              		.loc 1 225 19 view .LVU225
 720 009c E6EEE67A 		vfms.f32	s15, s13, s13
 721              		.loc 1 225 11 view .LVU226
 722 00a0 68EEA78A 		vmul.f32	s17, s17, s15
 723              	.LVL45:
 210:src/TalkBoxProcessor.cpp ****     {
 724              		.loc 1 210 5 is_stmt 1 view .LVU227
 210:src/TalkBoxProcessor.cpp ****     {
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccaSMceU.s 			page 88


 725              		.loc 1 210 19 view .LVU228
 726 00a4 1FDB     		blt	.L39
 212:src/TalkBoxProcessor.cpp **** 
 727              		.loc 1 212 9 view .LVU229
 728 00a6 2646     		mov	r6, r4
 216:src/TalkBoxProcessor.cpp ****             k[i] -= a[j] * r[i - j];
 729              		.loc 1 216 19 is_stmt 0 view .LVU230
 730 00a8 03A9     		add	r1, sp, #12
 731 00aa 1846     		mov	r0, r3
 212:src/TalkBoxProcessor.cpp **** 
 732              		.loc 1 212 16 view .LVU231
 733 00ac B6EC018A 		vldmia.32	r6!, {s16}
 734 00b0 B1EE488A 		vneg.f32	s16, s16
 216:src/TalkBoxProcessor.cpp ****             k[i] -= a[j] * r[i - j];
 735              		.loc 1 216 19 view .LVU232
 736 00b4 A6EB0902 		sub	r2, r6, r9
 737 00b8 083A     		subs	r2, r2, #8
 212:src/TalkBoxProcessor.cpp **** 
 738              		.loc 1 212 14 view .LVU233
 739 00ba A5EC018A 		vstmia.32	r5!, {s16}
 214:src/TalkBoxProcessor.cpp ****         {
 740              		.loc 1 214 9 is_stmt 1 view .LVU234
 741              	.LVL46:
 214:src/TalkBoxProcessor.cpp ****         {
 742              		.loc 1 214 23 view .LVU235
 216:src/TalkBoxProcessor.cpp ****             k[i] -= a[j] * r[i - j];
 743              		.loc 1 216 19 is_stmt 0 view .LVU236
 744 00be FFF7FEFF 		bl	memcpy
 745              	.LVL47:
 746 00c2 09F10401 		add	r1, r9, #4
 747 00c6 0346     		mov	r3, r0
 748 00c8 03AA     		add	r2, sp, #12
 749              	.LVL48:
 750              	.L41:
 216:src/TalkBoxProcessor.cpp ****             k[i] -= a[j] * r[i - j];
 751              		.loc 1 216 13 is_stmt 1 discriminator 2 view .LVU237
 217:src/TalkBoxProcessor.cpp ****         }
 752              		.loc 1 217 18 is_stmt 0 discriminator 2 view .LVU238
 753 00ca 74ED017A 		vldmdb.32	r4!, {s15}
 216:src/TalkBoxProcessor.cpp ****             k[i] -= a[j] * r[i - j];
 754              		.loc 1 216 24 discriminator 2 view .LVU239
 755 00ce B2EC017A 		vldmia.32	r2!, {s14}
 217:src/TalkBoxProcessor.cpp ****         }
 756              		.loc 1 217 13 is_stmt 1 discriminator 2 view .LVU240
 214:src/TalkBoxProcessor.cpp ****         {
 757              		.loc 1 214 23 is_stmt 0 discriminator 2 view .LVU241
 758 00d2 A142     		cmp	r1, r4
 217:src/TalkBoxProcessor.cpp ****         }
 759              		.loc 1 217 18 discriminator 2 view .LVU242
 760 00d4 A7EE678A 		vfms.f32	s16, s14, s15
 761 00d8 05ED018A 		vstr.32	s16, [r5, #-4]
 214:src/TalkBoxProcessor.cpp ****         {
 762              		.loc 1 214 9 is_stmt 1 discriminator 2 view .LVU243
 214:src/TalkBoxProcessor.cpp ****         {
 763              		.loc 1 214 23 discriminator 2 view .LVU244
 764 00dc F5D1     		bne	.L41
 765 00de 08F10408 		add	r8, r8, #4
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccaSMceU.s 			page 89


 214:src/TalkBoxProcessor.cpp ****         {
 766              		.loc 1 214 23 is_stmt 0 view .LVU245
 767 00e2 3446     		mov	r4, r6
 768 00e4 B6E7     		b	.L42
 769              	.LVL49:
 770              	.L39:
 226:src/TalkBoxProcessor.cpp ****     }
 227:src/TalkBoxProcessor.cpp **** 
 228:src/TalkBoxProcessor.cpp ****     if (e < 1.0e-20f) e = 0.0f;
 771              		.loc 1 228 5 is_stmt 1 view .LVU246
 772 00e6 DFED0F7A 		vldr.32	s15, .L63
 773 00ea F4EEE78A 		vcmpe.f32	s17, s15
 774 00ee F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 775 00f2 0ED4     		bmi	.L44
 229:src/TalkBoxProcessor.cpp ****     *g = (float)sqrt(e);
 776              		.loc 1 229 5 view .LVU247
 777              	.LVL50:
 778              	.LBB71:
 779              	.LBI71:
 243:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 244:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 245:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   fabs(long double __x)
 246:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_fabsl(__x); }
 247:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 248:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 249:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 250:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 251:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 252:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 253:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     fabs(_Tp __x)
 254:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_fabs(__x); }
 255:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 256:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::floor;
 257:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 258:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 259:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 260:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   floor(float __x)
 261:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_floorf(__x); }
 262:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 263:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 264:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   floor(long double __x)
 265:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_floorl(__x); }
 266:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 267:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 268:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 269:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 270:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 271:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 272:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     floor(_Tp __x)
 273:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_floor(__x); }
 274:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 275:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::fmod;
 276:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 277:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 278:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 279:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   fmod(float __x, float __y)
 280:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_fmodf(__x, __y); }
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccaSMceU.s 			page 90


 281:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 282:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 283:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   fmod(long double __x, long double __y)
 284:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_fmodl(__x, __y); }
 285:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 286:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 287:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp, typename _Up>
 288:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 289:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 290:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     fmod(_Tp __x, _Up __y)
 291:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     {
 292:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 293:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       return fmod(__type(__x), __type(__y));
 294:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     }
 295:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 296:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::frexp;
 297:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 298:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 299:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline float
 300:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   frexp(float __x, int* __exp)
 301:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_frexpf(__x, __exp); }
 302:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 303:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline long double
 304:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   frexp(long double __x, int* __exp)
 305:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_frexpl(__x, __exp); }
 306:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 307:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 308:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 309:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 310:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 311:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 312:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     frexp(_Tp __x, int* __exp)
 313:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_frexp(__x, __exp); }
 314:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 315:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::ldexp;
 316:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 317:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 318:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 319:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   ldexp(float __x, int __exp)
 320:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_ldexpf(__x, __exp); }
 321:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 322:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 323:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   ldexp(long double __x, int __exp)
 324:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_ldexpl(__x, __exp); }
 325:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 326:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 327:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 328:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 329:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 330:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 331:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     ldexp(_Tp __x, int __exp)
 332:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_ldexp(__x, __exp); }
 333:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 334:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::log;
 335:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 336:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 337:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccaSMceU.s 			page 91


 338:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   log(float __x)
 339:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_logf(__x); }
 340:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 341:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 342:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   log(long double __x)
 343:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_logl(__x); }
 344:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 345:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 346:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 347:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 348:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 349:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 350:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     log(_Tp __x)
 351:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_log(__x); }
 352:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 353:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::log10;
 354:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 355:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 356:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 357:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   log10(float __x)
 358:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_log10f(__x); }
 359:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 360:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 361:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   log10(long double __x)
 362:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_log10l(__x); }
 363:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 364:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 365:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 366:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 367:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 368:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 369:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     log10(_Tp __x)
 370:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_log10(__x); }
 371:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 372:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::modf;
 373:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 374:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 375:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline float
 376:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   modf(float __x, float* __iptr)
 377:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_modff(__x, __iptr); }
 378:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 379:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline long double
 380:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   modf(long double __x, long double* __iptr)
 381:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_modfl(__x, __iptr); }
 382:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 383:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 384:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::pow;
 385:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 386:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 387:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 388:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   pow(float __x, float __y)
 389:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_powf(__x, __y); }
 390:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 391:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 392:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   pow(long double __x, long double __y)
 393:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_powl(__x, __y); }
 394:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccaSMceU.s 			page 92


 395:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #if __cplusplus < 201103L
 396:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 397:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   // DR 550. What should the return type of pow(float,int) be?
 398:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline double
 399:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   pow(double __x, int __i)
 400:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_powi(__x, __i); }
 401:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 402:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline float
 403:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   pow(float __x, int __n)
 404:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_powif(__x, __n); }
 405:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 406:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline long double
 407:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   pow(long double __x, int __n)
 408:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_powil(__x, __n); }
 409:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 410:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 411:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 412:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp, typename _Up>
 413:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 414:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 415:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     pow(_Tp __x, _Up __y)
 416:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     {
 417:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 418:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****       return pow(__type(__x), __type(__y));
 419:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     }
 420:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 421:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::sin;
 422:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 423:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 424:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 425:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   sin(float __x)
 426:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_sinf(__x); }
 427:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 428:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 429:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   sin(long double __x)
 430:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_sinl(__x); }
 431:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 432:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 433:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 434:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 435:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 436:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 437:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     sin(_Tp __x)
 438:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_sin(__x); }
 439:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 440:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::sinh;
 441:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 442:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 443:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 444:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   sinh(float __x)
 445:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_sinhf(__x); }
 446:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 447:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR long double
 448:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   sinh(long double __x)
 449:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_sinhl(__x); }
 450:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #endif
 451:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccaSMceU.s 			page 93


 452:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   template<typename _Tp>
 453:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     inline _GLIBCXX_CONSTEXPR
 454:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 455:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****                                     double>::__type
 456:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     sinh(_Tp __x)
 457:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****     { return __builtin_sinh(__x); }
 458:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 459:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   using ::sqrt;
 460:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** 
 461:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 462:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   inline _GLIBCXX_CONSTEXPR float
 463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   sqrt(float __x)
 780              		.loc 3 463 3 view .LVU248
 781              	.LBB72:
 464:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_sqrtf(__x); }
 782              		.loc 3 464 5 view .LVU249
 783 00f4 F5EE408A 		vcmp.f32	s17, #0
 784 00f8 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 785 00fc 0CD4     		bmi	.L60
 786              	.LVL51:
 787              	.L52:
 788              		.loc 3 464 27 is_stmt 0 view .LVU250
 789 00fe B1EEE80A 		vsqrt.f32	s0, s17
 790              	.L51:
 791              	.LVL52:
 792              		.loc 3 464 27 view .LVU251
 793              	.LBE72:
 794              	.LBE71:
 795              		.loc 1 229 8 view .LVU252
 796 0102 729B     		ldr	r3, [sp, #456]
 797 0104 83ED000A 		vstr.32	s0, [r3]
 230:src/TalkBoxProcessor.cpp **** }
 798              		.loc 1 230 1 view .LVU253
 799 0108 67B0     		add	sp, sp, #412
 800              		.cfi_remember_state
 801              		.cfi_def_cfa_offset 44
 802              		@ sp needed
 803 010a BDEC028B 		vldm	sp!, {d8}
 804              		.cfi_restore 80
 805              		.cfi_restore 81
 806              		.cfi_def_cfa_offset 36
 807 010e BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 808              	.LVL53:
 809              	.L44:
 810              		.cfi_restore_state
 229:src/TalkBoxProcessor.cpp **** }
 811              		.loc 1 229 5 is_stmt 1 view .LVU254
 812              	.LBB75:
 463:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\cmath ****   { return __builtin_sqrtf(__x); }
 813              		.loc 3 463 3 view .LVU255
 814              	.LBB73:
 815              		.loc 3 464 5 view .LVU256
 816              	.LBE73:
 817              	.LBE75:
 223:src/TalkBoxProcessor.cpp **** 
 818              		.loc 1 223 23 is_stmt 0 view .LVU257
 819 0112 DFED058A 		vldr.32	s17, .L63+4
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccaSMceU.s 			page 94


 820 0116 F2E7     		b	.L52
 821              	.LVL54:
 822              	.L60:
 823              	.LBB76:
 824              	.LBB74:
 825              		.loc 3 464 27 view .LVU258
 826 0118 B0EE680A 		vmov.f32	s0, s17
 827 011c FFF7FEFF 		bl	sqrtf
 828              	.LVL55:
 829 0120 EFE7     		b	.L51
 830              	.L64:
 831 0122 00BF     		.align	2
 832              	.L63:
 833 0124 08E53C1E 		.word	507307272
 834 0128 00000000 		.word	0
 835              	.LBE74:
 836              	.LBE76:
 837              		.cfi_endproc
 838              	.LFE3106:
 840              		.section	.text._ZN16TalkBoxProcessor3lpcEPfS0_ll,"ax",%progbits
 841              		.align	1
 842              		.p2align 2,,3
 843              		.global	_ZN16TalkBoxProcessor3lpcEPfS0_ll
 844              		.syntax unified
 845              		.thumb
 846              		.thumb_func
 847              		.fpu fpv5-d16
 849              	_ZN16TalkBoxProcessor3lpcEPfS0_ll:
 850              	.LVL56:
 851              	.LFB3105:
 168:src/TalkBoxProcessor.cpp ****     float z[ORD_MAX], r[ORD_MAX], k[ORD_MAX], G, x;
 852              		.loc 1 168 1 is_stmt 1 view -0
 853              		.cfi_startproc
 854              		@ args = 4, pretend = 0, frame = 616
 855              		@ frame_needed = 0, uses_anonymous_args = 0
 169:src/TalkBoxProcessor.cpp ****     int32_t i, j, nn = n;
 856              		.loc 1 169 5 view .LVU260
 170:src/TalkBoxProcessor.cpp **** 
 857              		.loc 1 170 5 view .LVU261
 168:src/TalkBoxProcessor.cpp ****     float z[ORD_MAX], r[ORD_MAX], k[ORD_MAX], G, x;
 858              		.loc 1 168 1 is_stmt 0 view .LVU262
 859 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 860              		.cfi_def_cfa_offset 36
 861              		.cfi_offset 4, -36
 862              		.cfi_offset 5, -32
 863              		.cfi_offset 6, -28
 864              		.cfi_offset 7, -24
 865              		.cfi_offset 8, -20
 866              		.cfi_offset 9, -16
 867              		.cfi_offset 10, -12
 868              		.cfi_offset 11, -8
 869              		.cfi_offset 14, -4
 870 0004 ADF51D7D 		sub	sp, sp, #628
 871              		.cfi_def_cfa_offset 664
 168:src/TalkBoxProcessor.cpp ****     float z[ORD_MAX], r[ORD_MAX], k[ORD_MAX], G, x;
 872              		.loc 1 168 1 view .LVU263
 873 0008 9946     		mov	r9, r3
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccaSMceU.s 			page 95


 874              	.LVL57:
 172:src/TalkBoxProcessor.cpp ****     for (j = 0; j <= o; j++, nn--)  //buf[] is already emphasized and windowed
 875              		.loc 1 172 5 is_stmt 1 view .LVU264
 172:src/TalkBoxProcessor.cpp ****     for (j = 0; j <= o; j++, nn--)  //buf[] is already emphasized and windowed
 876              		.loc 1 172 10 is_stmt 0 view .LVU265
 877 000a 0023     		movs	r3, #0
 878              	.LVL58:
 168:src/TalkBoxProcessor.cpp ****     float z[ORD_MAX], r[ORD_MAX], k[ORD_MAX], G, x;
 879              		.loc 1 168 1 view .LVU266
 880 000c 8B46     		mov	fp, r1
 881 000e DDF898A2 		ldr	r10, [sp, #664]
 172:src/TalkBoxProcessor.cpp ****     for (j = 0; j <= o; j++, nn--)  //buf[] is already emphasized and windowed
 882              		.loc 1 172 10 view .LVU267
 883 0012 3893     		str	r3, [sp, #224]	@ float
 173:src/TalkBoxProcessor.cpp ****     {
 884              		.loc 1 173 5 is_stmt 1 view .LVU268
 885              	.LVL59:
 173:src/TalkBoxProcessor.cpp ****     {
 886              		.loc 1 173 19 view .LVU269
 887 0014 BAF1000F 		cmp	r10, #0
 888 0018 37DB     		blt	.L66
 889 001a 4FEA8904 		lsl	r4, r9, #2
 890 001e 1746     		mov	r7, r2
 891 0020 01EB4901 		add	r1, r1, r9, lsl #1
 892              	.LVL60:
 173:src/TalkBoxProcessor.cpp ****     {
 893              		.loc 1 173 19 is_stmt 0 view .LVU270
 894 0024 6FEA0A02 		mvn	r2, r10
 895              	.LVL61:
 173:src/TalkBoxProcessor.cpp ****     {
 896              		.loc 1 173 19 view .LVU271
 897 0028 0394     		str	r4, [sp, #12]
 898 002a 38AE     		add	r6, sp, #224
 899 002c 4A44     		add	r2, r2, r9
 900 002e 4900     		lsls	r1, r1, #1
 901 0030 06AB     		add	r3, sp, #24
 902 0032 D846     		mov	r8, fp
 903 0034 0BEB8904 		add	r4, fp, r9, lsl #2
 904 0038 4D46     		mov	r5, r9
 905              	.LVL62:
 906              	.L70:
 175:src/TalkBoxProcessor.cpp ****         for (i = 0; i < nn; i++) r[j] += buf[i] * buf[i + j]; //autocorrelation
 907              		.loc 1 175 9 is_stmt 1 view .LVU272
 175:src/TalkBoxProcessor.cpp ****         for (i = 0; i < nn; i++) r[j] += buf[i] * buf[i + j]; //autocorrelation
 908              		.loc 1 175 21 is_stmt 0 view .LVU273
 909 003a DFED437A 		vldr.32	s15, .L99
 176:src/TalkBoxProcessor.cpp ****     }
 910              		.loc 1 176 23 view .LVU274
 911 003e 002D     		cmp	r5, #0
 175:src/TalkBoxProcessor.cpp ****         for (i = 0; i < nn; i++) r[j] += buf[i] * buf[i + j]; //autocorrelation
 912              		.loc 1 175 21 view .LVU275
 913 0040 E6EC017A 		vstmia.32	r6!, {s15}
 175:src/TalkBoxProcessor.cpp ****         for (i = 0; i < nn; i++) r[j] += buf[i] * buf[i + j]; //autocorrelation
 914              		.loc 1 175 14 view .LVU276
 915 0044 E3EC017A 		vstmia.32	r3!, {s15}
 176:src/TalkBoxProcessor.cpp ****     }
 916              		.loc 1 176 9 is_stmt 1 view .LVU277
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccaSMceU.s 			page 96


 917              	.LVL63:
 176:src/TalkBoxProcessor.cpp ****     }
 918              		.loc 1 176 23 view .LVU278
 919 0048 0CDD     		ble	.L67
 176:src/TalkBoxProcessor.cpp ****     }
 920              		.loc 1 176 23 is_stmt 0 view .LVU279
 921 004a A1EB040E 		sub	lr, r1, r4
 922 004e DC46     		mov	ip, fp
 923              	.LVL64:
 924              	.L68:
 176:src/TalkBoxProcessor.cpp ****     }
 925              		.loc 1 176 34 is_stmt 1 discriminator 2 view .LVU280
 176:src/TalkBoxProcessor.cpp ****     }
 926              		.loc 1 176 47 is_stmt 0 discriminator 2 view .LVU281
 927 0050 FCEC016A 		vldmia.32	ip!, {s13}
 176:src/TalkBoxProcessor.cpp ****     }
 928              		.loc 1 176 60 discriminator 2 view .LVU282
 929 0054 BEEC017A 		vldmia.32	lr!, {s14}
 176:src/TalkBoxProcessor.cpp ****     }
 930              		.loc 1 176 23 discriminator 2 view .LVU283
 931 0058 6445     		cmp	r4, ip
 176:src/TalkBoxProcessor.cpp ****     }
 932              		.loc 1 176 39 discriminator 2 view .LVU284
 933 005a E6EE877A 		vfma.f32	s15, s13, s14
 176:src/TalkBoxProcessor.cpp ****     }
 934              		.loc 1 176 9 is_stmt 1 discriminator 2 view .LVU285
 176:src/TalkBoxProcessor.cpp ****     }
 935              		.loc 1 176 23 discriminator 2 view .LVU286
 936 005e F7D1     		bne	.L68
 937 0060 46ED017A 		vstr.32	s15, [r6, #-4]
 938              	.LVL65:
 939              	.L67:
 173:src/TalkBoxProcessor.cpp ****     {
 940              		.loc 1 173 5 discriminator 2 view .LVU287
 173:src/TalkBoxProcessor.cpp ****     {
 941              		.loc 1 173 5 is_stmt 0 discriminator 2 view .LVU288
 942 0064 013D     		subs	r5, r5, #1
 943              	.LVL66:
 173:src/TalkBoxProcessor.cpp ****     {
 944              		.loc 1 173 19 is_stmt 1 discriminator 2 view .LVU289
 945 0066 043C     		subs	r4, r4, #4
 946 0068 9542     		cmp	r5, r2
 947 006a E6D1     		bne	.L70
 178:src/TalkBoxProcessor.cpp **** 
 948              		.loc 1 178 5 view .LVU290
 178:src/TalkBoxProcessor.cpp **** 
 949              		.loc 1 178 10 is_stmt 0 view .LVU291
 950 006c DDED387A 		vldr.32	s15, [sp, #224]
 951 0070 DFED366A 		vldr.32	s13, .L99+4
 181:src/TalkBoxProcessor.cpp **** 
 952              		.loc 1 181 5 view .LVU292
 953 0074 9FED367A 		vldr.32	s14, .L99+8
 178:src/TalkBoxProcessor.cpp **** 
 954              		.loc 1 178 10 view .LVU293
 955 0078 67EEA67A 		vmul.f32	s15, s15, s13
 181:src/TalkBoxProcessor.cpp **** 
 956              		.loc 1 181 5 view .LVU294
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccaSMceU.s 			page 97


 957 007c F4EEC77A 		vcmpe.f32	s15, s14
 178:src/TalkBoxProcessor.cpp **** 
 958              		.loc 1 178 10 view .LVU295
 959 0080 CDED387A 		vstr.32	s15, [sp, #224]
 180:src/TalkBoxProcessor.cpp ****     if (r[0] < min) { for (i = 0; i < n; i++) buf[i] = 0.0f; return; }
 960              		.loc 1 180 5 is_stmt 1 view .LVU296
 961              	.LVL67:
 181:src/TalkBoxProcessor.cpp **** 
 962              		.loc 1 181 5 view .LVU297
 963 0084 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 964 0088 0CD5     		bpl	.L96
 965              	.LVL68:
 966              	.L66:
 181:src/TalkBoxProcessor.cpp **** 
 967              		.loc 1 181 37 view .LVU298
 968 008a B9F1000F 		cmp	r9, #0
 969 008e 56DD     		ble	.L65
 181:src/TalkBoxProcessor.cpp **** 
 970              		.loc 1 181 54 is_stmt 0 view .LVU299
 971 0090 4FEA8902 		lsl	r2, r9, #2
 972 0094 0021     		movs	r1, #0
 973 0096 5846     		mov	r0, fp
 974              	.LVL69:
 200:src/TalkBoxProcessor.cpp **** 
 975              		.loc 1 200 1 view .LVU300
 976 0098 0DF51D7D 		add	sp, sp, #628
 977              		.cfi_remember_state
 978              		.cfi_def_cfa_offset 36
 979              		@ sp needed
 980 009c BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 981              		.cfi_restore 14
 982              		.cfi_restore 11
 983              		.cfi_restore 10
 984              		.cfi_restore 9
 985              		.cfi_restore 8
 986              		.cfi_restore 7
 987              		.cfi_restore 6
 988              		.cfi_restore 5
 989              		.cfi_restore 4
 990              		.cfi_def_cfa_offset 0
 991              	.LVL70:
 181:src/TalkBoxProcessor.cpp **** 
 992              		.loc 1 181 54 view .LVU301
 993 00a0 FFF7FEBF 		b	memset
 994              	.LVL71:
 995              	.L96:
 996              		.cfi_restore_state
 183:src/TalkBoxProcessor.cpp **** 
 997              		.loc 1 183 5 is_stmt 1 view .LVU302
 183:src/TalkBoxProcessor.cpp **** 
 998              		.loc 1 183 15 is_stmt 0 view .LVU303
 999 00a4 05AC     		add	r4, sp, #20
 1000 00a6 38A9     		add	r1, sp, #224
 1001 00a8 6AAB     		add	r3, sp, #424
 1002 00aa 5246     		mov	r2, r10
 1003 00ac 0094     		str	r4, [sp]
 1004 00ae FFF7FEFF 		bl	_ZN16TalkBoxProcessor10lpc_durbinEPflS0_S0_
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccaSMceU.s 			page 98


 1005              	.LVL72:
 185:src/TalkBoxProcessor.cpp ****     {
 1006              		.loc 1 185 5 is_stmt 1 view .LVU304
 185:src/TalkBoxProcessor.cpp ****     {
 1007              		.loc 1 185 19 view .LVU305
 1008 00b2 6BA8     		add	r0, sp, #428
 1009 00b4 6AAB     		add	r3, sp, #424
 1010 00b6 4FEA8A02 		lsl	r2, r10, #2
 1011 00ba 00EB8A01 		add	r1, r0, r10, lsl #2
 1012 00be 03E0     		b	.L79
 1013              	.LVL73:
 1014              	.L98:
 185:src/TalkBoxProcessor.cpp ****     {
 1015              		.loc 1 185 19 is_stmt 0 discriminator 1 view .LVU306
 1016 00c0 9942     		cmp	r1, r3
 187:src/TalkBoxProcessor.cpp ****     }
 1017              		.loc 1 187 33 discriminator 1 view .LVU307
 1018 00c2 03ED017A 		vstr.32	s14, [r3, #-4]
 185:src/TalkBoxProcessor.cpp ****     {
 1019              		.loc 1 185 5 is_stmt 1 discriminator 1 view .LVU308
 185:src/TalkBoxProcessor.cpp ****     {
 1020              		.loc 1 185 19 discriminator 1 view .LVU309
 1021 00c6 13D0     		beq	.L97
 1022              	.L79:
 187:src/TalkBoxProcessor.cpp ****     }
 1023              		.loc 1 187 9 view .LVU310
 187:src/TalkBoxProcessor.cpp ****     }
 1024              		.loc 1 187 28 view .LVU311
 187:src/TalkBoxProcessor.cpp ****     }
 1025              		.loc 1 187 48 view .LVU312
 187:src/TalkBoxProcessor.cpp ****     }
 1026              		.loc 1 187 16 is_stmt 0 view .LVU313
 1027 00c8 F3EC017A 		vldmia.32	r3!, {s15}
 187:src/TalkBoxProcessor.cpp ****     }
 1028              		.loc 1 187 9 view .LVU314
 1029 00cc 9FED217A 		vldr.32	s14, .L99+12
 187:src/TalkBoxProcessor.cpp ****     }
 1030              		.loc 1 187 48 view .LVU315
 1031 00d0 DFED216A 		vldr.32	s13, .L99+16
 187:src/TalkBoxProcessor.cpp ****     }
 1032              		.loc 1 187 9 view .LVU316
 1033 00d4 F4EEC77A 		vcmpe.f32	s15, s14
 1034 00d8 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1035 00dc F0DC     		bgt	.L98
 187:src/TalkBoxProcessor.cpp ****     }
 1036              		.loc 1 187 68 is_stmt 1 discriminator 2 view .LVU317
 187:src/TalkBoxProcessor.cpp ****     }
 1037              		.loc 1 187 48 is_stmt 0 discriminator 2 view .LVU318
 1038 00de F4EEE67A 		vcmpe.f32	s15, s13
 1039 00e2 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 187:src/TalkBoxProcessor.cpp ****     }
 1040              		.loc 1 187 73 discriminator 2 view .LVU319
 1041 00e6 48BF     		it	mi
 1042 00e8 43ED016A 		vstrmi.32	s13, [r3, #-4]
 185:src/TalkBoxProcessor.cpp ****     {
 1043              		.loc 1 185 5 is_stmt 1 discriminator 2 view .LVU320
 185:src/TalkBoxProcessor.cpp ****     {
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccaSMceU.s 			page 99


 1044              		.loc 1 185 19 discriminator 2 view .LVU321
 1045 00ec 9942     		cmp	r1, r3
 1046 00ee EBD1     		bne	.L79
 1047              	.L97:
 1048              	.LVL74:
 190:src/TalkBoxProcessor.cpp ****     {
 1049              		.loc 1 190 19 view .LVU322
 1050 00f0 B9F1000F 		cmp	r9, #0
 1051 00f4 23DD     		ble	.L65
 1052 00f6 0432     		adds	r2, r2, #4
 1053 00f8 6AAB     		add	r3, sp, #424
 192:src/TalkBoxProcessor.cpp ****         for (j = o; j > 0; j--)  //lattice filter
 1054              		.loc 1 192 15 is_stmt 0 view .LVU323
 1055 00fa 94ED006A 		vldr.32	s12, [r4]
 1056 00fe 5646     		mov	r6, r10
 1057 0100 9D18     		adds	r5, r3, r2
 1058              	.LVL75:
 192:src/TalkBoxProcessor.cpp ****         for (j = o; j > 0; j--)  //lattice filter
 1059              		.loc 1 192 15 view .LVU324
 1060 0102 06AB     		add	r3, sp, #24
 1061 0104 1A44     		add	r2, r2, r3
 1062 0106 039B     		ldr	r3, [sp, #12]
 1063 0108 3B44     		add	r3, r3, r7
 1064 010a 1C46     		mov	r4, r3
 1065              	.LVL76:
 1066              	.L82:
 192:src/TalkBoxProcessor.cpp ****         for (j = o; j > 0; j--)  //lattice filter
 1067              		.loc 1 192 9 is_stmt 1 view .LVU325
 192:src/TalkBoxProcessor.cpp ****         for (j = o; j > 0; j--)  //lattice filter
 1068              		.loc 1 192 22 is_stmt 0 view .LVU326
 1069 010c B7EC017A 		vldmia.32	r7!, {s14}
 192:src/TalkBoxProcessor.cpp ****         for (j = o; j > 0; j--)  //lattice filter
 1070              		.loc 1 192 11 view .LVU327
 1071 0110 27EE067A 		vmul.f32	s14, s14, s12
 1072              	.LVL77:
 193:src/TalkBoxProcessor.cpp ****         {
 1073              		.loc 1 193 9 is_stmt 1 view .LVU328
 193:src/TalkBoxProcessor.cpp ****         {
 1074              		.loc 1 193 23 view .LVU329
 1075 0114 6EB1     		cbz	r6, .L80
 1076 0116 1146     		mov	r1, r2
 1077 0118 2B46     		mov	r3, r5
 1078              	.LVL78:
 1079              	.L81:
 195:src/TalkBoxProcessor.cpp ****             z[j] = z[j - 1] + k[j] * x;
 1080              		.loc 1 195 13 discriminator 2 view .LVU330
 195:src/TalkBoxProcessor.cpp ****             z[j] = z[j - 1] + k[j] * x;
 1081              		.loc 1 195 32 is_stmt 0 discriminator 2 view .LVU331
 1082 011a 51ED027A 		vldr.32	s15, [r1, #-8]
 195:src/TalkBoxProcessor.cpp ****             z[j] = z[j - 1] + k[j] * x;
 1083              		.loc 1 195 21 discriminator 2 view .LVU332
 1084 011e 73ED016A 		vldmdb.32	r3!, {s13}
 195:src/TalkBoxProcessor.cpp ****             z[j] = z[j - 1] + k[j] * x;
 1085              		.loc 1 195 15 discriminator 2 view .LVU333
 1086 0122 A6EEE77A 		vfms.f32	s14, s13, s15
 1087              	.LVL79:
 196:src/TalkBoxProcessor.cpp ****         }
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccaSMceU.s 			page 100


 1088              		.loc 1 196 13 is_stmt 1 discriminator 2 view .LVU334
 193:src/TalkBoxProcessor.cpp ****         {
 1089              		.loc 1 193 23 is_stmt 0 discriminator 2 view .LVU335
 1090 0126 8342     		cmp	r3, r0
 196:src/TalkBoxProcessor.cpp ****         }
 1091              		.loc 1 196 29 discriminator 2 view .LVU336
 1092 0128 E6EE877A 		vfma.f32	s15, s13, s14
 196:src/TalkBoxProcessor.cpp ****         }
 1093              		.loc 1 196 18 discriminator 2 view .LVU337
 1094 012c 61ED017A 		vstmdb.32	r1!, {s15}
 193:src/TalkBoxProcessor.cpp ****         {
 1095              		.loc 1 193 9 is_stmt 1 discriminator 2 view .LVU338
 193:src/TalkBoxProcessor.cpp ****         {
 1096              		.loc 1 193 23 discriminator 2 view .LVU339
 1097 0130 F3D1     		bne	.L81
 1098              	.L80:
 198:src/TalkBoxProcessor.cpp ****     }
 1099              		.loc 1 198 9 discriminator 2 view .LVU340
 190:src/TalkBoxProcessor.cpp ****     {
 1100              		.loc 1 190 19 is_stmt 0 discriminator 2 view .LVU341
 1101 0132 BC42     		cmp	r4, r7
 198:src/TalkBoxProcessor.cpp ****     }
 1102              		.loc 1 198 23 discriminator 2 view .LVU342
 1103 0134 8DED067A 		vstr.32	s14, [sp, #24]
 198:src/TalkBoxProcessor.cpp ****     }
 1104              		.loc 1 198 16 discriminator 2 view .LVU343
 1105 0138 A8EC017A 		vstmia.32	r8!, {s14}
 190:src/TalkBoxProcessor.cpp ****     {
 1106              		.loc 1 190 5 is_stmt 1 discriminator 2 view .LVU344
 190:src/TalkBoxProcessor.cpp ****     {
 1107              		.loc 1 190 19 discriminator 2 view .LVU345
 1108 013c E6D1     		bne	.L82
 1109              	.LVL80:
 1110              	.L65:
 200:src/TalkBoxProcessor.cpp **** 
 1111              		.loc 1 200 1 is_stmt 0 view .LVU346
 1112 013e 0DF51D7D 		add	sp, sp, #628
 1113              		.cfi_def_cfa_offset 36
 1114              		@ sp needed
 1115 0142 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1116              	.LVL81:
 1117              	.L100:
 200:src/TalkBoxProcessor.cpp **** 
 1118              		.loc 1 200 1 view .LVU347
 1119 0146 00BF     		.align	2
 1120              	.L99:
 1121 0148 00000000 		.word	0
 1122 014c C520803F 		.word	1065361605
 1123 0150 ACC52737 		.word	925353388
 1124 0154 52B87E3F 		.word	1065269330
 1125 0158 52B87EBF 		.word	-1082214318
 1126              		.cfi_endproc
 1127              	.LFE3105:
 1129              		.section	.text._ZN16TalkBoxProcessor12processBlockEPKfS1_PfS2_l,"ax",%progbits
 1130              		.align	1
 1131              		.p2align 2,,3
 1132              		.global	_ZN16TalkBoxProcessor12processBlockEPKfS1_PfS2_l
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccaSMceU.s 			page 101


 1133              		.syntax unified
 1134              		.thumb
 1135              		.thumb_func
 1136              		.fpu fpv5-d16
 1138              	_ZN16TalkBoxProcessor12processBlockEPKfS1_PfS2_l:
 1139              	.LVL82:
 1140              	.LFB3104:
  71:src/TalkBoxProcessor.cpp ****     // local copies of state
 1141              		.loc 1 71 1 is_stmt 1 view -0
 1142              		.cfi_startproc
 1143              		@ args = 8, pretend = 0, frame = 8
 1144              		@ frame_needed = 0, uses_anonymous_args = 0
  73:src/TalkBoxProcessor.cpp ****     int32_t   p1    = (pos + N/2) % N;
 1145              		.loc 1 73 5 view .LVU349
  71:src/TalkBoxProcessor.cpp ****     // local copies of state
 1146              		.loc 1 71 1 is_stmt 0 view .LVU350
 1147 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1148              		.cfi_def_cfa_offset 36
 1149              		.cfi_offset 4, -36
 1150              		.cfi_offset 5, -32
 1151              		.cfi_offset 6, -28
 1152              		.cfi_offset 7, -24
 1153              		.cfi_offset 8, -20
 1154              		.cfi_offset 9, -16
 1155              		.cfi_offset 10, -12
 1156              		.cfi_offset 11, -8
 1157              		.cfi_offset 14, -4
  74:src/TalkBoxProcessor.cpp ****     float e     = emphasis;
 1158              		.loc 1 74 30 view .LVU351
 1159 0004 4669     		ldr	r6, [r0, #20]
  73:src/TalkBoxProcessor.cpp ****     int32_t   p1    = (pos + N/2) % N;
 1160              		.loc 1 73 15 view .LVU352
 1161 0006 C569     		ldr	r5, [r0, #28]
 1162              	.LVL83:
  74:src/TalkBoxProcessor.cpp ****     float e     = emphasis;
 1163              		.loc 1 74 5 is_stmt 1 view .LVU353
  74:src/TalkBoxProcessor.cpp ****     float e     = emphasis;
 1164              		.loc 1 74 31 is_stmt 0 view .LVU354
 1165 0008 002E     		cmp	r6, #0
  75:src/TalkBoxProcessor.cpp ****     float fx    = FX;
 1166              		.loc 1 75 11 view .LVU355
 1167 000a D0ED0B4A 		vldr.32	s9, [r0, #44]
  74:src/TalkBoxProcessor.cpp ****     float e     = emphasis;
 1168              		.loc 1 74 31 view .LVU356
 1169 000e B4BF     		ite	lt
 1170 0010 741C     		addlt	r4, r6, #1
 1171 0012 3446     		movge	r4, r6
  74:src/TalkBoxProcessor.cpp ****     float e     = emphasis;
 1172              		.loc 1 74 28 view .LVU357
 1173 0014 05EB6404 		add	r4, r5, r4, asr #1
  74:src/TalkBoxProcessor.cpp ****     float e     = emphasis;
 1174              		.loc 1 74 15 view .LVU358
 1175 0018 94FBF6F7 		sdiv	r7, r4, r6
  71:src/TalkBoxProcessor.cpp ****     // local copies of state
 1176              		.loc 1 71 1 view .LVU359
 1177 001c 2DED048B 		vpush.64	{d8, d9}
 1178              		.cfi_def_cfa_offset 52
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccaSMceU.s 			page 102


 1179              		.cfi_offset 80, -52
 1180              		.cfi_offset 81, -48
 1181              		.cfi_offset 82, -44
 1182              		.cfi_offset 83, -40
 1183 0020 85B0     		sub	sp, sp, #20
 1184              		.cfi_def_cfa_offset 72
  74:src/TalkBoxProcessor.cpp ****     float e     = emphasis;
 1185              		.loc 1 74 15 view .LVU360
 1186 0022 06FB1744 		mls	r4, r6, r7, r4
 1187              	.LVL84:
  75:src/TalkBoxProcessor.cpp ****     float fx    = FX;
 1188              		.loc 1 75 5 is_stmt 1 view .LVU361
  76:src/TalkBoxProcessor.cpp ****     const float h0 = 0.3f;
 1189              		.loc 1 76 5 view .LVU362
  76:src/TalkBoxProcessor.cpp ****     const float h0 = 0.3f;
 1190              		.loc 1 76 11 is_stmt 0 view .LVU363
 1191 0026 D0ED0C8A 		vldr.32	s17, [r0, #48]
 1192              	.LVL85:
  77:src/TalkBoxProcessor.cpp ****     const float h1 = 0.77f;
 1193              		.loc 1 77 5 is_stmt 1 view .LVU364
  78:src/TalkBoxProcessor.cpp **** 
 1194              		.loc 1 78 5 view .LVU365
  80:src/TalkBoxProcessor.cpp ****     {
 1195              		.loc 1 80 5 view .LVU366
 1196              	.LBB77:
  80:src/TalkBoxProcessor.cpp ****     {
 1197              		.loc 1 80 27 view .LVU367
 1198 002a 139E     		ldr	r6, [sp, #76]
 1199 002c 002E     		cmp	r6, #0
 1200 002e 40F3AD80 		ble	.L103
 1201 0032 8A46     		mov	r10, r1
 1202 0034 9146     		mov	r9, r2
 1203 0036 9846     		mov	r8, r3
 1204 0038 DDF848B0 		ldr	fp, [sp, #72]
  80:src/TalkBoxProcessor.cpp ****     {
 1205              		.loc 1 80 18 is_stmt 0 view .LVU368
 1206 003c 0026     		movs	r6, #0
 1207 003e 30E0     		b	.L107
 1208              	.LVL86:
 1209              	.L136:
 1210              	.LBB78:
 1211              	.LBB79:
  98:src/TalkBoxProcessor.cpp ****         {
 1212              		.loc 1 98 14 view .LVU369
 1213 0040 0362     		str	r3, [r0, #32]
 1214              	.LVL87:
 1215              	.L105:
  98:src/TalkBoxProcessor.cpp ****         {
 1216              		.loc 1 98 14 view .LVU370
 1217              	.LBE79:
 131:src/TalkBoxProcessor.cpp ****             float p = u0 + h0 * fx;
 1218              		.loc 1 131 9 is_stmt 1 discriminator 2 view .LVU371
 1219              	.LBB85:
 132:src/TalkBoxProcessor.cpp ****             u0 = u1;  u1 = fx - h0 * p;
 1220              		.loc 1 132 13 discriminator 2 view .LVU372
 132:src/TalkBoxProcessor.cpp ****             u0 = u1;  u1 = fx - h0 * p;
 1221              		.loc 1 132 19 is_stmt 0 discriminator 2 view .LVU373
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccaSMceU.s 			page 103


 1222 0042 D0ED127A 		vldr.32	s15, [r0, #72]
 133:src/TalkBoxProcessor.cpp ****             float q = u2 + h1 * u4;
 1223              		.loc 1 133 31 discriminator 2 view .LVU374
 1224 0046 F0EE686A 		vmov.f32	s13, s17
 132:src/TalkBoxProcessor.cpp ****             u0 = u1;  u1 = fx - h0 * p;
 1225              		.loc 1 132 19 discriminator 2 view .LVU375
 1226 004a 9FED897A 		vldr.32	s14, .L138
 1227              	.LBE85:
 1228              	.LBE78:
  80:src/TalkBoxProcessor.cpp ****     {
 1229              		.loc 1 80 5 discriminator 2 view .LVU376
 1230 004e 0136     		adds	r6, r6, #1
 1231              	.LVL88:
 1232              	.LBB104:
 1233              	.LBB86:
 133:src/TalkBoxProcessor.cpp ****             float q = u2 + h1 * u4;
 1234              		.loc 1 133 16 discriminator 2 view .LVU377
 1235 0050 C36C     		ldr	r3, [r0, #76]	@ float
 132:src/TalkBoxProcessor.cpp ****             u0 = u1;  u1 = fx - h0 * p;
 1236              		.loc 1 132 19 discriminator 2 view .LVU378
 1237 0052 E8EE877A 		vfma.f32	s15, s17, s14
 1238              	.LVL89:
 133:src/TalkBoxProcessor.cpp ****             float q = u2 + h1 * u4;
 1239              		.loc 1 133 13 is_stmt 1 discriminator 2 view .LVU379
 134:src/TalkBoxProcessor.cpp ****             u2 = u3;  u3 = u4 - h1 * q;
 1240              		.loc 1 134 19 is_stmt 0 discriminator 2 view .LVU380
 1241 0056 9FED876A 		vldr.32	s12, .L138+4
 1242              	.LBE86:
 141:src/TalkBoxProcessor.cpp ****         outL[n] = out;
 1243              		.loc 1 141 35 discriminator 2 view .LVU381
 1244 005a 90ED0A5A 		vldr.32	s10, [r0, #40]
 141:src/TalkBoxProcessor.cpp ****         outL[n] = out;
 1245              		.loc 1 141 15 discriminator 2 view .LVU382
 1246 005e D0ED095A 		vldr.32	s11, [r0, #36]
 141:src/TalkBoxProcessor.cpp ****         outL[n] = out;
 1247              		.loc 1 141 35 discriminator 2 view .LVU383
 1248 0062 28EE058A 		vmul.f32	s16, s16, s10
 1249              	.LVL90:
 1250              	.LBB87:
 133:src/TalkBoxProcessor.cpp ****             float q = u2 + h1 * u4;
 1251              		.loc 1 133 16 discriminator 2 view .LVU384
 1252 0066 8364     		str	r3, [r0, #72]	@ float
 133:src/TalkBoxProcessor.cpp ****             float q = u2 + h1 * u4;
 1253              		.loc 1 133 23 is_stmt 1 discriminator 2 view .LVU385
 135:src/TalkBoxProcessor.cpp ****             u4 = fx;
 1254              		.loc 1 135 16 is_stmt 0 discriminator 2 view .LVU386
 1255 0068 436D     		ldr	r3, [r0, #84]	@ float
 133:src/TalkBoxProcessor.cpp ****             float q = u2 + h1 * u4;
 1256              		.loc 1 133 31 discriminator 2 view .LVU387
 1257 006a E7EEC76A 		vfms.f32	s13, s15, s14
 134:src/TalkBoxProcessor.cpp ****             u2 = u3;  u3 = u4 - h1 * q;
 1258              		.loc 1 134 33 discriminator 2 view .LVU388
 1259 006e 90ED167A 		vldr.32	s14, [r0, #88]
 136:src/TalkBoxProcessor.cpp ****             x = p + q;
 1260              		.loc 1 136 16 discriminator 2 view .LVU389
 1261 0072 C0ED168A 		vstr.32	s17, [r0, #88]
 133:src/TalkBoxProcessor.cpp ****             float q = u2 + h1 * u4;
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccaSMceU.s 			page 104


 1262              		.loc 1 133 26 discriminator 2 view .LVU390
 1263 0076 C0ED136A 		vstr.32	s13, [r0, #76]
 134:src/TalkBoxProcessor.cpp ****             u2 = u3;  u3 = u4 - h1 * q;
 1264              		.loc 1 134 13 is_stmt 1 discriminator 2 view .LVU391
 134:src/TalkBoxProcessor.cpp ****             u2 = u3;  u3 = u4 - h1 * q;
 1265              		.loc 1 134 19 is_stmt 0 discriminator 2 view .LVU392
 1266 007a D0ED146A 		vldr.32	s13, [r0, #80]
 135:src/TalkBoxProcessor.cpp ****             u4 = fx;
 1267              		.loc 1 135 16 discriminator 2 view .LVU393
 1268 007e 0365     		str	r3, [r0, #80]	@ float
 134:src/TalkBoxProcessor.cpp ****             u2 = u3;  u3 = u4 - h1 * q;
 1269              		.loc 1 134 19 discriminator 2 view .LVU394
 1270 0080 E7EE066A 		vfma.f32	s13, s14, s12
 1271              	.LVL91:
 135:src/TalkBoxProcessor.cpp ****             u4 = fx;
 1272              		.loc 1 135 13 is_stmt 1 discriminator 2 view .LVU395
 135:src/TalkBoxProcessor.cpp ****             u4 = fx;
 1273              		.loc 1 135 23 discriminator 2 view .LVU396
 1274              	.LBE87:
 1275              	.LBE104:
  80:src/TalkBoxProcessor.cpp ****     {
 1276              		.loc 1 80 27 is_stmt 0 discriminator 2 view .LVU397
 1277 0084 139B     		ldr	r3, [sp, #76]
 1278 0086 B342     		cmp	r3, r6
 1279              	.LBB105:
 1280              	.LBB88:
 137:src/TalkBoxProcessor.cpp ****         }
 1281              		.loc 1 137 15 discriminator 2 view .LVU398
 1282 0088 77EEA67A 		vadd.f32	s15, s15, s13
 1283              	.LVL92:
 135:src/TalkBoxProcessor.cpp ****             u4 = fx;
 1284              		.loc 1 135 31 discriminator 2 view .LVU399
 1285 008c A6EEC67A 		vfms.f32	s14, s13, s12
 1286              	.LBE88:
 141:src/TalkBoxProcessor.cpp ****         outL[n] = out;
 1287              		.loc 1 141 15 discriminator 2 view .LVU400
 1288 0090 A5EEA78A 		vfma.f32	s16, s11, s15
 1289              	.LBB89:
 135:src/TalkBoxProcessor.cpp ****             u4 = fx;
 1290              		.loc 1 135 26 discriminator 2 view .LVU401
 1291 0094 80ED157A 		vstr.32	s14, [r0, #84]
 136:src/TalkBoxProcessor.cpp ****             x = p + q;
 1292              		.loc 1 136 13 is_stmt 1 discriminator 2 view .LVU402
 137:src/TalkBoxProcessor.cpp ****         }
 1293              		.loc 1 137 13 discriminator 2 view .LVU403
 137:src/TalkBoxProcessor.cpp ****         }
 1294              		.loc 1 137 13 is_stmt 0 discriminator 2 view .LVU404
 1295              	.LBE89:
 141:src/TalkBoxProcessor.cpp ****         outL[n] = out;
 1296              		.loc 1 141 9 is_stmt 1 discriminator 2 view .LVU405
 1297              	.LVL93:
 142:src/TalkBoxProcessor.cpp ****         outR[n] = out;
 1298              		.loc 1 142 9 discriminator 2 view .LVU406
 142:src/TalkBoxProcessor.cpp ****         outR[n] = out;
 1299              		.loc 1 142 17 is_stmt 0 discriminator 2 view .LVU407
 1300 0098 A8EC018A 		vstmia.32	r8!, {s16}
 143:src/TalkBoxProcessor.cpp ****     }
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccaSMceU.s 			page 105


 1301              		.loc 1 143 9 is_stmt 1 discriminator 2 view .LVU408
 143:src/TalkBoxProcessor.cpp ****     }
 1302              		.loc 1 143 17 is_stmt 0 discriminator 2 view .LVU409
 1303 009c ABEC018A 		vstmia.32	fp!, {s16}
 1304              	.LBE105:
  80:src/TalkBoxProcessor.cpp ****     {
 1305              		.loc 1 80 5 is_stmt 1 discriminator 2 view .LVU410
 1306              	.LVL94:
  80:src/TalkBoxProcessor.cpp ****     {
 1307              		.loc 1 80 27 discriminator 2 view .LVU411
 1308 00a0 74D0     		beq	.L103
 1309              	.LVL95:
 1310              	.L107:
 1311              	.LBB106:
  83:src/TalkBoxProcessor.cpp ****         float x = carIn[n];   // carrier
 1312              		.loc 1 83 9 view .LVU412
  84:src/TalkBoxProcessor.cpp ****         float dr = o;         // dry path copy
 1313              		.loc 1 84 15 is_stmt 0 view .LVU413
 1314 00a2 B9EC017A 		vldmia.32	r9!, {s14}
 1315              	.LBB90:
 1316              	.LBB80:
 103:src/TalkBoxProcessor.cpp **** 
 1317              		.loc 1 103 31 view .LVU414
 1318 00a6 A300     		lsls	r3, r4, #2
 1319              	.LBE80:
 1320              	.LBE90:
 1321              	.LBB91:
  91:src/TalkBoxProcessor.cpp ****             d2 = d3;  d3 = d4 - h1 * q;
 1322              		.loc 1 91 33 view .LVU415
 1323 00a8 D0ED116A 		vldr.32	s13, [r0, #68]
 1324              	.LBE91:
 1325              	.LBB92:
 1326              	.LBB81:
 100:src/TalkBoxProcessor.cpp **** 
 1327              		.loc 1 100 15 view .LVU416
 1328 00ac 4FF0000C 		mov	ip, #0
 1329              	.LBE81:
 1330              	.LBE92:
 1331              	.LBB93:
  89:src/TalkBoxProcessor.cpp ****             d0 = d1;  d1 = x - h0 * p;
 1332              		.loc 1 89 19 view .LVU417
 1333 00b0 D0ED0D7A 		vldr.32	s15, [r0, #52]
  91:src/TalkBoxProcessor.cpp ****             d2 = d3;  d3 = d4 - h1 * q;
 1334              		.loc 1 91 19 view .LVU418
 1335 00b4 90ED0F6A 		vldr.32	s12, [r0, #60]
  89:src/TalkBoxProcessor.cpp ****             d0 = d1;  d1 = x - h0 * p;
 1336              		.loc 1 89 19 view .LVU419
 1337 00b8 9FED6D5A 		vldr.32	s10, .L138
  91:src/TalkBoxProcessor.cpp ****             d2 = d3;  d3 = d4 - h1 * q;
 1338              		.loc 1 91 19 view .LVU420
 1339 00bc DFED6D5A 		vldr.32	s11, .L138+4
  89:src/TalkBoxProcessor.cpp ****             d0 = d1;  d1 = x - h0 * p;
 1340              		.loc 1 89 19 view .LVU421
 1341 00c0 E7EE057A 		vfma.f32	s15, s14, s10
 1342              	.LBE93:
  83:src/TalkBoxProcessor.cpp ****         float x = carIn[n];   // carrier
 1343              		.loc 1 83 15 view .LVU422
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccaSMceU.s 			page 106


 1344 00c4 BAEC018A 		vldmia.32	r10!, {s16}
 1345              	.LVL96:
  84:src/TalkBoxProcessor.cpp ****         float dr = o;         // dry path copy
 1346              		.loc 1 84 9 is_stmt 1 view .LVU423
  85:src/TalkBoxProcessor.cpp **** 
 1347              		.loc 1 85 9 view .LVU424
  88:src/TalkBoxProcessor.cpp ****             float p = d0 + h0 * x;
 1348              		.loc 1 88 9 view .LVU425
 1349              	.LBB94:
  89:src/TalkBoxProcessor.cpp ****             d0 = d1;  d1 = x - h0 * p;
 1350              		.loc 1 89 13 view .LVU426
  90:src/TalkBoxProcessor.cpp ****             float q = d2 + h1 * d4;
 1351              		.loc 1 90 13 view .LVU427
  91:src/TalkBoxProcessor.cpp ****             d2 = d3;  d3 = d4 - h1 * q;
 1352              		.loc 1 91 19 is_stmt 0 view .LVU428
 1353 00c8 A6EEA56A 		vfma.f32	s12, s13, s11
  93:src/TalkBoxProcessor.cpp ****             x = p + q;
 1354              		.loc 1 93 16 view .LVU429
 1355 00cc 80ED117A 		vstr.32	s14, [r0, #68]
  92:src/TalkBoxProcessor.cpp ****             d4 = x;
 1356              		.loc 1 92 16 view .LVU430
 1357 00d0 026C     		ldr	r2, [r0, #64]	@ float
  90:src/TalkBoxProcessor.cpp ****             float q = d2 + h1 * d4;
 1358              		.loc 1 90 16 view .LVU431
 1359 00d2 816B     		ldr	r1, [r0, #56]	@ float
  92:src/TalkBoxProcessor.cpp ****             d4 = x;
 1360              		.loc 1 92 16 view .LVU432
 1361 00d4 C263     		str	r2, [r0, #60]	@ float
 1362              	.LBE94:
 1363              	.LBB95:
  98:src/TalkBoxProcessor.cpp ****         {
 1364              		.loc 1 98 9 view .LVU433
 1365 00d6 026A     		ldr	r2, [r0, #32]
 1366              	.LBE95:
 1367              	.LBB96:
  90:src/TalkBoxProcessor.cpp ****             float q = d2 + h1 * d4;
 1368              		.loc 1 90 30 view .LVU434
 1369 00d8 A7EEC57A 		vfms.f32	s14, s15, s10
 1370              	.LVL97:
  90:src/TalkBoxProcessor.cpp ****             float q = d2 + h1 * d4;
 1371              		.loc 1 90 30 view .LVU435
 1372              	.LBE96:
 1373              	.LBB97:
 1374              	.LBB82:
 103:src/TalkBoxProcessor.cpp **** 
 1375              		.loc 1 103 31 view .LVU436
 1376 00dc 0293     		str	r3, [sp, #8]
 1377              	.LBE82:
 1378              	.LBE97:
 1379              	.LBB98:
  92:src/TalkBoxProcessor.cpp ****             d4 = x;
 1380              		.loc 1 92 31 view .LVU437
 1381 00de E6EE656A 		vfms.f32	s13, s12, s11
 1382              	.LBE98:
 1383              	.LBB99:
  98:src/TalkBoxProcessor.cpp ****         {
 1384              		.loc 1 98 14 view .LVU438
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccaSMceU.s 			page 107


 1385 00e2 0123     		movs	r3, #1
 1386              	.LBE99:
 1387              	.LBB100:
  90:src/TalkBoxProcessor.cpp ****             float q = d2 + h1 * d4;
 1388              		.loc 1 90 16 view .LVU439
 1389 00e4 4163     		str	r1, [r0, #52]	@ float
  90:src/TalkBoxProcessor.cpp ****             float q = d2 + h1 * d4;
 1390              		.loc 1 90 23 is_stmt 1 view .LVU440
  90:src/TalkBoxProcessor.cpp ****             float q = d2 + h1 * d4;
 1391              		.loc 1 90 26 is_stmt 0 view .LVU441
 1392 00e6 80ED0E7A 		vstr.32	s14, [r0, #56]
  91:src/TalkBoxProcessor.cpp ****             d2 = d3;  d3 = d4 - h1 * q;
 1393              		.loc 1 91 13 is_stmt 1 view .LVU442
 1394              	.LVL98:
  92:src/TalkBoxProcessor.cpp ****             d4 = x;
 1395              		.loc 1 92 13 view .LVU443
  92:src/TalkBoxProcessor.cpp ****             d4 = x;
 1396              		.loc 1 92 23 view .LVU444
  92:src/TalkBoxProcessor.cpp ****             d4 = x;
 1397              		.loc 1 92 26 is_stmt 0 view .LVU445
 1398 00ea C0ED106A 		vstr.32	s13, [r0, #64]
  93:src/TalkBoxProcessor.cpp ****             x = p + q;
 1399              		.loc 1 93 13 is_stmt 1 view .LVU446
  94:src/TalkBoxProcessor.cpp ****         }
 1400              		.loc 1 94 13 view .LVU447
 1401              	.LVL99:
  94:src/TalkBoxProcessor.cpp ****         }
 1402              		.loc 1 94 13 is_stmt 0 view .LVU448
 1403              	.LBE100:
  98:src/TalkBoxProcessor.cpp ****         {
 1404              		.loc 1 98 9 is_stmt 1 view .LVU449
 1405              	.LBB101:
 1406 00ee 002A     		cmp	r2, #0
 1407 00f0 A6D0     		beq	.L136
 1408              	.LBB83:
 103:src/TalkBoxProcessor.cpp **** 
 1409              		.loc 1 103 33 is_stmt 0 view .LVU450
 1410 00f2 C368     		ldr	r3, [r0, #12]
 1411              	.LBE83:
 1412              	.LBE101:
 1413              	.LBB102:
  94:src/TalkBoxProcessor.cpp ****         }
 1414              		.loc 1 94 15 view .LVU451
 1415 00f4 77EE867A 		vadd.f32	s15, s15, s12
 1416              	.LVL100:
  94:src/TalkBoxProcessor.cpp ****         }
 1417              		.loc 1 94 15 view .LVU452
 1418              	.LBE102:
 1419              	.LBB103:
 1420              	.LBB84:
 100:src/TalkBoxProcessor.cpp **** 
 1421              		.loc 1 100 13 is_stmt 1 view .LVU453
 103:src/TalkBoxProcessor.cpp **** 
 1422              		.loc 1 103 13 is_stmt 0 view .LVU454
 1423 00f8 8268     		ldr	r2, [r0, #8]
 106:src/TalkBoxProcessor.cpp ****             e = o;
 1424              		.loc 1 106 15 view .LVU455
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccaSMceU.s 			page 108


 1425 00fa 38EE649A 		vsub.f32	s18, s16, s9
 103:src/TalkBoxProcessor.cpp **** 
 1426              		.loc 1 103 33 view .LVU456
 1427 00fe 03EB8403 		add	r3, r3, r4, lsl #2
 100:src/TalkBoxProcessor.cpp **** 
 1428              		.loc 1 100 15 view .LVU457
 1429 0102 C0F820C0 		str	ip, [r0, #32]
 103:src/TalkBoxProcessor.cpp **** 
 1430              		.loc 1 103 13 is_stmt 1 view .LVU458
 103:src/TalkBoxProcessor.cpp **** 
 1431              		.loc 1 103 22 is_stmt 0 view .LVU459
 1432 0106 02EB8501 		add	r1, r2, r5, lsl #2
 103:src/TalkBoxProcessor.cpp **** 
 1433              		.loc 1 103 33 view .LVU460
 1434 010a 0134     		adds	r4, r4, #1
 1435              	.LVL101:
 103:src/TalkBoxProcessor.cpp **** 
 1436              		.loc 1 103 33 view .LVU461
 1437 010c C3ED007A 		vstr.32	s15, [r3]
 110:src/TalkBoxProcessor.cpp ****             fx = buf0[p0] * w;
 1438              		.loc 1 110 19 view .LVU462
 1439 0110 0369     		ldr	r3, [r0, #16]
 103:src/TalkBoxProcessor.cpp **** 
 1440              		.loc 1 103 22 view .LVU463
 1441 0112 C1ED007A 		vstr.32	s15, [r1]
 106:src/TalkBoxProcessor.cpp ****             e = o;
 1442              		.loc 1 106 13 is_stmt 1 view .LVU464
 1443              	.LVL102:
 107:src/TalkBoxProcessor.cpp **** 
 1444              		.loc 1 107 13 view .LVU465
 110:src/TalkBoxProcessor.cpp ****             fx = buf0[p0] * w;
 1445              		.loc 1 110 13 view .LVU466
 110:src/TalkBoxProcessor.cpp ****             fx = buf0[p0] * w;
 1446              		.loc 1 110 19 is_stmt 0 view .LVU467
 1447 0116 03EB8503 		add	r3, r3, r5, lsl #2
 111:src/TalkBoxProcessor.cpp ****             buf0[p0] = x * w;
 1448              		.loc 1 111 18 view .LVU468
 1449 011a 0168     		ldr	r1, [r0]
 110:src/TalkBoxProcessor.cpp ****             fx = buf0[p0] * w;
 1450              		.loc 1 110 19 view .LVU469
 1451 011c D3ED009A 		vldr.32	s19, [r3]
 1452              	.LVL103:
 111:src/TalkBoxProcessor.cpp ****             buf0[p0] = x * w;
 1453              		.loc 1 111 13 is_stmt 1 view .LVU470
 111:src/TalkBoxProcessor.cpp ****             buf0[p0] = x * w;
 1454              		.loc 1 111 25 is_stmt 0 view .LVU471
 1455 0120 01EB850E 		add	lr, r1, r5, lsl #2
 113:src/TalkBoxProcessor.cpp ****             {
 1456              		.loc 1 113 25 view .LVU472
 1457 0124 4369     		ldr	r3, [r0, #20]
 113:src/TalkBoxProcessor.cpp ****             {
 1458              		.loc 1 113 22 view .LVU473
 1459 0126 0135     		adds	r5, r5, #1
 1460              	.LVL104:
 112:src/TalkBoxProcessor.cpp ****             if (++p0 >= N)
 1461              		.loc 1 112 26 view .LVU474
 1462 0128 69EE297A 		vmul.f32	s15, s18, s19
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccaSMceU.s 			page 109


 111:src/TalkBoxProcessor.cpp ****             buf0[p0] = x * w;
 1463              		.loc 1 111 16 view .LVU475
 1464 012c DEED008A 		vldr.32	s17, [lr]
 1465              	.LVL105:
 113:src/TalkBoxProcessor.cpp ****             {
 1466              		.loc 1 113 13 view .LVU476
 1467 0130 AB42     		cmp	r3, r5
 111:src/TalkBoxProcessor.cpp ****             buf0[p0] = x * w;
 1468              		.loc 1 111 16 view .LVU477
 1469 0132 69EEA88A 		vmul.f32	s17, s19, s17
 1470              	.LVL106:
 112:src/TalkBoxProcessor.cpp ****             if (++p0 >= N)
 1471              		.loc 1 112 13 is_stmt 1 view .LVU478
 113:src/TalkBoxProcessor.cpp ****             {
 1472              		.loc 1 113 13 view .LVU479
 112:src/TalkBoxProcessor.cpp ****             if (++p0 >= N)
 1473              		.loc 1 112 22 is_stmt 0 view .LVU480
 1474 0136 CEED007A 		vstr.32	s15, [lr]
 113:src/TalkBoxProcessor.cpp ****             {
 1475              		.loc 1 113 13 view .LVU481
 1476 013a 1EDD     		ble	.L137
 1477              	.LVL107:
 1478              	.L106:
 120:src/TalkBoxProcessor.cpp ****             fx += buf1[p1] * w2;
 1479              		.loc 1 120 13 is_stmt 1 view .LVU482
 120:src/TalkBoxProcessor.cpp ****             fx += buf1[p1] * w2;
 1480              		.loc 1 120 19 is_stmt 0 view .LVU483
 1481 013c F7EE007A 		vmov.f32	s15, #1.0e+0
 121:src/TalkBoxProcessor.cpp ****             buf1[p1] = x * w2;
 1482              		.loc 1 121 19 view .LVU484
 1483 0140 4168     		ldr	r1, [r0, #4]
 121:src/TalkBoxProcessor.cpp ****             buf1[p1] = x * w2;
 1484              		.loc 1 121 26 view .LVU485
 1485 0142 029A     		ldr	r2, [sp, #8]
 123:src/TalkBoxProcessor.cpp ****             {
 1486              		.loc 1 123 13 view .LVU486
 1487 0144 9C42     		cmp	r4, r3
 107:src/TalkBoxProcessor.cpp **** 
 1488              		.loc 1 107 15 view .LVU487
 1489 0146 F0EE484A 		vmov.f32	s9, s16
 120:src/TalkBoxProcessor.cpp ****             fx += buf1[p1] * w2;
 1490              		.loc 1 120 19 view .LVU488
 1491 014a 77EEE97A 		vsub.f32	s15, s15, s19
 1492              	.LVL108:
 121:src/TalkBoxProcessor.cpp ****             buf1[p1] = x * w2;
 1493              		.loc 1 121 13 is_stmt 1 view .LVU489
 121:src/TalkBoxProcessor.cpp ****             buf1[p1] = x * w2;
 1494              		.loc 1 121 26 is_stmt 0 view .LVU490
 1495 014e 0A44     		add	r2, r2, r1
 121:src/TalkBoxProcessor.cpp ****             buf1[p1] = x * w2;
 1496              		.loc 1 121 16 view .LVU491
 1497 0150 92ED007A 		vldr.32	s14, [r2]
 122:src/TalkBoxProcessor.cpp ****             if (++p1 >= N)
 1498              		.loc 1 122 26 view .LVU492
 1499 0154 29EE279A 		vmul.f32	s18, s18, s15
 1500              	.LVL109:
 121:src/TalkBoxProcessor.cpp ****             buf1[p1] = x * w2;
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccaSMceU.s 			page 110


 1501              		.loc 1 121 16 view .LVU493
 1502 0158 E7EE278A 		vfma.f32	s17, s14, s15
 1503              	.LVL110:
 122:src/TalkBoxProcessor.cpp ****             if (++p1 >= N)
 1504              		.loc 1 122 13 is_stmt 1 view .LVU494
 122:src/TalkBoxProcessor.cpp ****             if (++p1 >= N)
 1505              		.loc 1 122 22 is_stmt 0 view .LVU495
 1506 015c 82ED009A 		vstr.32	s18, [r2]
 123:src/TalkBoxProcessor.cpp ****             {
 1507              		.loc 1 123 13 is_stmt 1 view .LVU496
 1508              	.LVL111:
 123:src/TalkBoxProcessor.cpp ****             {
 1509              		.loc 1 123 13 is_stmt 0 view .LVU497
 1510 0160 FFF66FAF 		blt	.L105
 1511              	.LVL112:
 125:src/TalkBoxProcessor.cpp ****                 p1 = 0;
 1512              		.loc 1 125 17 is_stmt 1 view .LVU498
 125:src/TalkBoxProcessor.cpp ****                 p1 = 0;
 1513              		.loc 1 125 20 is_stmt 0 view .LVU499
 1514 0164 8269     		ldr	r2, [r0, #24]
 126:src/TalkBoxProcessor.cpp ****             }
 1515              		.loc 1 126 20 view .LVU500
 1516 0166 0024     		movs	r4, #0
 1517              	.LVL113:
 125:src/TalkBoxProcessor.cpp ****                 p1 = 0;
 1518              		.loc 1 125 20 view .LVU501
 1519 0168 0290     		str	r0, [sp, #8]
 1520 016a 0092     		str	r2, [sp]
 1521 016c C268     		ldr	r2, [r0, #12]
 1522 016e FFF7FEFF 		bl	_ZN16TalkBoxProcessor3lpcEPfS0_ll
 1523              	.LVL114:
 126:src/TalkBoxProcessor.cpp ****             }
 1524              		.loc 1 126 17 is_stmt 1 view .LVU502
 107:src/TalkBoxProcessor.cpp **** 
 1525              		.loc 1 107 15 is_stmt 0 view .LVU503
 1526 0172 F0EE484A 		vmov.f32	s9, s16
 1527 0176 0298     		ldr	r0, [sp, #8]
 1528 0178 63E7     		b	.L105
 1529              	.LVL115:
 1530              	.L137:
 115:src/TalkBoxProcessor.cpp ****                 p0 = 0;
 1531              		.loc 1 115 17 is_stmt 1 view .LVU504
 115:src/TalkBoxProcessor.cpp ****                 p0 = 0;
 1532              		.loc 1 115 20 is_stmt 0 view .LVU505
 1533 017a 8769     		ldr	r7, [r0, #24]
 116:src/TalkBoxProcessor.cpp ****             }
 1534              		.loc 1 116 20 view .LVU506
 1535 017c 6546     		mov	r5, ip
 1536              	.LVL116:
 115:src/TalkBoxProcessor.cpp ****                 p0 = 0;
 1537              		.loc 1 115 20 view .LVU507
 1538 017e 0390     		str	r0, [sp, #12]
 1539 0180 0097     		str	r7, [sp]
 1540 0182 FFF7FEFF 		bl	_ZN16TalkBoxProcessor3lpcEPfS0_ll
 1541              	.LVL117:
 116:src/TalkBoxProcessor.cpp ****             }
 1542              		.loc 1 116 17 is_stmt 1 view .LVU508
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccaSMceU.s 			page 111


 123:src/TalkBoxProcessor.cpp ****             {
 1543              		.loc 1 123 25 is_stmt 0 view .LVU509
 1544 0186 0398     		ldr	r0, [sp, #12]
 1545 0188 4369     		ldr	r3, [r0, #20]
 1546 018a D7E7     		b	.L106
 1547              	.LVL118:
 1548              	.L103:
 123:src/TalkBoxProcessor.cpp ****             {
 1549              		.loc 1 123 25 view .LVU510
 1550              	.LBE84:
 1551              	.LBE103:
 1552              	.LBE106:
 1553              	.LBE77:
 147:src/TalkBoxProcessor.cpp ****     emphasis  = e;
 1554              		.loc 1 147 5 is_stmt 1 view .LVU511
 1555              	.LBB107:
 1556              	.LBB108:
 1557              		.file 4 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\std_abs.h"
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // -*- C++ -*- C library enhancements header.
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // Copyright (C) 2016-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** /** @file include/bits/std_abs.h
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****  *  This is an internal header file, included by other library headers.
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****  *  Do not attempt to use it directly. @headername{cmath, cstdlib}
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****  */
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** #ifndef _GLIBCXX_BITS_STD_ABS_H
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** #define _GLIBCXX_BITS_STD_ABS_H
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** #pragma GCC system_header
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** #include <bits/c++config.h>
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** #define _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** #include_next <stdlib.h>
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** #ifdef __CORRECT_ISO_CPP_MATH_H_PROTO
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccaSMceU.s 			page 112


  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** # include_next <math.h>
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** #endif
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** #undef _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** #undef abs
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** extern "C++"
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** {
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** namespace std _GLIBCXX_VISIBILITY(default)
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** {
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****   using ::abs;
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** #ifndef __CORRECT_ISO_CPP_STDLIB_H_PROTO
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****   inline long
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****   abs(long __i) { return __builtin_labs(__i); }
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** #endif
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** #ifdef _GLIBCXX_USE_LONG_LONG
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****   inline long long
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****   abs(long long __x) { return __builtin_llabs (__x); }
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** #endif
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // _GLIBCXX_RESOLVE_LIB_DEFECTS
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // 2192. Validity and return type of std::abs(0u) is unclear
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // 2294. <cstdlib> should declare abs(double)
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // 2735. std::abs(short), std::abs(signed char) and others should return int
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****   inline _GLIBCXX_CONSTEXPR double
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****   abs(double __x)
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****   { return __builtin_fabs(__x); }
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****   inline _GLIBCXX_CONSTEXPR float
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****   abs(float __x)
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****   { return __builtin_fabsf(__x); }
 1558              		.loc 4 76 31 is_stmt 0 view .LVU512
 1559 018c D0ED0D7A 		vldr.32	s15, [r0, #52]
 1560              	.LBE108:
 1561              	.LBE107:
 153:src/TalkBoxProcessor.cpp ****     if (std::abs(d1) < den) d1 = 0.0f;
 1562              		.loc 1 153 5 view .LVU513
 1563 0190 9FED397A 		vldr.32	s14, .L138+8
 1564              	.LBB111:
 1565              	.LBB109:
 1566              		.loc 4 76 31 view .LVU514
 1567 0194 F0EEE77A 		vabs.f32	s15, s15
 1568              	.LBE109:
 1569              	.LBE111:
 147:src/TalkBoxProcessor.cpp ****     emphasis  = e;
 1570              		.loc 1 147 15 view .LVU515
 1571 0198 C561     		str	r5, [r0, #28]
 148:src/TalkBoxProcessor.cpp ****     FX        = fx;
 1572              		.loc 1 148 5 is_stmt 1 view .LVU516
 148:src/TalkBoxProcessor.cpp ****     FX        = fx;
 1573              		.loc 1 148 15 is_stmt 0 view .LVU517
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccaSMceU.s 			page 113


 1574 019a C0ED0B4A 		vstr.32	s9, [r0, #44]
 149:src/TalkBoxProcessor.cpp **** 
 1575              		.loc 1 149 5 is_stmt 1 view .LVU518
 149:src/TalkBoxProcessor.cpp **** 
 1576              		.loc 1 149 15 is_stmt 0 view .LVU519
 1577 019e C0ED0C8A 		vstr.32	s17, [r0, #48]
 152:src/TalkBoxProcessor.cpp ****     if (std::abs(d0) < den) d0 = 0.0f;
 1578              		.loc 1 152 5 is_stmt 1 view .LVU520
 1579              	.LVL119:
 153:src/TalkBoxProcessor.cpp ****     if (std::abs(d1) < den) d1 = 0.0f;
 1580              		.loc 1 153 5 view .LVU521
 1581              	.LBB112:
 1582              	.LBI107:
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****   { return __builtin_fabsf(__x); }
 1583              		.loc 4 75 3 view .LVU522
 1584              	.LBB110:
 1585              		.loc 4 76 5 view .LVU523
 1586              		.loc 4 76 5 is_stmt 0 view .LVU524
 1587              	.LBE110:
 1588              	.LBE112:
 153:src/TalkBoxProcessor.cpp ****     if (std::abs(d1) < den) d1 = 0.0f;
 1589              		.loc 1 153 5 view .LVU525
 1590 01a2 F4EEC77A 		vcmpe.f32	s15, s14
 1591 01a6 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1592 01aa 01D5     		bpl	.L108
 153:src/TalkBoxProcessor.cpp ****     if (std::abs(d1) < den) d1 = 0.0f;
 1593              		.loc 1 153 29 is_stmt 1 discriminator 1 view .LVU526
 153:src/TalkBoxProcessor.cpp ****     if (std::abs(d1) < den) d1 = 0.0f;
 1594              		.loc 1 153 32 is_stmt 0 discriminator 1 view .LVU527
 1595 01ac 0023     		movs	r3, #0
 1596 01ae 4363     		str	r3, [r0, #52]	@ float
 1597              	.L108:
 154:src/TalkBoxProcessor.cpp ****     if (std::abs(d2) < den) d2 = 0.0f;
 1598              		.loc 1 154 5 is_stmt 1 view .LVU528
 1599              	.LVL120:
 1600              	.LBB113:
 1601              	.LBI113:
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****   { return __builtin_fabsf(__x); }
 1602              		.loc 4 75 3 view .LVU529
 1603              	.LBB114:
 1604              		.loc 4 76 5 view .LVU530
 1605              		.loc 4 76 31 is_stmt 0 view .LVU531
 1606 01b0 D0ED0E7A 		vldr.32	s15, [r0, #56]
 1607              	.LBE114:
 1608              	.LBE113:
 154:src/TalkBoxProcessor.cpp ****     if (std::abs(d2) < den) d2 = 0.0f;
 1609              		.loc 1 154 5 view .LVU532
 1610 01b4 9FED307A 		vldr.32	s14, .L138+8
 1611              	.LBB116:
 1612              	.LBB115:
 1613              		.loc 4 76 31 view .LVU533
 1614 01b8 F0EEE77A 		vabs.f32	s15, s15
 1615              	.LBE115:
 1616              	.LBE116:
 154:src/TalkBoxProcessor.cpp ****     if (std::abs(d2) < den) d2 = 0.0f;
 1617              		.loc 1 154 5 view .LVU534
 1618 01bc F4EEC77A 		vcmpe.f32	s15, s14
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccaSMceU.s 			page 114


 1619 01c0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1620 01c4 01D5     		bpl	.L110
 154:src/TalkBoxProcessor.cpp ****     if (std::abs(d2) < den) d2 = 0.0f;
 1621              		.loc 1 154 29 is_stmt 1 discriminator 1 view .LVU535
 154:src/TalkBoxProcessor.cpp ****     if (std::abs(d2) < den) d2 = 0.0f;
 1622              		.loc 1 154 32 is_stmt 0 discriminator 1 view .LVU536
 1623 01c6 0023     		movs	r3, #0
 1624 01c8 8363     		str	r3, [r0, #56]	@ float
 1625              	.L110:
 155:src/TalkBoxProcessor.cpp ****     if (std::abs(d3) < den) d3 = 0.0f;
 1626              		.loc 1 155 5 is_stmt 1 view .LVU537
 1627              	.LVL121:
 1628              	.LBB117:
 1629              	.LBI117:
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****   { return __builtin_fabsf(__x); }
 1630              		.loc 4 75 3 view .LVU538
 1631              	.LBB118:
 1632              		.loc 4 76 5 view .LVU539
 1633              		.loc 4 76 31 is_stmt 0 view .LVU540
 1634 01ca D0ED0F7A 		vldr.32	s15, [r0, #60]
 1635              	.LBE118:
 1636              	.LBE117:
 155:src/TalkBoxProcessor.cpp ****     if (std::abs(d3) < den) d3 = 0.0f;
 1637              		.loc 1 155 5 view .LVU541
 1638 01ce 9FED2A7A 		vldr.32	s14, .L138+8
 1639              	.LBB120:
 1640              	.LBB119:
 1641              		.loc 4 76 31 view .LVU542
 1642 01d2 F0EEE77A 		vabs.f32	s15, s15
 1643              	.LBE119:
 1644              	.LBE120:
 155:src/TalkBoxProcessor.cpp ****     if (std::abs(d3) < den) d3 = 0.0f;
 1645              		.loc 1 155 5 view .LVU543
 1646 01d6 F4EEC77A 		vcmpe.f32	s15, s14
 1647 01da F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1648 01de 01D5     		bpl	.L112
 155:src/TalkBoxProcessor.cpp ****     if (std::abs(d3) < den) d3 = 0.0f;
 1649              		.loc 1 155 29 is_stmt 1 discriminator 1 view .LVU544
 155:src/TalkBoxProcessor.cpp ****     if (std::abs(d3) < den) d3 = 0.0f;
 1650              		.loc 1 155 32 is_stmt 0 discriminator 1 view .LVU545
 1651 01e0 0023     		movs	r3, #0
 1652 01e2 C363     		str	r3, [r0, #60]	@ float
 1653              	.L112:
 156:src/TalkBoxProcessor.cpp ****     // d4 is an input snapshot, not a decaying state in the same way,
 1654              		.loc 1 156 5 is_stmt 1 view .LVU546
 1655              	.LVL122:
 1656              	.LBB121:
 1657              	.LBI121:
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****   { return __builtin_fabsf(__x); }
 1658              		.loc 4 75 3 view .LVU547
 1659              	.LBB122:
 1660              		.loc 4 76 5 view .LVU548
 1661              		.loc 4 76 31 is_stmt 0 view .LVU549
 1662 01e4 D0ED107A 		vldr.32	s15, [r0, #64]
 1663              	.LBE122:
 1664              	.LBE121:
 156:src/TalkBoxProcessor.cpp ****     // d4 is an input snapshot, not a decaying state in the same way,
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccaSMceU.s 			page 115


 1665              		.loc 1 156 5 view .LVU550
 1666 01e8 9FED237A 		vldr.32	s14, .L138+8
 1667              	.LBB124:
 1668              	.LBB123:
 1669              		.loc 4 76 31 view .LVU551
 1670 01ec F0EEE77A 		vabs.f32	s15, s15
 1671              	.LBE123:
 1672              	.LBE124:
 156:src/TalkBoxProcessor.cpp ****     // d4 is an input snapshot, not a decaying state in the same way,
 1673              		.loc 1 156 5 view .LVU552
 1674 01f0 F4EEC77A 		vcmpe.f32	s15, s14
 1675 01f4 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1676 01f8 01D5     		bpl	.L114
 156:src/TalkBoxProcessor.cpp ****     // d4 is an input snapshot, not a decaying state in the same way,
 1677              		.loc 1 156 29 is_stmt 1 discriminator 1 view .LVU553
 156:src/TalkBoxProcessor.cpp ****     // d4 is an input snapshot, not a decaying state in the same way,
 1678              		.loc 1 156 32 is_stmt 0 discriminator 1 view .LVU554
 1679 01fa 0023     		movs	r3, #0
 1680 01fc 0364     		str	r3, [r0, #64]	@ float
 1681              	.L114:
 160:src/TalkBoxProcessor.cpp ****     if (std::abs(u1) < den) u1 = 0.0f;
 1682              		.loc 1 160 5 is_stmt 1 view .LVU555
 1683              	.LVL123:
 1684              	.LBB125:
 1685              	.LBI125:
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****   { return __builtin_fabsf(__x); }
 1686              		.loc 4 75 3 view .LVU556
 1687              	.LBB126:
 1688              		.loc 4 76 5 view .LVU557
 1689              		.loc 4 76 31 is_stmt 0 view .LVU558
 1690 01fe D0ED127A 		vldr.32	s15, [r0, #72]
 1691              	.LBE126:
 1692              	.LBE125:
 160:src/TalkBoxProcessor.cpp ****     if (std::abs(u1) < den) u1 = 0.0f;
 1693              		.loc 1 160 5 view .LVU559
 1694 0202 9FED1D7A 		vldr.32	s14, .L138+8
 1695              	.LBB128:
 1696              	.LBB127:
 1697              		.loc 4 76 31 view .LVU560
 1698 0206 F0EEE77A 		vabs.f32	s15, s15
 1699              	.LBE127:
 1700              	.LBE128:
 160:src/TalkBoxProcessor.cpp ****     if (std::abs(u1) < den) u1 = 0.0f;
 1701              		.loc 1 160 5 view .LVU561
 1702 020a F4EEC77A 		vcmpe.f32	s15, s14
 1703 020e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1704 0212 01D5     		bpl	.L116
 160:src/TalkBoxProcessor.cpp ****     if (std::abs(u1) < den) u1 = 0.0f;
 1705              		.loc 1 160 29 is_stmt 1 discriminator 1 view .LVU562
 160:src/TalkBoxProcessor.cpp ****     if (std::abs(u1) < den) u1 = 0.0f;
 1706              		.loc 1 160 32 is_stmt 0 discriminator 1 view .LVU563
 1707 0214 0023     		movs	r3, #0
 1708 0216 8364     		str	r3, [r0, #72]	@ float
 1709              	.L116:
 161:src/TalkBoxProcessor.cpp ****     if (std::abs(u2) < den) u2 = 0.0f;
 1710              		.loc 1 161 5 is_stmt 1 view .LVU564
 1711              	.LVL124:
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccaSMceU.s 			page 116


 1712              	.LBB129:
 1713              	.LBI129:
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****   { return __builtin_fabsf(__x); }
 1714              		.loc 4 75 3 view .LVU565
 1715              	.LBB130:
 1716              		.loc 4 76 5 view .LVU566
 1717              		.loc 4 76 31 is_stmt 0 view .LVU567
 1718 0218 D0ED137A 		vldr.32	s15, [r0, #76]
 1719              	.LBE130:
 1720              	.LBE129:
 161:src/TalkBoxProcessor.cpp ****     if (std::abs(u2) < den) u2 = 0.0f;
 1721              		.loc 1 161 5 view .LVU568
 1722 021c 9FED167A 		vldr.32	s14, .L138+8
 1723              	.LBB132:
 1724              	.LBB131:
 1725              		.loc 4 76 31 view .LVU569
 1726 0220 F0EEE77A 		vabs.f32	s15, s15
 1727              	.LBE131:
 1728              	.LBE132:
 161:src/TalkBoxProcessor.cpp ****     if (std::abs(u2) < den) u2 = 0.0f;
 1729              		.loc 1 161 5 view .LVU570
 1730 0224 F4EEC77A 		vcmpe.f32	s15, s14
 1731 0228 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1732 022c 01D5     		bpl	.L118
 161:src/TalkBoxProcessor.cpp ****     if (std::abs(u2) < den) u2 = 0.0f;
 1733              		.loc 1 161 29 is_stmt 1 discriminator 1 view .LVU571
 161:src/TalkBoxProcessor.cpp ****     if (std::abs(u2) < den) u2 = 0.0f;
 1734              		.loc 1 161 32 is_stmt 0 discriminator 1 view .LVU572
 1735 022e 0023     		movs	r3, #0
 1736 0230 C364     		str	r3, [r0, #76]	@ float
 1737              	.L118:
 162:src/TalkBoxProcessor.cpp ****     if (std::abs(u3) < den) u3 = 0.0f;
 1738              		.loc 1 162 5 is_stmt 1 view .LVU573
 1739              	.LVL125:
 1740              	.LBB133:
 1741              	.LBI133:
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****   { return __builtin_fabsf(__x); }
 1742              		.loc 4 75 3 view .LVU574
 1743              	.LBB134:
 1744              		.loc 4 76 5 view .LVU575
 1745              		.loc 4 76 31 is_stmt 0 view .LVU576
 1746 0232 D0ED147A 		vldr.32	s15, [r0, #80]
 1747              	.LBE134:
 1748              	.LBE133:
 162:src/TalkBoxProcessor.cpp ****     if (std::abs(u3) < den) u3 = 0.0f;
 1749              		.loc 1 162 5 view .LVU577
 1750 0236 9FED107A 		vldr.32	s14, .L138+8
 1751              	.LBB136:
 1752              	.LBB135:
 1753              		.loc 4 76 31 view .LVU578
 1754 023a F0EEE77A 		vabs.f32	s15, s15
 1755              	.LBE135:
 1756              	.LBE136:
 162:src/TalkBoxProcessor.cpp ****     if (std::abs(u3) < den) u3 = 0.0f;
 1757              		.loc 1 162 5 view .LVU579
 1758 023e F4EEC77A 		vcmpe.f32	s15, s14
 1759 0242 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccaSMceU.s 			page 117


 1760 0246 01D5     		bpl	.L120
 162:src/TalkBoxProcessor.cpp ****     if (std::abs(u3) < den) u3 = 0.0f;
 1761              		.loc 1 162 29 is_stmt 1 discriminator 1 view .LVU580
 162:src/TalkBoxProcessor.cpp ****     if (std::abs(u3) < den) u3 = 0.0f;
 1762              		.loc 1 162 32 is_stmt 0 discriminator 1 view .LVU581
 1763 0248 0023     		movs	r3, #0
 1764 024a 0365     		str	r3, [r0, #80]	@ float
 1765              	.L120:
 163:src/TalkBoxProcessor.cpp **** }
 1766              		.loc 1 163 5 is_stmt 1 view .LVU582
 1767              	.LVL126:
 1768              	.LBB137:
 1769              	.LBI137:
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****   { return __builtin_fabsf(__x); }
 1770              		.loc 4 75 3 view .LVU583
 1771              	.LBB138:
 1772              		.loc 4 76 5 view .LVU584
 1773              		.loc 4 76 31 is_stmt 0 view .LVU585
 1774 024c D0ED157A 		vldr.32	s15, [r0, #84]
 1775              	.LBE138:
 1776              	.LBE137:
 163:src/TalkBoxProcessor.cpp **** }
 1777              		.loc 1 163 5 view .LVU586
 1778 0250 9FED097A 		vldr.32	s14, .L138+8
 1779              	.LBB140:
 1780              	.LBB139:
 1781              		.loc 4 76 31 view .LVU587
 1782 0254 F0EEE77A 		vabs.f32	s15, s15
 1783              	.LBE139:
 1784              	.LBE140:
 163:src/TalkBoxProcessor.cpp **** }
 1785              		.loc 1 163 5 view .LVU588
 1786 0258 F4EEC77A 		vcmpe.f32	s15, s14
 1787 025c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1788 0260 01D5     		bpl	.L101
 163:src/TalkBoxProcessor.cpp **** }
 1789              		.loc 1 163 29 is_stmt 1 discriminator 1 view .LVU589
 163:src/TalkBoxProcessor.cpp **** }
 1790              		.loc 1 163 32 is_stmt 0 discriminator 1 view .LVU590
 1791 0262 0023     		movs	r3, #0
 1792 0264 4365     		str	r3, [r0, #84]	@ float
 1793              	.L101:
 164:src/TalkBoxProcessor.cpp **** 
 1794              		.loc 1 164 1 view .LVU591
 1795 0266 05B0     		add	sp, sp, #20
 1796              		.cfi_def_cfa_offset 52
 1797              		@ sp needed
 1798 0268 BDEC048B 		vldm	sp!, {d8-d9}
 1799              		.cfi_restore 82
 1800              		.cfi_restore 83
 1801              		.cfi_restore 80
 1802              		.cfi_restore 81
 1803              		.cfi_def_cfa_offset 36
 1804 026c BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1805              	.LVL127:
 1806              	.L139:
 164:src/TalkBoxProcessor.cpp **** 
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccaSMceU.s 			page 118


 1807              		.loc 1 164 1 view .LVU592
 1808              		.align	2
 1809              	.L138:
 1810 0270 9A99993E 		.word	1050253722
 1811 0274 B81E453F 		.word	1061494456
 1812 0278 FFE6DB2E 		.word	786163455
 1813              		.cfi_endproc
 1814              	.LFE3104:
 1816              		.text
 1817              	.Letext0:
 1818              		.file 5 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\machine\\_default_types.h"
 1819              		.file 6 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\_stdint.h"
 1820              		.file 7 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\stdint.h"
 1821              		.file 8 "c:\\program files\\daisytoolchain\\lib\\gcc\\arm-none-eabi\\10.2.1\\include\\stddef.h"
 1822              		.file 9 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\type_traits"
 1823              		.file 10 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\debug\\debug.h"
 1824              		.file 11 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstdint"
 1825              		.file 12 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstring"
 1826              		.file 13 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstdlib"
 1827              		.file 14 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\arm-none-eabi\\t
 1828              		.file 15 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\algorithmf
 1829              		.file 16 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\exception_
 1830              		.file 17 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\tr1\\special_fun
 1831              		.file 18 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\functional"
 1832              		.file 19 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl_algoba
 1833              		.file 20 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\predefined
 1834              		.file 21 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\math.h"
 1835              		.file 22 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\stdlib.h"
 1836              		.file 23 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\math.h"
 1837              		.file 24 "../DaisyExamples/libDaisy//Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_comp.h"
 1838              		.file 25 "../DaisyExamples/libDaisy//Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal.h"
 1839              		.file 26 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\string.h"
 1840              		.file 27 "include/TalkBoxProcessor.h"
 1841              		.file 28 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\pstl\\execution_
 1842              		.file 29 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\new"
 1843              		.file 30 "<built-in>"
ARM GAS  C:\Users\philg\AppData\Local\Temp\ccaSMceU.s 			page 119


DEFINED SYMBOLS
                            *ABS*:00000000 TalkBoxProcessor.cpp
C:\Users\philg\AppData\Local\Temp\ccaSMceU.s:17     .text._ZN16TalkBoxProcessorC2Ev:00000000 $t
C:\Users\philg\AppData\Local\Temp\ccaSMceU.s:26     .text._ZN16TalkBoxProcessorC2Ev:00000000 _ZN16TalkBoxProcessorC2Ev
C:\Users\philg\AppData\Local\Temp\ccaSMceU.s:26     .text._ZN16TalkBoxProcessorC2Ev:00000000 _ZN16TalkBoxProcessorC1Ev
C:\Users\philg\AppData\Local\Temp\ccaSMceU.s:157    .text._ZN16TalkBoxProcessorD2Ev:00000000 $t
C:\Users\philg\AppData\Local\Temp\ccaSMceU.s:165    .text._ZN16TalkBoxProcessorD2Ev:00000000 _ZN16TalkBoxProcessorD2Ev
C:\Users\philg\AppData\Local\Temp\ccaSMceU.s:165    .text._ZN16TalkBoxProcessorD2Ev:00000000 _ZN16TalkBoxProcessorD1Ev
C:\Users\philg\AppData\Local\Temp\ccaSMceU.s:239    .text._ZN16TalkBoxProcessor4initEfRK13TalkBoxParams:00000000 $t
C:\Users\philg\AppData\Local\Temp\ccaSMceU.s:247    .text._ZN16TalkBoxProcessor4initEfRK13TalkBoxParams:00000000 _ZN16TalkBoxProcessor4initEfRK13TalkBoxParams
C:\Users\philg\AppData\Local\Temp\ccaSMceU.s:559    .text._ZN16TalkBoxProcessor4initEfRK13TalkBoxParams:00000138 $d
C:\Users\philg\AppData\Local\Temp\ccaSMceU.s:572    .text._ZN16TalkBoxProcessor10lpc_durbinEPflS0_S0_:00000000 $t
C:\Users\philg\AppData\Local\Temp\ccaSMceU.s:580    .text._ZN16TalkBoxProcessor10lpc_durbinEPflS0_S0_:00000000 _ZN16TalkBoxProcessor10lpc_durbinEPflS0_S0_
C:\Users\philg\AppData\Local\Temp\ccaSMceU.s:833    .text._ZN16TalkBoxProcessor10lpc_durbinEPflS0_S0_:00000124 $d
C:\Users\philg\AppData\Local\Temp\ccaSMceU.s:841    .text._ZN16TalkBoxProcessor3lpcEPfS0_ll:00000000 $t
C:\Users\philg\AppData\Local\Temp\ccaSMceU.s:849    .text._ZN16TalkBoxProcessor3lpcEPfS0_ll:00000000 _ZN16TalkBoxProcessor3lpcEPfS0_ll
C:\Users\philg\AppData\Local\Temp\ccaSMceU.s:1121   .text._ZN16TalkBoxProcessor3lpcEPfS0_ll:00000148 $d
C:\Users\philg\AppData\Local\Temp\ccaSMceU.s:1130   .text._ZN16TalkBoxProcessor12processBlockEPKfS1_PfS2_l:00000000 $t
C:\Users\philg\AppData\Local\Temp\ccaSMceU.s:1138   .text._ZN16TalkBoxProcessor12processBlockEPKfS1_PfS2_l:00000000 _ZN16TalkBoxProcessor12processBlockEPKfS1_PfS2_l
C:\Users\philg\AppData\Local\Temp\ccaSMceU.s:1810   .text._ZN16TalkBoxProcessor12processBlockEPKfS1_PfS2_l:00000270 $d

UNDEFINED SYMBOLS
_Znaj
memset
_ZdaPv
cosf
memcpy
sqrtf
